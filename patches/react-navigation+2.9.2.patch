patch-package
--- a/node_modules/react-navigation/src/views/StackView/StackViewCard.js
+++ b/node_modules/react-navigation/src/views/StackView/StackViewCard.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { Animated, StyleSheet } from 'react-native';
+import { Animated, StyleSheet, Platform } from 'react-native';
 import createPointerEventsContainer from './createPointerEventsContainer';
 
 /**
@@ -7,7 +7,7 @@ import createPointerEventsContainer from './createPointerEventsContainer';
  */
 class Card extends React.Component {
   render() {
-    const { children, pointerEvents, style } = this.props;
+    const { children, pointerEvents, style, overlayStyle } = this.props;
     return (
       <Animated.View
         pointerEvents={pointerEvents}
@@ -15,6 +15,7 @@ class Card extends React.Component {
         style={[styles.main, style]}
       >
         {children}
+        {Platform.OS ==='android' && <Animated.View style={[styles.overlay, overlayStyle]} zIndex={100} pointerEvents="none"/>}
       </Animated.View>
     );
   }
@@ -29,6 +30,10 @@ const styles = StyleSheet.create({
     shadowOpacity: 0.2,
     shadowRadius: 5,
   },
+  overlay: {
+    ...StyleSheet.absoluteFillObject,
+    backgroundColor: '#000'
+  }
 });
 
 Card = createPointerEventsContainer(Card);
--- a/node_modules/react-navigation/src/views/StackView/StackViewLayout.js
+++ b/node_modules/react-navigation/src/views/StackView/StackViewLayout.js
@@ -23,6 +23,8 @@ import { NavigationProvider } from '../NavigationContext';
 import TransitionConfigs from './StackViewTransitionConfigs';
 import { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';
 
+import ViewOverflow from 'react-native-view-overflow';
+
 const emptyFunction = () => {};
 
 const { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get('window');
@@ -441,9 +443,9 @@ class StackViewLayout extends React.Component {
     if (headerMode === 'float') {
       const { scene } = this.props.transitionProps;
       floatingHeader = (
-        <View pointerEvents="box-none" onLayout={this._onFloatingHeaderLayout}>
+        <ViewOverflow pointerEvents="box-none" onLayout={this._onFloatingHeaderLayout}>
           {this._renderHeader(scene, headerMode)}
-        </View>
+        </ViewOverflow>
       );
     }
     const {
@@ -608,12 +610,15 @@ class StackViewLayout extends React.Component {
       marginTop = -this.state.floatingHeaderHeight;
     }
 
+    const { opacity, ...otherStyle } = style;
+
     return (
       <Card
         {...this.props.transitionProps}
         key={`card_${scene.key}`}
-        style={[style, { marginTop }, this.props.cardStyle]}
+        style={[Platform.OS==='android' ? otherStyle : style, { marginTop }, this.props.cardStyle]}
         scene={scene}
+        overlayStyle={{opacity: Animated.add(Animated.multiply(opacity, -1), 1)}}
       >
         {this._renderInnerScene(scene)}
       </Card>
