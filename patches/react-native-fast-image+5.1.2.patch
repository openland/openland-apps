patch-package
--- a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewManager.java
@@ -3,10 +3,14 @@ package com.dylanvann.fastimage;
 import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
+import android.graphics.drawable.Drawable;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.RequestManager;
 import com.bumptech.glide.load.model.GlideUrl;
+import com.bumptech.glide.RequestBuilder;
+import com.bumptech.glide.request.RequestOptions;
+
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.bridge.WritableNativeMap;
@@ -68,7 +72,8 @@ class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> imple
             return;
         }
 
-        //final GlideUrl glideUrl = FastImageViewConverter.getGlideUrl(view.getContext(), source);
+        // final GlideUrl glideUrl =
+        // FastImageViewConverter.getGlideUrl(view.getContext(), source);
         final FastImageSource imageSource = FastImageViewConverter.getImageSource(view.getContext(), source);
         final GlideUrl glideUrl = imageSource.getGlideUrl();
 
@@ -92,19 +97,22 @@ class FastImageViewManager extends SimpleViewManager<FastImageViewWithUrl> imple
         RCTEventEmitter eventEmitter = context.getJSModule(RCTEventEmitter.class);
         int viewId = view.getId();
         eventEmitter.receiveEvent(viewId, REACT_ON_LOAD_START_EVENT, new WritableNativeMap());
-
+        RequestOptions options = FastImageViewConverter.getOptions(source);
         if (requestManager != null) {
-            requestManager
+            RequestBuilder<Drawable> request = requestManager
                     // This will make this work for remote and local images. e.g.
-                    //    - file:///
-                    //    - content://
-                    //    - res:/
-                    //    - android.resource://
-                    //    - data:image/png;base64
-                    .load(imageSource.getSourceForLoad())
-                    .apply(FastImageViewConverter.getOptions(source))
-                    .listener(new FastImageRequestListener(key))
-                    .into(view);
+                    // - file:///
+                    // - content://
+                    // - res:/
+                    // - android.resource://
+                    // - data:image/png;base64
+                    .load(imageSource.getSourceForLoad()).listener(new FastImageRequestListener(key));
+            boolean disableAnimations = source.getBoolean("disableAnimations");
+            if (disableAnimations) {
+                options.dontAnimate();
+            }
+            request.apply(options);
+            request.into(view);
         }
     }
 
