{
	"operations": [
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "Account",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "sessionState",
					"fieldName": "sessionState",
					"type": "SessionState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SessionStateFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"SessionStateFull"
			],
			"sourceWithFragments": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"operationId": "04a98e5dae470fb47026cf78d90fff8033633c8f091c4f07bd23b99a03c397df"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "organizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "6970439ef6141edc404e67366b20fd796c6f41619d773ecd0f28fb54e5a2e7de"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "SettingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "watchSettings",
					"fieldName": "watchSettings",
					"type": "Settings!",
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  commentNotifications\n  commentNotificationsDelivery\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "f0a4dd6c5b935b12a9f5a3c48b6068a88deb6c0e515363eb3982172ed8ec1638"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "CreateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "createOrganization",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "f6831fe0ff169ae7f2fdbeb49611e02c6427b3a97a8404828b62101ff0511f33"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      id\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "joined",
							"fieldName": "joined",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "forEmail",
							"fieldName": "forEmail",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "forName",
							"fieldName": "forName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isCommunity",
									"fieldName": "alphaIsCommunity",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "about",
									"fieldName": "about",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      id\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "a884459767adad879c2dd1441e8a4c0ad535a3680af47539a223801c16fb2326"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "appInvite",
					"fieldName": "appInviteInfo",
					"type": "AppInvite",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "inviter",
							"fieldName": "inviter",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "beb4c8a14ef6f3e6be1d5fba68fd42deab1ece50bafbcc0727516280d0dee2fc"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountAppInvite {\n  invite: appInvite\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "appInvite",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountAppInvite {\n  invite: appInvite\n}",
			"operationId": "92485e320732c847a4bfd2d1e9f0667eb76669f900996bb1908f0d5e67716b04"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "alphaJoinInvite",
					"fieldName": "alphaJoinInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"operationId": "87acd52a2be3fa91bc8fb5651c16d36e338087d9bd02fa7da766f1bf2be88802"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInvites",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountInvites {\n  invites: alphaInvites {\n    __typename\n    id\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "invites",
					"fieldName": "alphaInvites",
					"type": "[Invite!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountInvites {\n  invites: alphaInvites {\n    __typename\n    id\n    key\n  }\n}",
			"operationId": "7c6375f060cf1743d397833557b02bf7457172113e285ae631893fc31ee3c82a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInvitesHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountInvitesHistory {\n  invites: alphaInvitesHistory {\n    __typename\n    forEmail\n    isGlobal\n    acceptedBy {\n      __typename\n      id\n      name\n      picture\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invites",
					"fieldName": "alphaInvitesHistory",
					"type": "[InviteHistotyInfo!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "forEmail",
							"fieldName": "forEmail",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isGlobal",
							"fieldName": "isGlobal",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "acceptedBy",
							"fieldName": "acceptedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "picture",
									"fieldName": "picture",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountInvitesHistory {\n  invites: alphaInvitesHistory {\n    __typename\n    forEmail\n    isGlobal\n    acceptedBy {\n      __typename\n      id\n      name\n      picture\n    }\n  }\n}",
			"operationId": "ef5fbf28a8dd4b1903f16d67118321f3e811c9be7c758eaae48424ff44a1b2bb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountCreateInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [],
			"source": "mutation AccountCreateInvite {\n  alphaCreateInvite {\n    __typename\n    id\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateInvite",
					"fieldName": "alphaCreateInvite",
					"type": "Invite!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountCreateInvite {\n  alphaCreateInvite {\n    __typename\n    id\n    key\n  }\n}",
			"operationId": "ed84e765334ed5cf84882a9936cfed6857acffe3ceb6ffe346f1f92cdf54c193"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountDestroyInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation AccountDestroyInvite($id: ID!) {\n  alphaDeleteInvite(id: $id)\n}",
			"fields": [
				{
					"responseName": "alphaDeleteInvite",
					"fieldName": "alphaDeleteInvite",
					"type": "String!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountDestroyInvite($id: ID!) {\n  alphaDeleteInvite(id: $id)\n}",
			"operationId": "7b0d5b34eb34e2fbd32de3cf7af2065e1055f1cf01a3b2708208fe310198190e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "ProfilePrefill",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"fields": [
				{
					"responseName": "prefill",
					"fieldName": "myProfilePrefill",
					"type": "ProfilePrefill",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "picture",
							"fieldName": "picture",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"operationId": "869a1ca9997f74b34698133a00adf362cbfa0563b20c47c0f13d88eefe310330"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "CreateUserProfileAndOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "user",
					"type": "ProfileInput!"
				},
				{
					"name": "organization",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateUserProfileAndOrganization",
					"fieldName": "alphaCreateUserProfileAndOrganization",
					"type": "AlphaSignupData!",
					"args": [
						{
							"name": "user",
							"value": {
								"kind": "Variable",
								"variableName": "user"
							},
							"type": "ProfileInput!"
						},
						{
							"name": "organization",
							"value": {
								"kind": "Variable",
								"variableName": "organization"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "7340281caecddcf60e9abe92f50155473fede238ee61acbd72aa6a8d912299a4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "ReportOnline",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "active",
					"type": "Boolean"
				},
				{
					"name": "platform",
					"type": "String"
				}
			],
			"source": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"fields": [
				{
					"responseName": "presenceReportOnline",
					"fieldName": "presenceReportOnline",
					"type": "String!",
					"args": [
						{
							"name": "timeout",
							"value": 5000,
							"type": "Int!"
						},
						{
							"name": "active",
							"value": {
								"kind": "Variable",
								"variableName": "active"
							},
							"type": "Boolean"
						},
						{
							"name": "platform",
							"value": {
								"kind": "Variable",
								"variableName": "platform"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"operationId": "dae5bc153e0fe1a927d7ac90e49a4215e112464e021ad7c1717be44633465bf0"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				},
				{
					"name": "type",
					"type": "PushType!"
				}
			],
			"source": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"fields": [
				{
					"responseName": "registerPush",
					"fieldName": "registerPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "PushType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"operationId": "6a670ff6571c8c5ec63ca087a36729a73616fb193eb662a8af14689e55aaf45e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "FetchPushSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"fields": [
				{
					"responseName": "pushSettings",
					"fieldName": "pushSettings",
					"type": "PushSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "webPushKey",
							"fieldName": "webPushKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"operationId": "3e592c4aad6b00c990c8c205d08335e8e69578057c93284e084cf25e96b4d651"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterWebPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				}
			],
			"source": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"fields": [
				{
					"responseName": "registerWebPush",
					"fieldName": "registerWebPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"operationId": "b2f5515c7a71a4edd320ba247409da877f20df3ad9e153b3baddf105227b2250"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "MyApps",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "apps",
					"fieldName": "myApps",
					"type": "[AppProfile!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "7f5fcbd35608cf9f4f87d3244e1d9279834bbf7afa7cbf7ef10ec319f7eee515"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "CreateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			],
			"source": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "createApp",
					"fieldName": "createApp",
					"type": "AppProfile!",
					"args": [
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e66c8c46fe9ca81e6752c75cfdc56b39ab2f95b065b332ee0b5b74cfba58d247"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UpdateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "AppProfileInput!"
				}
			],
			"source": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateAppProfile",
					"fieldName": "updateAppProfile",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "AppProfileInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "d1d94b978780c5722ad634731a6d5868f94dfd702f0e12e99ae1c4a3a6c4d275"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "RefreshAppToken",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				}
			],
			"source": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "refreshAppToken",
					"fieldName": "refreshAppToken",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e65cb17b382c289dda44a069bf5ade942a5e118656a6b7ad0b4ac7da0079ad57"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "AddAppToChat",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}",
			"fields": [
				{
					"responseName": "addAppToChat",
					"fieldName": "addAppToChat",
					"type": "AppChat!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppChat"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppChat"
			],
			"sourceWithFragments": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}\nfragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"operationId": "6eaa02124f5d5f5122b497b98351b2f30cf23ebd7ce4b906c147c4a883a2db01"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UserStorage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "keys",
					"type": "[String!]!"
				}
			],
			"source": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorage",
					"fieldName": "userStorage",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "keys",
							"value": {
								"kind": "Variable",
								"variableName": "keys"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "f2955d05aeba62849ed54aa06e079023314a4e56b24bb40e466e4218c6e20e54"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UserStorageSet",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "data",
					"type": "[AppStorageValueInput!]!"
				}
			],
			"source": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorageSet",
					"fieldName": "userStorageSet",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "data",
							"value": {
								"kind": "Variable",
								"variableName": "data"
							},
							"type": "[AppStorageValueInput!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "6151ff3ad440a27aab076bde3d14d4a346e77cb2eaa66ceed11502d4fe3cf096"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "name",
					"type": "String!"
				}
			],
			"source": "mutation BadgeCreate($name: String!) {\n  badgeCreate(name: $name) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "badgeCreate",
					"fieldName": "badgeCreate",
					"type": "User!",
					"args": [
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeCreate($name: String!) {\n  badgeCreate(name: $name) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "a45027be3bcf77fe1cf113ca1415f1d1b11f6a8792d4bf6b3376cee46af5d9c7"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeCreateToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "name",
					"type": "String!"
				}
			],
			"source": "mutation BadgeCreateToRoom($roomId: ID!, $name: String!) {\n  badgeCreateToRoom(roomId: $roomId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "badgeCreateToRoom",
					"fieldName": "badgeCreateToRoom",
					"type": "UserBadge!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeCreateToRoom($roomId: ID!, $name: String!) {\n  badgeCreateToRoom(roomId: $roomId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "4fc87807cc221260a56f33238780f236720e33cd67cb2f29409756ac524aad86"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeSetToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "badgeId",
					"type": "ID!"
				}
			],
			"source": "mutation BadgeSetToRoom($roomId: ID!, $badgeId: ID!) {\n  badgeSetToRoom(roomId: $roomId, badgeId: $badgeId) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "badgeSetToRoom",
					"fieldName": "badgeSetToRoom",
					"type": "UserBadge!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeSetToRoom($roomId: ID!, $badgeId: ID!) {\n  badgeSetToRoom(roomId: $roomId, badgeId: $badgeId) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "b3b14d89a528a26cbd2c41a553e0f5aebbf8aeb4adf55e4b2df20cfeb9093d89"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeUnsetToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation BadgeUnsetToRoom($roomId: ID!) {\n  badgeUnsetToRoom(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "badgeUnsetToRoom",
					"fieldName": "badgeUnsetToRoom",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation BadgeUnsetToRoom($roomId: ID!) {\n  badgeUnsetToRoom(roomId: $roomId)\n}",
			"operationId": "d70cd0d388d6a2dae9e81d1c7d55044be8c1662b4b68e9f15de3695b642ecd98"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeDelete",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "badgeId",
					"type": "ID!"
				}
			],
			"source": "mutation BadgeDelete($badgeId: ID!) {\n  badgeDelete(badgeId: $badgeId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "badgeDelete",
					"fieldName": "badgeDelete",
					"type": "User!",
					"args": [
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeDelete($badgeId: ID!) {\n  badgeDelete(badgeId: $badgeId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "59f3638f5f0399f771486bf70baae59defd2d328bc6245b89d9604a79a6c1a9f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeSetPrimary",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "badgeId",
					"type": "ID!"
				}
			],
			"source": "mutation BadgeSetPrimary($badgeId: ID!) {\n  badgeSetPrimary(badgeId: $badgeId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "badgeSetPrimary",
					"fieldName": "badgeSetPrimary",
					"type": "User!",
					"args": [
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeSetPrimary($badgeId: ID!) {\n  badgeSetPrimary(badgeId: $badgeId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "d8c97688f21675e75c4a2ca0a79b80c4c05cbb96f42b7fcc50393d4460f2293e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeUnsetPrimary",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [],
			"source": "mutation BadgeUnsetPrimary {\n  badgeUnsetPrimary {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "badgeUnsetPrimary",
					"fieldName": "badgeUnsetPrimary",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation BadgeUnsetPrimary {\n  badgeUnsetPrimary {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "9980ed34d8e55d048d2b3107ddf5444e8a6f78aa35311219b2a474e17f50703f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "BadgeInRoom",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query BadgeInRoom($roomId: ID!) {\n  badgeInRoom(roomId: $roomId) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "badgeInRoom",
					"fieldName": "badgeInRoom",
					"type": "UserBadge",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query BadgeInRoom($roomId: ID!) {\n  badgeInRoom(roomId: $roomId) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "6f7ae40571e218d557ea71a86356df6bb3170983740edbe286cc407723f02b46"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "name",
					"type": "String!"
				}
			],
			"source": "mutation SuperBadgeCreate($userId: ID!, $name: String!) {\n  superBadgeCreate(userId: $userId, name: $name) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeCreate",
					"fieldName": "superBadgeCreate",
					"type": "User!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "super-admin methods",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeCreate($userId: ID!, $name: String!) {\n  superBadgeCreate(userId: $userId, name: $name) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "01ae6947d559029c3a4e7d104f28239840079eaa0e50614e4deffdc10cb7ef03"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeCreateToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "name",
					"type": "String!"
				}
			],
			"source": "mutation SuperBadgeCreateToRoom($roomId: ID!, $userId: ID!, $name: String!) {\n  superBadgeCreateToRoom(roomId: $roomId, userId: $userId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeCreateToRoom",
					"fieldName": "superBadgeCreateToRoom",
					"type": "UserBadge!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeCreateToRoom($roomId: ID!, $userId: ID!, $name: String!) {\n  superBadgeCreateToRoom(roomId: $roomId, userId: $userId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "ff85fe4d68deab3033a53cd9c06d871036b28e43169d4f23029cff7168230d0d"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeSetToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "badgeId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeSetToRoom($roomId: ID!, $badgeId: ID!, $userId: ID!) {\n  superBadgeSetToRoom(roomId: $roomId, badgeId: $badgeId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeSetToRoom",
					"fieldName": "superBadgeSetToRoom",
					"type": "UserBadge!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeSetToRoom($roomId: ID!, $badgeId: ID!, $userId: ID!) {\n  superBadgeSetToRoom(roomId: $roomId, badgeId: $badgeId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "ed426ccb2246875a39097d669fcfa3f8346056eb384206f8c810f7779bcd8fea"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeUnsetToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "badgeId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeUnsetToRoom($roomId: ID!, $badgeId: ID!, $userId: ID!) {\n  superBadgeUnsetToRoom(roomId: $roomId, badgeId: $badgeId, userId: $userId)\n}",
			"fields": [
				{
					"responseName": "superBadgeUnsetToRoom",
					"fieldName": "superBadgeUnsetToRoom",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperBadgeUnsetToRoom($roomId: ID!, $badgeId: ID!, $userId: ID!) {\n  superBadgeUnsetToRoom(roomId: $roomId, badgeId: $badgeId, userId: $userId)\n}",
			"operationId": "96b567eab225ccae279bc0ed1f6318892a430e9570535e2e99556953652fff5c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeDelete",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "badgeId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeDelete($badgeId: ID!, $userId: ID!) {\n  superBadgeDelete(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeDelete",
					"fieldName": "superBadgeDelete",
					"type": "User!",
					"args": [
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeDelete($badgeId: ID!, $userId: ID!) {\n  superBadgeDelete(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "13b4f8e94cd77d7694ad641b1caf00f895004e054515f1db8a23d2080f18117e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeVerify",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "badgeId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeVerify($badgeId: ID!, $userId: ID!) {\n  superBadgeVerify(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeVerify",
					"fieldName": "superBadgeVerify",
					"type": "User!",
					"args": [
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeVerify($badgeId: ID!, $userId: ID!) {\n  superBadgeVerify(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "352d756ed1cc360e9decfa0f8d8110b5a4c91c61b04b1e1956cba16ac833ffbd"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeUnverify",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "badgeId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeUnverify($badgeId: ID!, $userId: ID!) {\n  superBadgeUnverify(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeUnverify",
					"fieldName": "superBadgeUnverify",
					"type": "User!",
					"args": [
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badges",
							"fieldName": "badges",
							"type": "[UserBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeUnverify($badgeId: ID!, $userId: ID!) {\n  superBadgeUnverify(badgeId: $badgeId, userId: $userId) {\n    __typename\n    ... on User {\n      id\n      badges {\n        __typename\n        ...UserBadge\n      }\n      primaryBadge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "15764236d71d4292676bf224e1d835796879cf56231a43193fc087625724c651"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeInRoom",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query SuperBadgeInRoom($roomId: ID!, $userId: ID!) {\n  superBadgeInRoom(roomId: $roomId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeInRoom",
					"fieldName": "superBadgeInRoom",
					"type": "UserBadge",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"description": "super-admin methods",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query SuperBadgeInRoom($roomId: ID!, $userId: ID!) {\n  superBadgeInRoom(roomId: $roomId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "fb59369b82502a7b20d6053d2730d53f253a353b9f3754a33a8a6ffdad2a500c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Dialogs",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      id\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...DaialogListMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "dialogs",
					"fieldName": "dialogs",
					"type": "DialogsConnection!",
					"args": [
						{
							"name": "first",
							"value": 20,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[Dialog!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "cid",
									"fieldName": "cid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fid",
									"fieldName": "fid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "DialogKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unreadCount",
									"fieldName": "unreadCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isMuted",
									"fieldName": "isMuted",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "haveMention",
									"fieldName": "haveMention",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "topMessage",
									"fieldName": "alphaTopMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DaialogListMessage"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "dialogsState",
					"type": "DialogUpdateState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "counter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"DaialogListMessage",
				"UserBadge"
			],
			"sourceWithFragments": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      id\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...DaialogListMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}\nfragment DaialogListMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    id\n    name\n    firstName\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "df6d3f4819731b933c2a51343e283c3f1c6905cbbec8e6bf3af5c5d2901d10a0"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "CommentWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "fromState",
					"type": "String"
				}
			],
			"source": "subscription CommentWatch($peerId: ID!, $fromState: String) {\n  event: commentUpdates(peerId: $peerId, fromState: $fromState) {\n    __typename\n    ... on CommentUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n    ... on CommentUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "commentUpdates",
					"type": "CommentUpdateContainer",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "fromState"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "CommentUpdateSingle",
							"possibleTypes": [
								"CommentUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "CommentUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "CommentUpdateBatch",
							"possibleTypes": [
								"CommentUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[CommentUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommentUpdateFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "subscription CommentWatch($peerId: ID!, $fromState: String) {\n  event: commentUpdates(peerId: $peerId, fromState: $fromState) {\n    __typename\n    ... on CommentUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n    ... on CommentUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n  }\n}\nfragment CommentUpdateFragment on CommentUpdate {\n  __typename\n  ... on CommentReceived {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n  ... on CommentUpdated {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "3628148ef64edb84bf691b4e115216d982f911ffd4848c0dff0b8c814cba4d0c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "chatUpdates",
					"type": "ChatUpdateContainer!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "ChatUpdateSingle",
							"possibleTypes": [
								"ChatUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "ChatUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "ChatUpdateBatch",
							"possibleTypes": [
								"ChatUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[ChatUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ChatUpdateFragment",
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}\nfragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"operationId": "7aaa80839c392b000ddf1882548a0eaf69171740d5361ee7ca3193c81e19477e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "DialogsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "dialogsUpdates",
					"type": "DialogUpdateContainer!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "DialogUpdateSingle",
							"possibleTypes": [
								"DialogUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "DialogUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "DialogUpdateBatch",
							"possibleTypes": [
								"DialogUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[DialogUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"DialogUpdateFragment",
				"TinyMessage",
				"UserTiny",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}\nfragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogTitleUpdated {\n    cid\n    title\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogPhotoUpdated {\n    cid\n    photo\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n}\nfragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    isMentioned\n    commentsCount\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "b2e9dc85c6eed8112e48022c4943b5085d110021ba3e5623c8c3a4355062c4f8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Room",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "87163f168efcb5213715cb5ec21bcfc8a50dc36f6b71002eebabd72df8b9be09"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Rooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "ids",
					"type": "[ID!]!"
				}
			],
			"source": "query Rooms($ids: [ID!]!) {\n  rooms(ids: $ids) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "rooms",
					"fieldName": "rooms",
					"type": "[Room!]!",
					"args": [
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query Rooms($ids: [ID!]!) {\n  rooms(ids: $ids) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "82170429afaeb993c5d3bbb0903d2ea0223067bd45094e4f7e7392fef8839c50"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomPico",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomPico($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomNano\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomNano"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomNano"
			],
			"sourceWithFragments": "query RoomPico($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomNano\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"operationId": "925db034197c862f33e4821bc90734d9f5c26839a6bf050d67281723f5689ff5"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomChat",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomChat($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      membership\n      isChannel\n      role\n      canEdit\n      photo\n      membersCount\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "pinnedMessage",
									"fieldName": "pinnedMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FullMessage"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "canEdit",
									"fieldName": "canEdit",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pinnedMessage",
									"fieldName": "pinnedMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FullMessage"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomChat($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      membership\n      isChannel\n      role\n      canEdit\n      photo\n      membersCount\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n    }\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "c3492d5947c240acd753d3c0c17e98750b9ec057acef01d630f73dce2e1ed846"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomHeader",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomHeader($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n        photo\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      description\n      socialImage\n      membersCount\n      canEdit\n      isChannel\n      role\n      organization {\n        __typename\n        id\n        name\n        isOwner: betaIsOwner\n        isAdmin: betaIsAdmin\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n      welcomeMessage {\n        __typename\n        isOn\n        message\n        sender {\n          __typename\n          id\n          name\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "primaryOrganization",
											"fieldName": "primaryOrganization",
											"type": "Organization",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "canEdit",
									"fieldName": "canEdit",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isOwner",
											"fieldName": "betaIsOwner",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isAdmin",
											"fieldName": "betaIsAdmin",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "welcomeMessage",
									"fieldName": "welcomeMessage",
									"type": "WelcomeMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "isOn",
											"fieldName": "isOn",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "sender",
											"fieldName": "sender",
											"type": "User",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomHeader($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n        photo\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      description\n      socialImage\n      membersCount\n      canEdit\n      isChannel\n      role\n      organization {\n        __typename\n        id\n        name\n        isOwner: betaIsOwner\n        isAdmin: betaIsAdmin\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n      welcomeMessage {\n        __typename\n        isOn\n        message\n        sender {\n          __typename\n          id\n          name\n        }\n      }\n    }\n  }\n}",
			"operationId": "ef07650ca43fdd1ec50b7dd2ea48bf136cd61a47701ef502cb088d6174968766"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomWithoutMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomWithoutMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFullWithoutMembers\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFullWithoutMembers"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFullWithoutMembers",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"OrganizationMedium",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomWithoutMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFullWithoutMembers\n  }\n}\nfragment RoomFullWithoutMembers on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "b62a5d71270180a3c1b45821e723b6ce398553aa99de67a16a1c70acd37a754c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomTiny",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "72047b24d6342ed297248cfe45e33d8cecc7d4ca98bb3a88d69d830dcada6e2a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSuper",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"fields": [
				{
					"responseName": "roomSuper",
					"fieldName": "roomSuper",
					"type": "RoomSuper",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"operationId": "ea0da06309ee39889fa82d9c702244cb768bff10fee5c16ea37ef267985a5dcb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "PinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage: gammaPinMessage(chatId: $chatId, messageId: $messageId) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "pinMessage",
					"fieldName": "gammaPinMessage",
					"type": "Room!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage: gammaPinMessage(chatId: $chatId, messageId: $messageId) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "c42d5847d4d9c31f9b650431c180127769aebc55586a42886b6f16cf45a0fef8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "UnpinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage: gammaUnpinMessage(chatId: $chatId) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "unpinMessage",
					"fieldName": "gammaUnpinMessage",
					"type": "Room!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage: gammaUnpinMessage(chatId: $chatId) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "c1efc4f2b9ded785aade386080e8ae1b360890d5b6410db59bffd088a78a44b7"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageSetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation MessageSetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageSetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "9f724c1931d29de4ff56e283a49dcb7bee4425d33089076e8259f313cb9a9a87"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SwitchReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "from",
					"type": "String!"
				},
				{
					"name": "to",
					"type": "String!"
				}
			],
			"source": "mutation SwitchReaction($messageId: ID!, $from: String!, $to: String!) {\n  betaReactionSet(mid: $messageId, reaction: $to)\n  betaReactionRemove(mid: $messageId, reaction: $from)\n}",
			"fields": [
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "to"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaReactionRemove",
					"fieldName": "betaReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "from"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SwitchReaction($messageId: ID!, $from: String!, $to: String!) {\n  betaReactionSet(mid: $messageId, reaction: $to)\n  betaReactionRemove(mid: $messageId, reaction: $from)\n}",
			"operationId": "6ab3b0a4733a61f350c28991ebf85cc7d4321be6ca72ff8088125c66c494d992"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageUnsetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation MessageUnsetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionRemove(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "betaReactionRemove",
					"fieldName": "betaReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageUnsetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionRemove(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "dc032ef7e85eb37d26760af50f7db33697bcbb08e4e6a53ea4458b267e067f40"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SendPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "text",
					"type": "String!"
				},
				{
					"name": "attachments",
					"type": "[String!]"
				},
				{
					"name": "postType",
					"type": "PostMessageType!"
				}
			],
			"source": "mutation SendPostMessage($conversationId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  sendPostMessage: alphaSendPostMessage(conversationId: $conversationId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"fields": [
				{
					"responseName": "sendPostMessage",
					"fieldName": "alphaSendPostMessage",
					"type": "ConversationEventMessage!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						},
						{
							"name": "text",
							"value": {
								"kind": "Variable",
								"variableName": "text"
							},
							"type": "String!"
						},
						{
							"name": "attachments",
							"value": {
								"kind": "Variable",
								"variableName": "attachments"
							},
							"type": "[String!]"
						},
						{
							"name": "postType",
							"value": {
								"kind": "Variable",
								"variableName": "postType"
							},
							"type": "PostMessageType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendPostMessage($conversationId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  sendPostMessage: alphaSendPostMessage(conversationId: $conversationId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"operationId": "f59b0bdb011d2d2fe6889c3f3b19be9b62205e5b3dc8684b3e0fd50cca5f94de"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "EditPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "text",
					"type": "String!"
				},
				{
					"name": "attachments",
					"type": "[String!]"
				},
				{
					"name": "postType",
					"type": "PostMessageType!"
				}
			],
			"source": "mutation EditPostMessage($messageId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  editPostMessage: alphaEditPostMessage(messageId: $messageId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"fields": [
				{
					"responseName": "editPostMessage",
					"fieldName": "alphaEditPostMessage",
					"type": "ConversationEventMessage!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						},
						{
							"name": "text",
							"value": {
								"kind": "Variable",
								"variableName": "text"
							},
							"type": "String!"
						},
						{
							"name": "attachments",
							"value": {
								"kind": "Variable",
								"variableName": "attachments"
							},
							"type": "[String!]"
						},
						{
							"name": "postType",
							"value": {
								"kind": "Variable",
								"variableName": "postType"
							},
							"type": "PostMessageType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditPostMessage($messageId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  editPostMessage: alphaEditPostMessage(messageId: $messageId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"operationId": "1c2dc61859a826aba683ecc21b65dc248c1b59f5d3192e8229c4555db1ac66bb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RespondPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "buttonId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation RespondPostMessage($messageId: ID!, $buttonId: ID!, $reaction: String!) {\n  alphaRespondPostMessage(messageId: $messageId, buttonId: $buttonId)\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "alphaRespondPostMessage",
					"fieldName": "alphaRespondPostMessage",
					"type": "Boolean",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "buttonId",
							"value": {
								"kind": "Variable",
								"variableName": "buttonId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RespondPostMessage($messageId: ID!, $buttonId: ID!, $reaction: String!) {\n  alphaRespondPostMessage(messageId: $messageId, buttonId: $buttonId)\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "6938e142dd9f03f679fcda35fcfbbfa7efcd38e432a942049ba9f5e99eb3c820"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SaveDraftMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String!"
				}
			],
			"source": "mutation SaveDraftMessage($conversationId: ID!, $message: String!) {\n  conversationDraftUpdate(conversationId: $conversationId, message: $message)\n}",
			"fields": [
				{
					"responseName": "conversationDraftUpdate",
					"fieldName": "conversationDraftUpdate",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SaveDraftMessage($conversationId: ID!, $message: String!) {\n  conversationDraftUpdate(conversationId: $conversationId, message: $message)\n}",
			"operationId": "274718b5770ce92fe0cb9f4f0a9cd6320fca98e1f3bff588f711221b2372ca4f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "GetDraftMessage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "query GetDraftMessage($conversationId: ID!) {\n  message: conversationDraft(conversationId: $conversationId)\n}",
			"fields": [
				{
					"responseName": "message",
					"fieldName": "conversationDraft",
					"type": "String",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query GetDraftMessage($conversationId: ID!) {\n  message: conversationDraft(conversationId: $conversationId)\n}",
			"operationId": "c136a57f6da3543706ecd7709316c15d8008db66e054788a6ce4495bdbd74f7e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "GlobalCounter",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "alphaNotificationCounter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"operationId": "ba2ff26fcac56656eedb1e52d5625334b42a9f5142da25fc00ec6c10f030d5b3"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query ChatHistory($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "messages",
					"fieldName": "messages",
					"type": "[ModernMessage!]!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query ChatHistory($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "57461e1547983e9354a369139585e448a5e8e3f58c0a61158982ba0485d310e4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatInit",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query ChatInit($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "messages",
					"fieldName": "messages",
					"type": "[ModernMessage!]!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "lastReadedMessage",
					"fieldName": "lastReadedMessage",
					"type": "ModernMessage",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "query ChatInit($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"operationId": "ad4c67598afb9f8d8f82def0c76e7363b57b9788f5a60a804f0b868cc6c3433b"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SendMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation SendMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  sentMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"fields": [
				{
					"responseName": "sentMessage",
					"fieldName": "sendMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  sentMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"operationId": "17897dd83cbaed23e3d1c9177f48590e9807ff68a149500fb3a5de2993330297"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ReplyMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation ReplyMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  replyMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"fields": [
				{
					"responseName": "replyMessage",
					"fieldName": "sendMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReplyMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  replyMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"operationId": "9db24e9080723af93e14c99f0276d800415c36e54d5b7854a556180e4e5ae2e4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "mid",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"fields": [
				{
					"responseName": "roomRead",
					"fieldName": "roomRead",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "mid"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"operationId": "87959d307e4b52880fbc752c7fc67974473b6733badac97a9f1634fef3ffad97"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatSearchGroup",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "members",
					"type": "[ID!]!"
				}
			],
			"source": "query ChatSearchGroup($members: [ID!]!) {\n  group: alphaChatSearch(members: $members) {\n    __typename\n    id\n    flexibleId\n  }\n}",
			"fields": [
				{
					"responseName": "group",
					"fieldName": "alphaChatSearch",
					"type": "Conversation",
					"args": [
						{
							"name": "members",
							"value": {
								"kind": "Variable",
								"variableName": "members"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "flexibleId",
							"fieldName": "flexibleId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ChatSearchGroup($members: [ID!]!) {\n  group: alphaChatSearch(members: $members) {\n    __typename\n    id\n    flexibleId\n  }\n}",
			"operationId": "f20769efeee3f92d24bc85f50787a79bd7597921377e8c37c2093e29c991a6a4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "kind",
					"type": "SharedRoomKind!"
				},
				{
					"name": "members",
					"type": "[ID!]!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "organizationId",
					"type": "ID"
				},
				{
					"name": "channel",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "betaRoomCreate",
					"type": "SharedRoom!",
					"args": [
						{
							"name": "kind",
							"value": {
								"kind": "Variable",
								"variableName": "kind"
							},
							"type": "SharedRoomKind!"
						},
						{
							"name": "members",
							"value": {
								"kind": "Variable",
								"variableName": "members"
							},
							"type": "[ID!]!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String"
						},
						{
							"name": "description",
							"value": {
								"kind": "Variable",
								"variableName": "description"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						},
						{
							"name": "channel",
							"value": {
								"kind": "Variable",
								"variableName": "channel"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"description": "Room mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"operationId": "6599eb079eec56667dc804822d8e3b1dabed6badf0889ab8cba47ed7cb556596"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomCreateIntro",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				}
			],
			"source": "mutation RoomCreateIntro($roomId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroSend(room: $roomId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"fields": [
				{
					"responseName": "intro",
					"fieldName": "betaIntroSend",
					"type": "Boolean!",
					"args": [
						{
							"name": "room",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomCreateIntro($roomId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroSend(room: $roomId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"operationId": "caa61d4c68953e3abfae8948c07cfbaad8523ae0ddd3de6a40e5f58ebc94826e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomEditIntro",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				}
			],
			"source": "mutation RoomEditIntro($messageId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroEdit(mid: $messageId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"fields": [
				{
					"responseName": "intro",
					"fieldName": "betaIntroEdit",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomEditIntro($messageId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroEdit(mid: $messageId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"operationId": "2b9c001f97af214adc78cd1e496a5f712badfb7fd686b00ab757d5486abf9588"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SetTyping",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"fields": [
				{
					"responseName": "typingSend",
					"fieldName": "typingSend",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": "TEXT",
							"type": "TypingType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"operationId": "3b376c9bf15b7e2e33ae0919cd60784a7f08b4b13818e26b2c9787fc4241fe2c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "CancelTyping",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "mutation CancelTyping($conversationId: ID!) {\n  typingCancel(conversationId: $conversationId)\n}",
			"fields": [
				{
					"responseName": "typingCancel",
					"fieldName": "typingCancel",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CancelTyping($conversationId: ID!) {\n  typingCancel(conversationId: $conversationId)\n}",
			"operationId": "4ef135377fde8eb83287cef3d3cf25a742f8ccb2715f054fd81126c66f975ef5"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAddMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomAddMember($roomId: ID!, $userId: ID!) {\n  betaRoomInvite(roomId: $roomId, invites: [{userId: $userId, role: MEMBER}]) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomInvite",
					"fieldName": "betaRoomInvite",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "invites",
							"value": [
								{
									"userId": {
										"kind": "Variable",
										"variableName": "userId"
									},
									"role": "MEMBER"
								}
							],
							"type": "[RoomInviteInput!]!"
						}
					],
					"isConditional": false,
					"description": "Members mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomAddMember($roomId: ID!, $userId: ID!) {\n  betaRoomInvite(roomId: $roomId, invites: [{userId: $userId, role: MEMBER}]) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "4e8ab10c3335e44554234d30bf1baf2ad3395817f0c132562bf2755b69319456"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeclineJoinReuest",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeclineJoinReuest($roomId: ID!, $userId: ID!) {\n  betaRoomDeclineJoinRequest(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomDeclineJoinRequest",
					"fieldName": "betaRoomDeclineJoinRequest",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomDeclineJoinReuest($roomId: ID!, $userId: ID!) {\n  betaRoomDeclineJoinRequest(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "dc9c329f2f0afeb9a29e781a85b597dc81d6de24ca7802f90503073a24817c60"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAddMembers",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "invites",
					"type": "[RoomInviteInput!]!"
				}
			],
			"source": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  betaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomInvite",
					"fieldName": "betaRoomInvite",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "invites",
							"value": {
								"kind": "Variable",
								"variableName": "invites"
							},
							"type": "[RoomInviteInput!]!"
						}
					],
					"isConditional": false,
					"description": "Members mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  betaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "682c6b9be1de273a4eae5787f97efc317c8f303c373a9e24e52fb1631084fcb9"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomKick",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomKick",
					"fieldName": "betaRoomKick",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "90c6025420b1ba6f264023739774ba2803fd0aa3f6ef02c151cfd5604bb7edd2"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomChangeRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "RoomMemberRole!"
				}
			],
			"source": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomChangeRole",
					"fieldName": "betaRoomChangeRole",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "RoomMemberRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "446deed506749e6d05a124edc4c32f363a1aae0d55901da65f7e1341e72da849"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomLeave",
					"fieldName": "betaRoomLeave",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "23475a06ba4335c43464fb91660e067943d3129fc64b3ba4f2b3d28f88c61418"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSearchText",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query RoomSearchText($query: String!) {\n  items: betaDialogTextSearch(query: $query) {\n    __typename\n    id2: id\n    id: cid\n    title\n    flexibleId: fid\n    photo\n    kind\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "betaDialogTextSearch",
					"type": "[Dialog!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id2",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "id",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "flexibleId",
							"fieldName": "fid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "DialogKind!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSearchText($query: String!) {\n  items: betaDialogTextSearch(query: $query) {\n    __typename\n    id2: id\n    id: cid\n    title\n    flexibleId: fid\n    photo\n    kind\n  }\n}",
			"operationId": "1910ffa4dbb0eb380149622a0e39c9c7e40d519fd08ab5433161fbf20fa4f604"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				}
			],
			"source": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          membership\n          membersCount\n          organization {\n            __typename\n            id\n            photo\n            name\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "betaRoomSearch",
					"type": "RoomConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[RoomConnectionEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "kind",
											"fieldName": "kind",
											"type": "SharedRoomKind!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isChannel",
											"fieldName": "isChannel",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membership",
											"fieldName": "membership",
											"type": "SharedRoomMembershipStatus!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "organization",
											"fieldName": "organization",
											"type": "Organization",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "photo",
													"fieldName": "photo",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          membership\n          membersCount\n          organization {\n            __typename\n            id\n            photo\n            name\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"operationId": "fa5c3fdfcfc9c1893b8c7f73610256409b5bab0f15d3cc69390e04d06965d6fb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterFeatured",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "featured",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterFeatured",
					"fieldName": "betaRoomAlterFeatured",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "featured",
							"value": {
								"kind": "Variable",
								"variableName": "featured"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "e941c6e16566c7de768f67fc3cb788714d3e692586745aa9f68b1c67dd6f86de"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterHidden",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "listed",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterListed",
					"fieldName": "betaRoomAlterListed",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "listed",
							"value": {
								"kind": "Variable",
								"variableName": "listed"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "dac01e5e2d5890238c570a954f8325590e7327247276af35439e24507c325ddb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"operationId": "eb01e93b5df81e7aa52a034c5ea9fa3fab350786fb5005852c0616ff60ac22a6"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMemberShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "memberId",
					"type": "ID!"
				}
			],
			"source": "query RoomMemberShort($roomId: ID!, $memberId: ID!) {\n  member: roomMember(roomId: $roomId, memberId: $memberId) {\n    __typename\n    user {\n      __typename\n      id\n      name\n      firstName\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "member",
					"fieldName": "roomMember",
					"type": "RoomMember",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "firstName",
									"fieldName": "firstName",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomMemberShort($roomId: ID!, $memberId: ID!) {\n  member: roomMember(roomId: $roomId, memberId: $memberId) {\n    __typename\n    user {\n      __typename\n      id\n      name\n      firstName\n    }\n  }\n}",
			"operationId": "242bbda7495d286463dbe2643bfa7c14731d1aff08f283b8514c807732815833"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "eea8d7dfb6d65a587cbc99a307f07f0a4311634e20bc259995f22c5b81b9b98f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomOrganizationAdminMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomOrganizationAdminMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on SharedRoom {\n      id\n      organization {\n        __typename\n        id\n        adminMembers: alphaOrganizationAdminMembers {\n          __typename\n          role\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "adminMembers",
											"fieldName": "alphaOrganizationAdminMembers",
											"type": "[OrganizationJoinedMember!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "role",
													"fieldName": "role",
													"type": "OrganizationMemberRole!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomOrganizationAdminMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on SharedRoom {\n      id\n      organization {\n        __typename\n        id\n        adminMembers: alphaOrganizationAdminMembers {\n          __typename\n          role\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "1ebc59464e5b0c92eca050b5be5f2048d6c05b64341b0f9e69e5b65c18b1c068"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersForMentionsPaginated",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query RoomMembersForMentionsPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserForMention"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserForMention",
				"UserBadge"
			],
			"sourceWithFragments": "query RoomMembersForMentionsPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "8750dbcf6319930c51aecde02395ca24ff71d2e2239f126a611c76eafcb879c4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersPaginated",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query RoomMembersPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badge",
							"fieldName": "badge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomMembersPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "767f48ad5161976102990f5d132f00042259b62cbc7e7be641616600a8b02531"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "settings",
					"type": "RoomUserNotificaionSettingsInput!"
				},
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdateUserNotificationSettings",
					"fieldName": "betaRoomUpdateUserNotificationSettings",
					"type": "RoomUserNotificaionSettings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "settings"
							},
							"type": "RoomUserNotificaionSettingsInput!"
						},
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"description": "User settings",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"operationId": "06c5327630b4f68b55f8ff4dc065d83b2cbf611eb2b3c34a16f38c060d629dcd"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomJoin",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "9f3daeef4b1b2796a84f96fe683e10012475fa99499b61ffe922e71489768b10"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomsJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomsIds",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomsJoin($roomsIds: [ID!]!) {\n  join: betaRoomsJoin(roomsIds: $roomsIds) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomsJoin",
					"type": "[Room!]!",
					"args": [
						{
							"name": "roomsIds",
							"value": {
								"kind": "Variable",
								"variableName": "roomsIds"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomsJoin($roomsIds: [ID!]!) {\n  join: betaRoomsJoin(roomsIds: $roomsIds) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "7d6fe6a0ad81e3c62c091974731eeb6a0465a600e52497dd40db8144f754fb8b"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomsInviteUser",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "roomIds",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomsInviteUser($userId: ID!, $roomIds: [ID!]!) {\n  rooms: betaRoomsInviteUser(userId: $userId, roomIds: $roomIds) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "rooms",
					"fieldName": "betaRoomsInviteUser",
					"type": "[Room!]!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "roomIds",
							"value": {
								"kind": "Variable",
								"variableName": "roomIds"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"description": "Admin tools",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomsInviteUser($userId: ID!, $roomIds: [ID!]!) {\n  rooms: betaRoomsInviteUser(userId: $userId, roomIds: $roomIds) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "6d04d94121fac7bb66c65a096be29a3b4f4960904633da3a6dec62f4e92d67f6"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSendEmailInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "inviteRequests",
					"type": "[RoomInviteEmailRequest!]!"
				}
			],
			"source": "mutation RoomSendEmailInvite($roomId: ID!, $inviteRequests: [RoomInviteEmailRequest!]!) {\n  betaRoomInviteLinkSendEmail(roomId: $roomId, inviteRequests: $inviteRequests)\n}",
			"fields": [
				{
					"responseName": "betaRoomInviteLinkSendEmail",
					"fieldName": "betaRoomInviteLinkSendEmail",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "inviteRequests",
							"value": {
								"kind": "Variable",
								"variableName": "inviteRequests"
							},
							"type": "[RoomInviteEmailRequest!]!"
						}
					],
					"isConditional": false,
					"description": "Invite links",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomSendEmailInvite($roomId: ID!, $inviteRequests: [RoomInviteEmailRequest!]!) {\n  betaRoomInviteLinkSendEmail(roomId: $roomId, inviteRequests: $inviteRequests)\n}",
			"operationId": "ed83ef0a666849b8aca04e2ba7d3635bc804fe1286e4b343f46a2c88e2d99e7f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoinInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomInviteLinkJoin",
					"type": "Room!",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny",
				"OrganizationMedium"
			],
			"sourceWithFragments": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ddef3b63c098674d8c5bdd6feb78256a176a55174a2a9c7182690bd73dfe7cf5"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRenewInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLinkRenew",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"operationId": "87171fbd97b50c4b54a836173e5debda1343a8986dad09ace36e909d30e55acb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteLink",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLink",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"operationId": "421f83a0ebf1bddcc0d9cb496cd80de3381bd8f91b8e0068b666901961599072"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "betaRoomInviteInfo",
					"type": "RoomInvite",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "room",
							"fieldName": "room",
							"type": "SharedRoom!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"OrganizationShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "invitedByUser",
							"fieldName": "invitedByUser",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort",
				"UserBadge"
			],
			"sourceWithFragments": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "ebe433d65957e2103a63a41860d30fd6eff5308237f77974431565c53e921a29"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ResolvedInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				}
			],
			"source": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      id\n      orgId\n      title\n      creator {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      id\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaResolveInvite",
					"type": "ResolveInviteEntry",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "InviteInfo",
							"possibleTypes": [
								"InviteInfo"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "orgId",
									"fieldName": "orgId",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "creator",
									"fieldName": "creator",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "AppInvite",
							"possibleTypes": [
								"AppInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "inviter",
									"fieldName": "inviter",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "RoomInvite",
							"possibleTypes": [
								"RoomInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "invitedByUser",
									"fieldName": "invitedByUser",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "kind",
											"fieldName": "kind",
											"type": "SharedRoomKind!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isChannel",
											"fieldName": "isChannel",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "socialImage",
											"fieldName": "socialImage",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "description",
											"fieldName": "description",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membership",
											"fieldName": "membership",
											"type": "SharedRoomMembershipStatus!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      id\n      orgId\n      title\n      creator {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      id\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n        }\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "74abee75cfe3ba86df896faf49d2a5e40c423ce81c66ea36732fbf39630e49b2"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "AddMessageComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyComment",
					"type": "ID"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation AddMessageComment($messageId: ID!, $message: String, $replyComment: ID, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  addMessageComment: betaAddMessageComment(messageId: $messageId, message: $message, replyComment: $replyComment, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "addMessageComment",
					"fieldName": "betaAddMessageComment",
					"type": "CommentEntry!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyComment",
							"value": {
								"kind": "Variable",
								"variableName": "replyComment"
							},
							"type": "ID"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AddMessageComment($messageId: ID!, $message: String, $replyComment: ID, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  addMessageComment: betaAddMessageComment(messageId: $messageId, message: $message, replyComment: $replyComment, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans) {\n    __typename\n    id\n  }\n}",
			"operationId": "090ef6030b4e0ca3a7d90b948f508b1f4920d5827b9ee95977d410181c041217"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "EditComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation EditComment($id: ID!, $message: String, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editComment(id: $id, message: $message, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"fields": [
				{
					"responseName": "editComment",
					"fieldName": "editComment",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditComment($id: ID!, $message: String, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editComment(id: $id, message: $message, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"operationId": "2d5f0055d9c9deb950af70b56c8f428e5186af3877692dd6b25062e14c1226d9"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "RoomUpdateInput!"
				}
			],
			"source": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n      socialImage\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdate",
					"fieldName": "betaRoomUpdate",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "RoomUpdateInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n      socialImage\n    }\n  }\n}",
			"operationId": "f0b5bbbc0bb767fd8f436a48c752745289db117a3a2b2065f06f8301c6f28d28"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"operationId": "e062da3347733ffc233e02064326d9cd578b945f9d49d92b81a1ae0e92c5c0e8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessages",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "mids",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mids",
							"value": {
								"kind": "Variable",
								"variableName": "mids"
							},
							"type": "[ID!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"operationId": "6227f6f997207c6854e98755bf4575fa5965643092a28544e0905b14f0ac0345"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteUrlAugmentation",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDeleteAugmentation",
					"fieldName": "betaMessageDeleteAugmentation",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"operationId": "67fda9fa3d5efa14694df68eb86319ca4d8a8fd0440603b639287a25ccc974cb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "EditMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation EditMessage($messageId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editMessage(messageId: $messageId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"fields": [
				{
					"responseName": "editMessage",
					"fieldName": "editMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditMessage($messageId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editMessage(messageId: $messageId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"operationId": "94f5de73e975267e6ebc5c7a11451658a897e784627c758aec1e3259c0110b8a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MarkSequenceRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "seq",
					"type": "Int!"
				}
			],
			"source": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"fields": [
				{
					"responseName": "alphaGlobalRead",
					"fieldName": "alphaGlobalRead",
					"type": "String!",
					"args": [
						{
							"name": "toSeq",
							"value": {
								"kind": "Variable",
								"variableName": "seq"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"operationId": "3ac00b53b7147bca4a579188417adf9b51e7ad32f013e5e699044474d861822e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "TypingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation: chat {\n      __typename\n      ... on PrivateRoom {\n        id\n      }\n      ... on SharedRoom {\n        id\n      }\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"fields": [
				{
					"responseName": "typings",
					"fieldName": "typings",
					"type": "TypingEvent!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "conversation",
							"fieldName": "chat",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "PrivateRoom",
									"possibleTypes": [
										"PrivateRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "SharedRoom",
									"possibleTypes": [
										"SharedRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cancel",
							"fieldName": "cancel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation: chat {\n      __typename\n      ... on PrivateRoom {\n        id\n      }\n      ... on SharedRoom {\n        id\n      }\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"operationId": "d5bbf31cc85f514ff67ddf661a5a101ec7346159d5d380ff18fb40213be20653"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatOnlinesCountWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "subscription ChatOnlinesCountWatch($chatId: ID!) {\n  chatOnlinesCount(chatId: $chatId) {\n    __typename\n    onlineMembers\n  }\n}",
			"fields": [
				{
					"responseName": "chatOnlinesCount",
					"fieldName": "chatOnlinesCount",
					"type": "ChatOnlineEvent!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "onlineMembers",
							"fieldName": "onlineMembers",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription ChatOnlinesCountWatch($chatId: ID!) {\n  chatOnlinesCount(chatId: $chatId) {\n    __typename\n    onlineMembers\n  }\n}",
			"operationId": "cd54e19105faa346b1255242cd80841d3008a1e92818d3df2e53761a25d49a5d"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "UpdateWelcomeMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "welcomeMessageIsOn",
					"type": "Boolean!"
				},
				{
					"name": "welcomeMessageSender",
					"type": "ID"
				},
				{
					"name": "welcomeMessageText",
					"type": "String"
				}
			],
			"source": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"fields": [
				{
					"responseName": "updateWelcomeMessage",
					"fieldName": "updateWelcomeMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "welcomeMessageIsOn",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageIsOn"
							},
							"type": "Boolean!"
						},
						{
							"name": "welcomeMessageSender",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageSender"
							},
							"type": "ID"
						},
						{
							"name": "welcomeMessageText",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageText"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"operationId": "93b2980a544ac0c75deee548ca088a0110f90181e863ac867a67c8078c132aee"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Message",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "query Message($messageId: ID!) {\n  message(messageId: $messageId) {\n    __typename\n    ...FullMessage\n  }\n}",
			"fields": [
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "ModernMessage",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query Message($messageId: ID!) {\n  message(messageId: $messageId) {\n    __typename\n    ...FullMessage\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "c4d1806f49994e1912f0faf12e5f6775a8723d3df0ddee5c7738de51066c5717"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessagesSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query MessagesSearch($query: String!, $sort: String, $first: Int!, $after: String) {\n  messagesSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n            user {\n              __typename\n              id\n              name\n              photo\n            }\n          }\n          ... on SharedRoom {\n            id\n            kind\n            title\n            membership\n            isChannel\n            role\n            canEdit\n            photo\n          }\n        }\n        message {\n          __typename\n          id\n          date\n          sender {\n            __typename\n            id\n            name\n            firstName\n            photo\n          }\n          senderBadge {\n            __typename\n            ...UserBadge\n          }\n          message\n          fallback\n          ... on GeneralMessage {\n            id\n            attachments {\n              __typename\n              id\n              fallback\n              ... on MessageAttachmentFile {\n                id\n                fileId\n                fileMetadata {\n                  __typename\n                  isImage\n                  imageFormat\n                }\n              }\n            }\n            quotedMessages {\n              __typename\n              id\n            }\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "messagesSearch",
					"fieldName": "messagesSearch",
					"type": "MessageConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[MessageEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "MessageWithChat!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "photo",
																	"fieldName": "photo",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "kind",
															"fieldName": "kind",
															"type": "SharedRoomKind!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "membership",
															"fieldName": "membership",
															"type": "SharedRoomMembershipStatus!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isChannel",
															"fieldName": "isChannel",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "role",
															"fieldName": "role",
															"type": "RoomMemberRole!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "canEdit",
															"fieldName": "canEdit",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "photo",
															"fieldName": "photo",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "ModernMessage!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"description": "State",
													"isDeprecated": false
												},
												{
													"responseName": "date",
													"fieldName": "date",
													"type": "Date!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "sender",
													"fieldName": "sender",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "firstName",
															"fieldName": "firstName",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "photo",
															"fieldName": "photo",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												},
												{
													"responseName": "senderBadge",
													"fieldName": "senderBadge",
													"type": "UserBadge",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserBadge"
													],
													"inlineFragments": []
												},
												{
													"responseName": "message",
													"fieldName": "message",
													"type": "String",
													"isConditional": false,
													"description": "Content",
													"isDeprecated": false
												},
												{
													"responseName": "fallback",
													"fieldName": "fallback",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "GeneralMessage",
													"possibleTypes": [
														"GeneralMessage"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"description": "State",
															"isDeprecated": false
														},
														{
															"responseName": "date",
															"fieldName": "date",
															"type": "Date!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "sender",
															"fieldName": "sender",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "firstName",
																	"fieldName": "firstName",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "photo",
																	"fieldName": "photo",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "senderBadge",
															"fieldName": "senderBadge",
															"type": "UserBadge",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserBadge"
															],
															"inlineFragments": []
														},
														{
															"responseName": "message",
															"fieldName": "message",
															"type": "String",
															"isConditional": false,
															"description": "Content",
															"isDeprecated": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "attachments",
															"fieldName": "attachments",
															"type": "[ModernMessageAttachment!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "fallback",
																	"fieldName": "fallback",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": [
																{
																	"typeCondition": "MessageAttachmentFile",
																	"possibleTypes": [
																		"MessageAttachmentFile"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fallback",
																			"fieldName": "fallback",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fileId",
																			"fieldName": "fileId",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fileMetadata",
																			"fieldName": "fileMetadata",
																			"type": "FileMetadata!",
																			"isConditional": false,
																			"isDeprecated": false,
																			"fields": [
																				{
																					"responseName": "__typename",
																					"fieldName": "__typename",
																					"type": "String!",
																					"isConditional": false
																				},
																				{
																					"responseName": "isImage",
																					"fieldName": "isImage",
																					"type": "Boolean!",
																					"isConditional": false,
																					"isDeprecated": false
																				},
																				{
																					"responseName": "imageFormat",
																					"fieldName": "imageFormat",
																					"type": "String",
																					"isConditional": false,
																					"isDeprecated": false
																				}
																			],
																			"fragmentSpreads": [],
																			"inlineFragments": []
																		}
																	],
																	"fragmentSpreads": []
																}
															]
														},
														{
															"responseName": "quotedMessages",
															"fieldName": "quotedMessages",
															"type": "[ModernMessage!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"description": "State",
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query MessagesSearch($query: String!, $sort: String, $first: Int!, $after: String) {\n  messagesSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n            user {\n              __typename\n              id\n              name\n              photo\n            }\n          }\n          ... on SharedRoom {\n            id\n            kind\n            title\n            membership\n            isChannel\n            role\n            canEdit\n            photo\n          }\n        }\n        message {\n          __typename\n          id\n          date\n          sender {\n            __typename\n            id\n            name\n            firstName\n            photo\n          }\n          senderBadge {\n            __typename\n            ...UserBadge\n          }\n          message\n          fallback\n          ... on GeneralMessage {\n            id\n            attachments {\n              __typename\n              id\n              fallback\n              ... on MessageAttachmentFile {\n                id\n                fileId\n                fileMetadata {\n                  __typename\n                  isImage\n                  imageFormat\n                }\n              }\n            }\n            quotedMessages {\n              __typename\n              id\n            }\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "10e66377a30c9acc4afcc8297b1054b6fac8387761ec22f65b858ffff49bc17a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "DeleteComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteComment($id: ID!) {\n  deleteComment(id: $id)\n}",
			"fields": [
				{
					"responseName": "deleteComment",
					"fieldName": "deleteComment",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteComment($id: ID!) {\n  deleteComment(id: $id)\n}",
			"operationId": "1c15e6199ac581135afa4868872f463d7c505f01683520266b9f3e62a20d3df0"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "MessageComments",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "query MessageComments($messageId: ID!) {\n  messageComments(messageId: $messageId) {\n    __typename\n    id\n    state {\n      __typename\n      state\n    }\n    count\n    comments {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "messageComments",
					"fieldName": "messageComments",
					"type": "CommentsPeer!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "CommentUpdatesState!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "count",
							"fieldName": "count",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "comments",
							"fieldName": "comments",
							"type": "[CommentEntry!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query MessageComments($messageId: ID!) {\n  messageComments(messageId: $messageId) {\n    __typename\n    id\n    state {\n      __typename\n      state\n    }\n    count\n    comments {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "e709f7507e3e041df5f9511eaa028ed1e51a502bb9784cdc623c2a51d16ddfa9"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "CommentSetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "commentId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation CommentSetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionAdd(commentId: $commentId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "commentReactionAdd",
					"fieldName": "commentReactionAdd",
					"type": "Boolean!",
					"args": [
						{
							"name": "commentId",
							"value": {
								"kind": "Variable",
								"variableName": "commentId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CommentSetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionAdd(commentId: $commentId, reaction: $reaction)\n}",
			"operationId": "68681459c19a3718ee3cbc5928062747ba8c14aa6a47fbbce51dd7ed41779857"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "CommentUnsetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "commentId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation CommentUnsetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionRemove(commentId: $commentId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "commentReactionRemove",
					"fieldName": "commentReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "commentId",
							"value": {
								"kind": "Variable",
								"variableName": "commentId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CommentUnsetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionRemove(commentId: $commentId, reaction: $reaction)\n}",
			"operationId": "d60882350e6c5b03ee3536480f68acc5a170f1c11395b23b98e7d6a432c808db"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "ReadNotification",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "notificationId",
					"type": "ID!"
				}
			],
			"source": "mutation ReadNotification($notificationId: ID!) {\n  readNotification(notificationId: $notificationId) {\n    __typename\n    id\n    unread\n  }\n}",
			"fields": [
				{
					"responseName": "readNotification",
					"fieldName": "readNotification",
					"type": "NotificationCenter!",
					"args": [
						{
							"name": "notificationId",
							"value": {
								"kind": "Variable",
								"variableName": "notificationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReadNotification($notificationId: ID!) {\n  readNotification(notificationId: $notificationId) {\n    __typename\n    id\n    unread\n  }\n}",
			"operationId": "9d1e473f618863cd3c46c84d018a94541d6c974d555cba8c545389eb59cde65b"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "DeleteNotification",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "notificationId",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteNotification($notificationId: ID!) {\n  deleteNotification(notificationId: $notificationId)\n}",
			"fields": [
				{
					"responseName": "deleteNotification",
					"fieldName": "deleteNotification",
					"type": "Boolean!",
					"args": [
						{
							"name": "notificationId",
							"value": {
								"kind": "Variable",
								"variableName": "notificationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteNotification($notificationId: ID!) {\n  deleteNotification(notificationId: $notificationId)\n}",
			"operationId": "6d2459d4a28525f141af1091dada28b6be2bbef96ab29ba43d70cf09a5061175"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "SubscribeMessageComments",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "type",
					"type": "CommentSubscriptionType!"
				}
			],
			"source": "mutation SubscribeMessageComments($messageId: ID!, $type: CommentSubscriptionType!) {\n  subscribeMessageComments(messageId: $messageId, type: $type)\n}",
			"fields": [
				{
					"responseName": "subscribeMessageComments",
					"fieldName": "subscribeMessageComments",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "CommentSubscriptionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SubscribeMessageComments($messageId: ID!, $type: CommentSubscriptionType!) {\n  subscribeMessageComments(messageId: $messageId, type: $type)\n}",
			"operationId": "aa25a08edf5a7160393c42ad8a0f7f9bfc498145e01ab63c2a08f928a7a578eb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "UnSubscribeMessageComments",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation UnSubscribeMessageComments($messageId: ID!) {\n  unSubscribeMessageComments(messageId: $messageId)\n}",
			"fields": [
				{
					"responseName": "unSubscribeMessageComments",
					"fieldName": "unSubscribeMessageComments",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UnSubscribeMessageComments($messageId: ID!) {\n  unSubscribeMessageComments(messageId: $messageId)\n}",
			"operationId": "53680ced292f52a20496ea95c56c938a28ee787f4447af70e9015019c40ff41e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "Conference",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "conference",
					"fieldName": "conference",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "0a2cef554615791dfbb5039e3e2d056d1105fd84c6a17e0e60b7f6752e6e1f70"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMedia",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceMedia",
					"fieldName": "conferenceMedia",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "iceServers",
							"fieldName": "iceServers",
							"type": "[ICEServer!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "urls",
									"fieldName": "urls",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "username",
									"fieldName": "username",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "credential",
									"fieldName": "credential",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"operationId": "35be179eae60bf0e919462a42fda8c13919b08fe865377cab4b7d55737f80935"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceJoin",
					"fieldName": "conferenceJoin",
					"type": "ConferenceJoinResult!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "peerId",
							"fieldName": "peerId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "conference",
							"fieldName": "conference",
							"type": "Conference!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"ConferenceShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceShort\n    }\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "b401f8c43af22acd594c50a6cdd30eafaa2d4f6cb604e3a950be45eeb67ddc37"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceLeave",
					"fieldName": "conferenceLeave",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "4cccfd3d69b2d796431aae940fc397e517d7d4ee9b1f9d36b328ad639f088c66"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceKeepAlive",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceKeepAlive",
					"fieldName": "conferenceKeepAlive",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "a18fc76228f42e0f393f819cf5759111a159e327502c1cd483f4492ce681d367"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionOffer",
					"fieldName": "peerConnectionOffer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "b1f74b0ad73c2ff17a9ecd6fd984230e188995c4e320d89bef138c9f7ac29651"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionAnswer",
					"fieldName": "peerConnectionAnswer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "abbd10248ecfb96953078f31dd5f48456439e3ce4a0e8bfc1bf83cf81188c5c3"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionCandidate",
					"fieldName": "peerConnectionCandidate",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "49b5ed93964906df2ac91f3018d3f64f9ded84d4d2cb180bbea6125c63d6dbd5"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamOffer",
					"fieldName": "mediaStreamOffer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "4ec27733a3432a25d6f42cc4d7c7a4850fc21aefc77991074d08c7aac204ffa1"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaNegotiationNeeded",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation MediaNegotiationNeeded($id: ID!, $peerId: ID!) {\n  mediaStreamNegotiationNeeded(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamNegotiationNeeded",
					"fieldName": "mediaStreamNegotiationNeeded",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaNegotiationNeeded($id: ID!, $peerId: ID!) {\n  mediaStreamNegotiationNeeded(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "bb9d15f4f046016fabf395f71f6c551bfdd61cf28e1342bef529744c4115be64"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaFailed",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation MediaFailed($id: ID!, $peerId: ID!) {\n  mediaStreamFailed(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamFailed",
					"fieldName": "mediaStreamFailed",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaFailed($id: ID!, $peerId: ID!) {\n  mediaStreamFailed(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "c30b95cd1c870db93249ca4d4646605f8faf6ac4ecc25ce67520aa871f52900c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamAnswer",
					"fieldName": "mediaStreamAnswer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "56c71f33327d511b28145a16127ab55180ce6d988a2c116c6f02945241402d33"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamCandidate",
					"fieldName": "mediaStreamCandidate",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "f0a65c04d41cbb16a07f1bc8b7b8bb6c7c47c258fc43ffcabd62dec2555992aa"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMediaWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "media",
					"fieldName": "alphaConferenceMediaWatch",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "3a548e19359ca7d9531648da9a3c777fe5399a524616528daa7c92ae8fdb155a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "alphaConferenceWatch",
					"fieldName": "alphaConferenceWatch",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "18ecc5fdf8b2bdc3644921df049264d33c616df1b971a7fa30b042482d49fa63"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "AvailableRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AvailableRooms {\n  availableChats: betaUserAvailableRooms(limit: 3, isChannel: false) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  availableChannels: betaUserAvailableRooms(limit: 3, isChannel: true) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  communities: alphaComunityPrefixSearch(first: 3) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "availableChats",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": 3,
							"type": "Int"
						},
						{
							"name": "isChannel",
							"value": false,
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "availableChannels",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": 3,
							"type": "Int"
						},
						{
							"name": "isChannel",
							"value": true,
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "suggestedRooms",
					"fieldName": "betaSuggestedRooms",
					"type": "[Room!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "communities",
					"fieldName": "alphaComunityPrefixSearch",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "first",
							"value": 3,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommunitySearch"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "isDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommunitySearch"
			],
			"sourceWithFragments": "query AvailableRooms {\n  availableChats: betaUserAvailableRooms(limit: 3, isChannel: false) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  availableChannels: betaUserAvailableRooms(limit: 3, isChannel: true) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  communities: alphaComunityPrefixSearch(first: 3) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}\nfragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"operationId": "2a67975d50a443e49b1089838d567ffc568eb5998761326899524151c24c5ef6"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "SuggestedRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuggestedRooms {\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "suggestedRooms",
					"fieldName": "betaSuggestedRooms",
					"type": "[Room!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "isDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query SuggestedRooms {\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"operationId": "66c33b706672be3b136f69449250d6217de6428c968710f54be44bc97d3ed901"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "UserRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "limit",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query UserRooms($limit: Int!, $after: ID) {\n  betaUserRooms(limit: $limit, after: $after) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaUserRooms",
					"fieldName": "betaUserRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserRooms($limit: Int!, $after: ID) {\n  betaUserRooms(limit: $limit, after: $after) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"operationId": "3a5ede42e4d7cca6f1a316a1b47e0349d2befccd4d04902a404dfb280d1d7650"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "UserAvailableRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "limit",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				},
				{
					"name": "isChannel",
					"type": "Boolean"
				}
			],
			"source": "query UserAvailableRooms($limit: Int!, $after: ID, $isChannel: Boolean) {\n  betaUserAvailableRooms(limit: $limit, after: $after, isChannel: $isChannel) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaUserAvailableRooms",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						},
						{
							"name": "isChannel",
							"value": {
								"kind": "Variable",
								"variableName": "isChannel"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserAvailableRooms($limit: Int!, $after: ID, $isChannel: Boolean) {\n  betaUserAvailableRooms(limit: $limit, after: $after, isChannel: $isChannel) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"operationId": "3de9de2928e0bd53861b493f1d92b088dd99b63a35b935d46baf7f6439b0a0d0"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "GlobalSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				},
				{
					"name": "kinds",
					"type": "[GlobalSearchEntryKind!]"
				}
			],
			"source": "query GlobalSearch($query: String!, $kinds: [GlobalSearchEntryKind!]) {\n  items: alphaGlobalSearch(query: $query, kinds: $kinds) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaGlobalSearch",
					"type": "[GlobalSearchEntry!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						},
						{
							"name": "kinds",
							"value": {
								"kind": "Variable",
								"variableName": "kinds"
							},
							"type": "[GlobalSearchEntryKind!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							]
						},
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							]
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "roomPhoto",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort",
				"UserBadge"
			],
			"sourceWithFragments": "query GlobalSearch($query: String!, $kinds: [GlobalSearchEntryKind!]) {\n  items: alphaGlobalSearch(query: $query, kinds: $kinds) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "96dea93b9b1dd78f94400fbb66b85b2922cbca2dda7081601420a143b68e3354"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "DiscoverNextPage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "selectedTagsIds",
					"type": "[String!]!"
				},
				{
					"name": "excudedGroupsIds",
					"type": "[String!]!"
				}
			],
			"source": "query DiscoverNextPage($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaNextDiscoverPage(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    chats {\n      __typename\n      ...RoomShort\n    }\n    tagGroup {\n      __typename\n      id\n      title\n      subtitle\n      tags {\n        __typename\n        id\n        title\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaNextDiscoverPage",
					"fieldName": "betaNextDiscoverPage",
					"type": "DiscoverPage",
					"args": [
						{
							"name": "selectedTagsIds",
							"value": {
								"kind": "Variable",
								"variableName": "selectedTagsIds"
							},
							"type": "[String!]!"
						},
						{
							"name": "excudedGroupsIds",
							"value": {
								"kind": "Variable",
								"variableName": "excudedGroupsIds"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"description": "deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chats",
							"fieldName": "chats",
							"type": "[Room!]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"RoomShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "tagGroup",
							"fieldName": "tagGroup",
							"type": "TagGroup",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "subtitle",
									"fieldName": "subtitle",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tags",
									"fieldName": "tags",
									"type": "[Tag!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query DiscoverNextPage($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaNextDiscoverPage(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    chats {\n      __typename\n      ...RoomShort\n    }\n    tagGroup {\n      __typename\n      id\n      title\n      subtitle\n      tags {\n        __typename\n        id\n        title\n      }\n    }\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "521dc59b5735c93741176567c659b09d229b3cfb44ffd77c3289f2215339d5da"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "DiscoverIsDone",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query DiscoverIsDone {\n  betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "betaIsDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query DiscoverIsDone {\n  betaIsDiscoverDone\n}",
			"operationId": "1699290ac35a2da7ffe83662ca2a57754657859f9c61c62fefdd5766fa677026"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlags",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlags",
					"fieldName": "featureFlags",
					"type": "[FeatureFlag!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "dd6de47404414231484d791d64fdfc82db8334197982191c682dd3784705d219"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlagAdd",
					"fieldName": "featureFlagAdd",
					"type": "FeatureFlag!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "cf2235a1b518f31402fc0fffb85ff5d6ace7df3f8353b6646c6d3df74eb72ce8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagEnable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureAdd",
					"fieldName": "superAccountFeatureAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "2083c426883d280373418e67fcd3ea5d057dd2a1a00f3b2b7778b99e0d13fe77"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagDisable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureRemove",
					"fieldName": "superAccountFeatureRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "8e8d707747ab2b7b137ff14eb2c653496a49f44bc595887227731fc002b88722"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedHome",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FeedHome {\n  homeFeed: alphaHomeFeed {\n    __typename\n    id\n    text\n    date\n    by: alphaBy {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "homeFeed",
					"fieldName": "alphaHomeFeed",
					"type": "[FeedItem!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "text",
							"fieldName": "text",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "by",
							"fieldName": "alphaBy",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query FeedHome {\n  homeFeed: alphaHomeFeed {\n    __typename\n    id\n    text\n    date\n    by: alphaBy {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "bd3e43a62474ca7d7980dd3fa9fc799fd707307f721c2b4bb77839bf8e1437a7"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedPost",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "message",
					"type": "String!"
				}
			],
			"source": "mutation FeedPost($message: String!) {\n  alphaCreateFeedPost(message: $message) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateFeedPost",
					"fieldName": "alphaCreateFeedPost",
					"type": "FeedItem!",
					"args": [
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedPost($message: String!) {\n  alphaCreateFeedPost(message: $message) {\n    __typename\n    id\n  }\n}",
			"operationId": "8f8865ff6130b6f6af24fc52cb195d51d2a9a2cff45cefeb5d48120184bda00f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotifications",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "before",
					"type": "ID"
				}
			],
			"source": "query MyNotifications($first: Int!, $before: ID) {\n  myNotifications(first: $first, before: $before) {\n    __typename\n    items {\n      __typename\n      ...NotificationFragment\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "myNotifications",
					"fieldName": "myNotifications",
					"type": "NotificationConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[Notification!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"NotificationFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny",
				"RoomNano"
			],
			"sourceWithFragments": "query MyNotifications($first: Int!, $before: ID) {\n  myNotifications(first: $first, before: $before) {\n    __typename\n    items {\n      __typename\n      ...NotificationFragment\n    }\n    cursor\n  }\n}\nfragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"operationId": "99dcecba866fbbee0806cd0c784abd4ff5bbb914c33db443adef8c8eb3d62f0a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationsCenter",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription MyNotificationsCenter($state: String) {\n  event: notificationCenterUpdates(fromState: $state) {\n    __typename\n    ... on NotificationCenterUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n    ... on NotificationCenterUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "notificationCenterUpdates",
					"type": "NotificationCenterUpdateContainer",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "NotificationCenterUpdateSingle",
							"possibleTypes": [
								"NotificationCenterUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "NotificationCenterUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"NotificationCenterUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "NotificationCenterUpdateBatch",
							"possibleTypes": [
								"NotificationCenterUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[NotificationCenterUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"NotificationCenterUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"NotificationCenterUpdateFragment",
				"NotificationFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"UserBadge",
				"OrganizationShort",
				"UserForMention",
				"UserTiny",
				"RoomNano"
			],
			"sourceWithFragments": "subscription MyNotificationsCenter($state: String) {\n  event: notificationCenterUpdates(fromState: $state) {\n    __typename\n    ... on NotificationCenterUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n    ... on NotificationCenterUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n  }\n}\nfragment NotificationCenterUpdateFragment on NotificationCenterUpdate {\n  __typename\n  ... on NotificationReceived {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationUpdated {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationDeleted {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      id\n    }\n  }\n  ... on NotificationRead {\n    center {\n      __typename\n      id\n      unread\n    }\n  }\n  ... on NotificationContentUpdated {\n    content {\n      __typename\n      ... on UpdatedNotificationContentComment {\n        peer {\n          __typename\n          peerRoot {\n            __typename\n            ... on CommentPeerRootMessage {\n              message {\n                __typename\n                ... on GeneralMessage {\n                  id\n                  fallback\n                  message\n                  sender {\n                    __typename\n                    id\n                    name\n                  }\n                  senderBadge {\n                    __typename\n                    ...UserBadge\n                  }\n                }\n              }\n              chat {\n                __typename\n                ...RoomNano\n              }\n            }\n          }\n          id\n          subscription {\n            __typename\n            type\n          }\n        }\n        comment {\n          __typename\n          ...CommentEntryFragment\n        }\n      }\n    }\n  }\n}\nfragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"operationId": "e568826bee0711b556b6dac5ae6601e11148697122e2de722b3e882f41676f91"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationCenter",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyNotificationCenter {\n  myNotificationCenter {\n    __typename\n    id\n    unread\n    state {\n      __typename\n      state\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "myNotificationCenter",
					"fieldName": "myNotificationCenter",
					"type": "NotificationCenter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "NotificationCenterUpdatesState!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query MyNotificationCenter {\n  myNotificationCenter {\n    __typename\n    id\n    unread\n    state {\n      __typename\n      state\n    }\n  }\n}",
			"operationId": "52045efaec0eb67fbe79239665b4b12b9ef0165b9adb829890e9fd0f6329fa68"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationCenterMarkSeqRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "seq",
					"type": "Int!"
				}
			],
			"source": "mutation MyNotificationCenterMarkSeqRead($seq: Int!) {\n  notificationCenterMarkSeqRead(toSeq: $seq)\n}",
			"fields": [
				{
					"responseName": "notificationCenterMarkSeqRead",
					"fieldName": "notificationCenterMarkSeqRead",
					"type": "Boolean!",
					"args": [
						{
							"name": "toSeq",
							"value": {
								"kind": "Variable",
								"variableName": "seq"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MyNotificationCenterMarkSeqRead($seq: Int!) {\n  notificationCenterMarkSeqRead(toSeq: $seq)\n}",
			"operationId": "9548e014c54213d7170d9c05127bc3f7adb23a3ff8e1fb8059c0859feee0b13a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "MyOrganizations",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}",
			"fields": [
				{
					"responseName": "myOrganizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "isPrimary",
							"fieldName": "betaIsPrimary",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort"
			],
			"sourceWithFragments": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ea530ac015f6828103f76649e218c996350fdc35ac7d6f81def47d47b38d1981"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "UpdateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateOrganizationProfileInput!"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateOrganizationProfile",
					"fieldName": "updateOrganizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateOrganizationProfileInput!"
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"operationId": "836b4725b31c534a5b45b960c1a54f3f0e9c8b340a8c77fbd54d9d74d20c6f40"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "SetOrgShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetOrgShortName",
					"fieldName": "alphaSetOrgShortName",
					"type": "String",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"operationId": "2ba01d87de67cde65ef91cbc9a49ca67c67beab9b555f4683f363399d3786c14"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "Organization",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationFull",
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "3ccd9da48099aa4db2a357893135224d3f5c6c107716dac4d6572cae2f9565df"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationWithoutMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationWithoutMembers($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationWithoutMembersFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationWithoutMembersFragment",
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query OrganizationWithoutMembers($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n  }\n}\nfragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "1536f1852d299f5b2dbb5e0aa8e022504ae9881c1e96911e5716e5289cc74568"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "members",
							"fieldName": "alphaOrganizationMembers",
							"type": "[OrganizationJoinedMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [
						"OrganizationWithoutMembersFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationWithoutMembersFragment",
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}\nfragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "2ecb62928d67fada716f7b559944adb1b1a2f832a574e5e9cdee369433ea7417"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMembersShortPaginated",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query OrganizationMembersShortPaginated($organizationId: ID!, $first: Int, $after: ID) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers(first: $first, after: $after) {\n      __typename\n      role\n      user {\n        __typename\n        ...UserFull\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "members",
							"fieldName": "alphaOrganizationMembers",
							"type": "[OrganizationJoinedMember!]!",
							"args": [
								{
									"name": "first",
									"value": {
										"kind": "Variable",
										"variableName": "first"
									},
									"type": "Int"
								},
								{
									"name": "after",
									"value": {
										"kind": "Variable",
										"variableName": "after"
									},
									"type": "ID"
								}
							],
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "OrganizationMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserFull"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [
						"OrganizationWithoutMembersFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationWithoutMembersFragment",
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query OrganizationMembersShortPaginated($organizationId: ID!, $first: Int, $after: ID) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers(first: $first, after: $after) {\n      __typename\n      role\n      user {\n        __typename\n        ...UserFull\n      }\n    }\n  }\n}\nfragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "f74a76cf66a5645dea097880e6c55d2fe5e62ea9dd0053ff860d781f4b883ee2"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationProfile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "organizationProfile",
					"fieldName": "organizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"operationId": "4e20dd86a9402e710862415d3faee63b460fb154b08fd58d26673a4443a35391"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "ExploreOrganizations",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "prefix",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				},
				{
					"name": "all",
					"type": "Boolean"
				}
			],
			"source": "query ExploreOrganizations($query: String, $prefix: String, $sort: String, $page: Int, $after: String, $all: Boolean) {\n  items: alphaOrganizations(query: $query, prefix: $prefix, sort: $sort, page: $page, first: 25, after: $after, all: $all) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...OrganizationSearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaOrganizations",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "prefix",
							"value": {
								"kind": "Variable",
								"variableName": "prefix"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						},
						{
							"name": "all",
							"value": {
								"kind": "Variable",
								"variableName": "all"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"OrganizationSearch"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "query ExploreOrganizations($query: String, $prefix: String, $sort: String, $page: Int, $after: String, $all: Boolean) {\n  items: alphaOrganizations(query: $query, prefix: $prefix, sort: $sort, page: $page, first: 25, after: $after, all: $all) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...OrganizationSearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "5e867fe96760dccf1d4096b7a6f188814b218faef98423237a6dd446b8b45c1f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "ExploreCommunity",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				},
				{
					"name": "featuredIfEmptyQuery",
					"type": "Boolean"
				}
			],
			"source": "query ExploreCommunity($query: String, $sort: String, $page: Int, $after: String, $featuredIfEmptyQuery: Boolean) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after, featuredIfEmptyQuery: $featuredIfEmptyQuery) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaComunityPrefixSearch",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						},
						{
							"name": "featuredIfEmptyQuery",
							"value": {
								"kind": "Variable",
								"variableName": "featuredIfEmptyQuery"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommunitySearch"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommunitySearch"
			],
			"sourceWithFragments": "query ExploreCommunity($query: String, $sort: String, $page: Int, $after: String, $featuredIfEmptyQuery: Boolean) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after, featuredIfEmptyQuery: $featuredIfEmptyQuery) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"operationId": "68a62dc9c7e67c53f3351342780278b9d44ef8b6a05ed63b0bf2b372544d0a87"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationChangeMemberRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "memberId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "OrganizationMemberRole!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationChangeMemberRole",
					"fieldName": "alphaOrganizationChangeMemberRole",
					"type": "String!",
					"args": [
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "OrganizationMemberRole!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"operationId": "2c1206cb6dc01189e2d17cf07f43f7d1f2ae165875317411aee7b237b523b91e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAddMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userIds",
					"type": "[ID!]"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  betaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaOrganizationMemberAdd",
					"fieldName": "betaOrganizationMemberAdd",
					"type": "Organization!",
					"args": [
						{
							"name": "userIds",
							"value": {
								"kind": "Variable",
								"variableName": "userIds"
							},
							"type": "[ID!]"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationFull",
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  betaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "614525066822a13779bc3d057ca93b72abc5905d652bcbb4d484074ae90b6743"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationRemoveMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "memberId",
					"type": "ID!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationRemoveMember($memberId: ID!, $organizationId: ID!) {\n  alphaOrganizationRemoveMember(memberId: $memberId, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationRemoveMember",
					"fieldName": "alphaOrganizationRemoveMember",
					"type": "String!",
					"args": [
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationRemoveMember($memberId: ID!, $organizationId: ID!) {\n  alphaOrganizationRemoveMember(memberId: $memberId, organizationId: $organizationId)\n}",
			"operationId": "5f1c807a147aeaca15a675acefd6af98b3371fe2f5c8f540b87453a847028362"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationInviteMembers",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteRequests",
					"type": "[InviteRequest!]!"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation OrganizationInviteMembers($inviteRequests: [InviteRequest!]!, $organizationId: ID) {\n  alphaOrganizationInviteMembers(inviteRequests: $inviteRequests, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationInviteMembers",
					"fieldName": "alphaOrganizationInviteMembers",
					"type": "String!",
					"args": [
						{
							"name": "inviteRequests",
							"value": {
								"kind": "Variable",
								"variableName": "inviteRequests"
							},
							"type": "[InviteRequest!]!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationInviteMembers($inviteRequests: [InviteRequest!]!, $organizationId: ID) {\n  alphaOrganizationInviteMembers(inviteRequests: $inviteRequests, organizationId: $organizationId)\n}",
			"operationId": "bbab73ef170fbf7d935705f21ac0bbb765c933a5aacdf2b465bb7b6ff0922319"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationPublicInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "publicInvite",
					"fieldName": "alphaOrganizationInviteLink",
					"type": "Invite",
					"args": [
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "695bfdf06fc8416883a48cb0750900636ec1d7983d400cf552c49f92bb24a95c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationCreatePublicInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "expirationDays",
					"type": "Int"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationRefreshInviteLink",
					"fieldName": "alphaOrganizationRefreshInviteLink",
					"type": "Invite!",
					"args": [
						{
							"name": "expirationDays",
							"value": {
								"kind": "Variable",
								"variableName": "expirationDays"
							},
							"type": "Int"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "55955682d04e275bfd3ffb85722ec928dc2666314a474d371293caef099181b5"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "DeleteOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"fields": [
				{
					"responseName": "deleteOrganization",
					"fieldName": "deleteOrganization",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"operationId": "1943b0cb999b7c1070e2d244152f6c5fe217795a985820661d39ebfa9f20a034"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "betaOrganizationMemberRemove",
					"fieldName": "betaOrganizationMemberRemove",
					"type": "Organization!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"operationId": "0e426a8697d8558f1a871019ee40e2f4bb39ee5d04f77ba429c4c1c5da7fb5f1"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationActivateByInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "joinAppInvite",
					"fieldName": "joinAppInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"operationId": "5bdf1b731e1732711ccda488d3416c909a68a1c5f11ae0384539fffd53277cce"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAlterPublished",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "published",
					"type": "Boolean!"
				}
			],
			"source": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "alphaAlterPublished",
					"fieldName": "alphaAlterPublished",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "published",
							"value": {
								"kind": "Variable",
								"variableName": "published"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "fb154ae63c001bc89eaac0ec23ce1a46305ba658dba6e1f40701fa7c40a3a90f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationByPrefix",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "organizationByPrefix",
					"fieldName": "alphaOrganizationByPrefix",
					"type": "Organization",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "57ba6ecc0814aff32b011a46417e01cc0acfe5b8f6d47daa78221a3bab082c42"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "Permissions",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"operationId": "a4645b2b569166586d434a382d16320ccfc9999f859128de91439c67f6cf1f76"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "DebugMails",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "type",
					"type": "DebugEmailType!"
				}
			],
			"source": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"fields": [
				{
					"responseName": "debugSendEmail",
					"fieldName": "debugSendEmail",
					"type": "Boolean",
					"args": [
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "DebugEmailType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"operationId": "63da7e2686018eb1c9f88b0106afdb2a54567e75325c2c4fc898919820490618"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdmins",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}",
			"fields": [
				{
					"responseName": "superAdmins",
					"fieldName": "superAdmins",
					"type": "[SuperAdmin!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "SuperAdminRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "6695e9e349571f876acf54d27e9eb64713d1aba10aba384e0ed8d8d3aacec002"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccounts",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n    createdAt\n  }\n}",
			"fields": [
				{
					"responseName": "superAccounts",
					"fieldName": "superAccounts",
					"type": "[SuperAccount!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdAt",
							"fieldName": "createdAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n    createdAt\n  }\n}",
			"operationId": "c5d380064d0fef943c0cf7a8a56679d11bc443eab8b5ef30e8072bde3dad33a3"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccount",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "viaOrgId",
					"type": "Boolean"
				}
			],
			"source": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      id\n      name\n    }\n    published: alphaPublished\n  }\n}",
			"fields": [
				{
					"responseName": "superAccount",
					"fieldName": "superAccount",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "viaOrgId",
							"value": {
								"kind": "Variable",
								"variableName": "viaOrgId"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdAt",
							"fieldName": "createdAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdBy",
							"fieldName": "createdBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "published",
							"fieldName": "alphaPublished",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      id\n      name\n    }\n    published: alphaPublished\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "a547489c24aeb2882601d67cb66b5c8b646956b89b47f70467138d631cf26e1d"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountRename",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountRename",
					"fieldName": "superAccountRename",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"operationId": "35e0b4c1ca53345b71db4be33f09d9d7d01f937d5edb66e20427e369e4369422"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountActivate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountActivate",
					"fieldName": "superAccountActivate",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "0634260d10c11dd5297daeb03a14dbb6fc99de5b60f582afba1c852030eb30ec"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountSuspend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountSuspend",
					"fieldName": "superAccountSuspend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "9731f7a74a97f83e2fda938181a4959263505df0da3600b3c9a403c1e67dcef1"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountPend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountPend",
					"fieldName": "superAccountPend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "e94d623a074a655a29baed63b62a0de47aa4548bebca58827c0b284362ad89c4"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountAdd",
					"fieldName": "superAccountAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"operationId": "8040bdd9914bcb22b2177e32642d811080abe3729fecae8aafec56efbf037a2f"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberAdd",
					"fieldName": "superAccountMemberAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "1c3944fd59133a7f921be94d9aa21493556614458b518f1111d632fdc9c47155"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberRemove",
					"fieldName": "superAccountMemberRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "61045120779a7d27cac971ed443b0b89f165ee7cf9c322358dd9b044fa827125"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "SuperAdminRole!"
				}
			],
			"source": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"fields": [
				{
					"responseName": "superAdminAdd",
					"fieldName": "superAdminAdd",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "role",
							"value": {
								"kind": "Variable",
								"variableName": "role"
							},
							"type": "SuperAdminRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"operationId": "f440c733de0c8db6b034cc5c7c67b5832011435850a008172d5a015594d51e37"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"fields": [
				{
					"responseName": "superAdminRemove",
					"fieldName": "superAdminRemove",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"operationId": "2d0cc3fb7ab84f3f2571981d691ccd467a8784d4e5d75a8aa7b9bb4d22b087c2"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "DebugEventsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "fromState",
					"type": "String"
				},
				{
					"name": "eventsCount",
					"type": "Int!"
				},
				{
					"name": "randomDelays",
					"type": "Boolean!"
				},
				{
					"name": "seed",
					"type": "String!"
				}
			],
			"source": "subscription DebugEventsWatch($fromState: String, $eventsCount: Int!, $randomDelays: Boolean!, $seed: String!) {\n  debugEvents(fromState: $fromState, eventsCount: $eventsCount, randomDelays: $randomDelays, seed: $seed) {\n    __typename\n    seq\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "debugEvents",
					"fieldName": "debugEvents",
					"type": "DebugEvent!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "fromState"
							},
							"type": "String"
						},
						{
							"name": "eventsCount",
							"value": {
								"kind": "Variable",
								"variableName": "eventsCount"
							},
							"type": "Int!"
						},
						{
							"name": "randomDelays",
							"value": {
								"kind": "Variable",
								"variableName": "randomDelays"
							},
							"type": "Boolean!"
						},
						{
							"name": "seed",
							"value": {
								"kind": "Variable",
								"variableName": "seed"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription DebugEventsWatch($fromState: String, $eventsCount: Int!, $randomDelays: Boolean!, $seed: String!) {\n  debugEvents(fromState: $fromState, eventsCount: $eventsCount, randomDelays: $randomDelays, seed: $seed) {\n    __typename\n    seq\n    key\n  }\n}",
			"operationId": "4b40c879c733210c70f614db916a9cbe30986fa96df2038022a4c847fcde173c"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "Profile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganization {\n      __typename\n      id\n      name\n      membersCount\n    }\n    primaryBadge {\n      __typename\n      ...UserBadge\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "shortname",
							"fieldName": "shortname",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "profile",
					"fieldName": "myProfile",
					"type": "Profile",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "alphaLinkedin",
							"type": "String",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganization",
							"fieldName": "primaryOrganization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganization {\n      __typename\n      id\n      name\n      membersCount\n    }\n    primaryBadge {\n      __typename\n      ...UserBadge\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "30675a09840f9b4651c6a771d69e84a40917c33bb40a6d4375dbbd3e0f9d1bbb"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateProfileInput!"
				},
				{
					"name": "uid",
					"type": "ID"
				}
			],
			"source": "mutation ProfileUpdate($input: UpdateProfileInput!, $uid: ID) {\n  updateProfile(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "updateProfile",
					"fieldName": "updateProfile",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateProfileInput!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "alphaLinkedin",
							"type": "String",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganizationId",
							"fieldName": "alphaPrimaryOrganizationId",
							"type": "ID",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileUpdate($input: UpdateProfileInput!, $uid: ID) {\n  updateProfile(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"operationId": "8ab92dd9e53535f6e10ecf8b75ab0ccc03b56c90455e93c5b933cee9388e7df8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "SetUserShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetUserShortName",
					"fieldName": "alphaSetUserShortName",
					"type": "String",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"operationId": "7f73862c2c0dbb13a01ff87bd3477d333a04ce8410a46a807d5f7af1b26dbab3"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateProfileInput!"
				}
			],
			"source": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"fields": [
				{
					"responseName": "createProfile",
					"fieldName": "createProfile",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateProfileInput!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"operationId": "f19be472891264ad6a518c1bfbee153b51cfb434be1f780bdb7c2f8b3a51d70e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "Settings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "settings",
					"fieldName": "settings",
					"type": "Settings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  commentNotifications\n  commentNotificationsDelivery\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "73ec2b5fb03c40d974e377ddeb3894521d8b7681040e1fb3b3b9f721a20d83e2"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "SettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateSettingsInput"
				}
			],
			"source": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateSettings",
					"fieldName": "updateSettings",
					"type": "Settings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateSettingsInput"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  commentNotifications\n  commentNotificationsDelivery\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "78e8fa3c801beb5334a134109125875ea622b78ba3f99b6438a0c94407727bd8"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Track.ts",
			"operationName": "PersistEvents",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "did",
					"type": "String!"
				},
				{
					"name": "events",
					"type": "[Event!]!"
				},
				{
					"name": "platform",
					"type": "EventPlatform"
				},
				{
					"name": "isProd",
					"type": "Boolean"
				}
			],
			"source": "mutation PersistEvents($did: String!, $events: [Event!]!, $platform: EventPlatform, $isProd: Boolean) {\n  track(did: $did, events: $events, platform: $platform, isProd: $isProd)\n}",
			"fields": [
				{
					"responseName": "track",
					"fieldName": "track",
					"type": "String!",
					"args": [
						{
							"name": "did",
							"value": {
								"kind": "Variable",
								"variableName": "did"
							},
							"type": "String!"
						},
						{
							"name": "events",
							"value": {
								"kind": "Variable",
								"variableName": "events"
							},
							"type": "[Event!]!"
						},
						{
							"name": "platform",
							"value": {
								"kind": "Variable",
								"variableName": "platform"
							},
							"type": "EventPlatform"
						},
						{
							"name": "isProd",
							"value": {
								"kind": "Variable",
								"variableName": "isProd"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation PersistEvents($did: String!, $events: [Event!]!, $platform: EventPlatform, $isProd: Boolean) {\n  track(did: $did, events: $events, platform: $platform, isProd: $isProd)\n}",
			"operationId": "a68609c9bfa272b16e27a9d92541e9f8f7f4f1e3e51314d124baec5f9e9a155d"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "Users",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n    primaryBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "users",
					"type": "[User!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "subtitle",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "primaryBadge",
							"fieldName": "primaryBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n    primaryBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "6a21846ee862f37737c6c9e4de71e314476469fa95790fa88b2666b9baf68354"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "User",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "conversation",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "e1cc246cef9cc17f62d0c4c6248d8846b98e80ef2a0eb35a7bc156e13844b63e"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "Online",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "online",
							"fieldName": "online",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastSeen",
							"fieldName": "lastSeen",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"operationId": "7686bc2494ba8abdf780a6454cc0bc2a92ff4c863d304d34f14af248518c9398"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "OnlineWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "users",
					"type": "[ID!]!"
				}
			],
			"source": "subscription OnlineWatch($users: [ID!]!) {\n  alphaSubscribeOnline(users: $users) {\n    __typename\n    user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    timeout\n  }\n}",
			"fields": [
				{
					"responseName": "alphaSubscribeOnline",
					"fieldName": "alphaSubscribeOnline",
					"type": "OnlineEvent!",
					"args": [
						{
							"name": "users",
							"value": {
								"kind": "Variable",
								"variableName": "users"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "online",
									"fieldName": "online",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "lastSeen",
									"fieldName": "lastSeen",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "timeout",
							"fieldName": "timeout",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription OnlineWatch($users: [ID!]!) {\n  alphaSubscribeOnline(users: $users) {\n    __typename\n    user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    timeout\n  }\n}",
			"operationId": "5cca69439e0bdf825856ae3e9558248b8b03fdb1888656d6747840fd14d65566"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "ExplorePeople",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "userSearch",
					"type": "UserConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[UserEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "isYou",
											"fieldName": "isYou",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"UserBadge",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ae3050e1b6617aacfad36bcc53f4853950affd2852ff026ef3fff68ee442e558"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "ResolveShortName",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      ...UserFull\n    }\n    ... on Organization {\n      ...OrganizationFull\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "item",
					"fieldName": "alphaResolveShortName",
					"type": "ShortNameDestination",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							]
						},
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationFull"
							]
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"UserBadge",
				"OrganizationShort",
				"OrganizationFull",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserForMention",
				"UserTiny"
			],
			"sourceWithFragments": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      ...UserFull\n    }\n    ... on Organization {\n      ...OrganizationFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "54ce1648541354ebf4b3e0c228998ff4a961dc65812960b91ef1d12485afd550"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "DeleteUser",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteUser($id: ID!) {\n  superDeleteUser(id: $id)\n}",
			"fields": [
				{
					"responseName": "superDeleteUser",
					"fieldName": "superDeleteUser",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteUser($id: ID!) {\n  superDeleteUser(id: $id)\n}",
			"operationId": "5befde6b40f2cea2d7f6d4ffb028561982b1d14c6ebc19a58e9a10cf503dec9d"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "BetaNextDiscoverReset",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [],
			"source": "mutation BetaNextDiscoverReset {\n  betaNextDiscoverReset\n}",
			"fields": [
				{
					"responseName": "betaNextDiscoverReset",
					"fieldName": "betaNextDiscoverReset",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation BetaNextDiscoverReset {\n  betaNextDiscoverReset\n}",
			"operationId": "575872406fe60068c0dd9589248f1d91033db50dceb96a2c94d399030ed4cf0a"
		},
		{
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "MySuccessfulInvitesCount",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MySuccessfulInvitesCount {\n  mySuccessfulInvitesCount\n}",
			"fields": [
				{
					"responseName": "mySuccessfulInvitesCount",
					"fieldName": "mySuccessfulInvitesCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query MySuccessfulInvitesCount {\n  mySuccessfulInvitesCount\n}",
			"operationId": "583cc1b5768357b84ff68923641b2bbd3143ec997a3c21bf40347e1add422dbd"
		}
	],
	"fragments": [
		{
			"typeCondition": "AppChat",
			"possibleTypes": [
				"AppChat"
			],
			"fragmentName": "AppChat",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/AppChat.ts",
			"source": "fragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "chat",
					"fieldName": "chat",
					"type": "Room!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "webhook",
					"fieldName": "webhook",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "AppProfile",
			"possibleTypes": [
				"AppProfile"
			],
			"fragmentName": "AppFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/AppFull.ts",
			"source": "fragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "token",
					"fieldName": "token",
					"type": "AppToken!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "salt",
							"fieldName": "salt",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "CommentEntry",
			"possibleTypes": [
				"CommentEntry"
			],
			"fragmentName": "CommentEntryFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/Comment.ts",
			"source": "fragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "deleted",
					"fieldName": "deleted",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "comment",
					"fieldName": "comment",
					"type": "GeneralMessage!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "parentComment",
					"fieldName": "parentComment",
					"type": "CommentEntry",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "GeneralMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"description": "Content",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "childComments",
					"fieldName": "childComments",
					"type": "[CommentEntry!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "CommunitySearch",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/CommunitySearch.ts",
			"source": "fragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaPublicRooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Conference",
			"possibleTypes": [
				"Conference"
			],
			"fragmentName": "ConferenceFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/ConferenceFull.ts",
			"source": "fragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "startTime",
					"fieldName": "startTime",
					"type": "Date",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "peers",
					"fieldName": "peers",
					"type": "[ConferencePeer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "connection",
							"fieldName": "connection",
							"type": "ConferencePeerConnection",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "ConferencePeerConnectionState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "iceServers",
					"fieldName": "iceServers",
					"type": "[ICEServer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urls",
							"fieldName": "urls",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "credential",
							"fieldName": "credential",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Conference",
			"possibleTypes": [
				"Conference"
			],
			"fragmentName": "ConferenceShort",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/ConferenceFull.ts",
			"source": "fragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "startTime",
					"fieldName": "startTime",
					"type": "Date",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "iceServers",
					"fieldName": "iceServers",
					"type": "[ICEServer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urls",
							"fieldName": "urls",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "credential",
							"fieldName": "credential",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage"
			],
			"fragmentName": "DaialogListMessage",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment DaialogListMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    id\n    name\n    firstName\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "firstName",
									"fieldName": "firstName",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage"
			],
			"fragmentName": "TinyMessage",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    isMentioned\n    commentsCount\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserTiny"
					],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserTiny"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isMentioned",
							"fieldName": "isMentioned",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage"
			],
			"fragmentName": "FullMessage",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      senderBadge {\n        __typename\n        ...UserBadge\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n        ... on MessageSpanDate {\n          date\n        }\n      }\n      ... on GeneralMessage {\n        id\n        commentsCount\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            id\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            id\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserForMention\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanDate {\n      date\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "spans",
					"fieldName": "spans",
					"type": "[MessageSpan!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "MessageSpanUserMention",
							"possibleTypes": [
								"MessageSpanUserMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserForMention"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanMultiUserMention",
							"possibleTypes": [
								"MessageSpanMultiUserMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "users",
									"fieldName": "users",
									"type": "[User!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserForMention"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanRoomMention",
							"possibleTypes": [
								"MessageSpanRoomMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "Room!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "PrivateRoom",
											"possibleTypes": [
												"PrivateRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "SharedRoom",
											"possibleTypes": [
												"SharedRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "title",
													"fieldName": "title",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanLink",
							"possibleTypes": [
								"MessageSpanLink"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "url",
									"fieldName": "url",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanDate",
							"possibleTypes": [
								"MessageSpanDate"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "date",
									"fieldName": "date",
									"type": "Date!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "edited",
							"fieldName": "edited",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "mimeType",
													"fieldName": "mimeType",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "size",
													"fieldName": "size",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageWidth",
													"fieldName": "imageWidth",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageHeight",
													"fieldName": "imageHeight",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageRichAttachment",
									"possibleTypes": [
										"MessageRichAttachment"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subTitle",
											"fieldName": "subTitle",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLink",
											"fieldName": "titleLink",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLinkHostname",
											"fieldName": "titleLinkHostname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "text",
											"fieldName": "text",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "icon",
											"fieldName": "icon",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "image",
											"fieldName": "image",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "keyboard",
											"fieldName": "keyboard",
											"type": "MessageKeyboard",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "buttons",
													"fieldName": "buttons",
													"type": "[[ModernMessageButton!]]!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "style",
															"fieldName": "style",
															"type": "ModernMessageButtonStyle!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "url",
															"fieldName": "url",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								},
								{
									"responseName": "date",
									"fieldName": "date",
									"type": "Date!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"description": "Content",
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "senderBadge",
									"fieldName": "senderBadge",
									"type": "UserBadge",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserBadge"
									],
									"inlineFragments": []
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "spans",
									"fieldName": "spans",
									"type": "[MessageSpan!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "MessageSpanUserMention",
											"possibleTypes": [
												"MessageSpanUserMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanMultiUserMention",
											"possibleTypes": [
												"MessageSpanMultiUserMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "users",
													"fieldName": "users",
													"type": "[User!]!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanRoomMention",
											"possibleTypes": [
												"MessageSpanRoomMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "room",
													"fieldName": "room",
													"type": "Room!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": [
														{
															"typeCondition": "PrivateRoom",
															"possibleTypes": [
																"PrivateRoom"
															],
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "user",
																	"fieldName": "user",
																	"type": "User!",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": []
														},
														{
															"typeCondition": "SharedRoom",
															"possibleTypes": [
																"SharedRoom"
															],
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "title",
																	"fieldName": "title",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": []
														}
													]
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanLink",
											"possibleTypes": [
												"MessageSpanLink"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanDate",
											"possibleTypes": [
												"MessageSpanDate"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "date",
													"fieldName": "date",
													"type": "Date!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "GeneralMessage",
									"possibleTypes": [
										"GeneralMessage"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"description": "State",
											"isDeprecated": false
										},
										{
											"responseName": "date",
											"fieldName": "date",
											"type": "Date!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "String",
											"isConditional": false,
											"description": "Content",
											"isDeprecated": false
										},
										{
											"responseName": "sender",
											"fieldName": "sender",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserShort"
											],
											"inlineFragments": []
										},
										{
											"responseName": "senderBadge",
											"fieldName": "senderBadge",
											"type": "UserBadge",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserBadge"
											],
											"inlineFragments": []
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "spans",
											"fieldName": "spans",
											"type": "[MessageSpan!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "MessageSpanUserMention",
													"possibleTypes": [
														"MessageSpanUserMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserShort"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanMultiUserMention",
													"possibleTypes": [
														"MessageSpanMultiUserMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "users",
															"fieldName": "users",
															"type": "[User!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserShort"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanRoomMention",
													"possibleTypes": [
														"MessageSpanRoomMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "room",
															"fieldName": "room",
															"type": "Room!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": [
																{
																	"typeCondition": "PrivateRoom",
																	"possibleTypes": [
																		"PrivateRoom"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "user",
																			"fieldName": "user",
																			"type": "User!",
																			"isConditional": false,
																			"isDeprecated": false,
																			"fields": [
																				{
																					"responseName": "__typename",
																					"fieldName": "__typename",
																					"type": "String!",
																					"isConditional": false
																				},
																				{
																					"responseName": "id",
																					"fieldName": "id",
																					"type": "ID!",
																					"isConditional": false,
																					"isDeprecated": false
																				},
																				{
																					"responseName": "name",
																					"fieldName": "name",
																					"type": "String!",
																					"isConditional": false,
																					"isDeprecated": false
																				}
																			],
																			"fragmentSpreads": [],
																			"inlineFragments": []
																		}
																	],
																	"fragmentSpreads": []
																},
																{
																	"typeCondition": "SharedRoom",
																	"possibleTypes": [
																		"SharedRoom"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "title",
																			"fieldName": "title",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": []
																}
															]
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanLink",
													"possibleTypes": [
														"MessageSpanLink"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "url",
															"fieldName": "url",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanDate",
													"possibleTypes": [
														"MessageSpanDate"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "date",
															"fieldName": "date",
															"type": "Date!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "commentsCount",
											"fieldName": "commentsCount",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "edited",
											"fieldName": "edited",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "attachments",
											"fieldName": "attachments",
											"type": "[ModernMessageAttachment!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "fallback",
													"fieldName": "fallback",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "MessageAttachmentFile",
													"possibleTypes": [
														"MessageAttachmentFile"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "fileId",
															"fieldName": "fileId",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "fileMetadata",
															"fieldName": "fileMetadata",
															"type": "FileMetadata!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "mimeType",
																	"fieldName": "mimeType",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "size",
																	"fieldName": "size",
																	"type": "Int!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "isImage",
																	"fieldName": "isImage",
																	"type": "Boolean!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageWidth",
																	"fieldName": "imageWidth",
																	"type": "Int",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageHeight",
																	"fieldName": "imageHeight",
																	"type": "Int",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageFormat",
																	"fieldName": "imageFormat",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "filePreview",
															"fieldName": "filePreview",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageRichAttachment",
													"possibleTypes": [
														"MessageRichAttachment"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "subTitle",
															"fieldName": "subTitle",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "titleLink",
															"fieldName": "titleLink",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "titleLinkHostname",
															"fieldName": "titleLinkHostname",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "text",
															"fieldName": "text",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "icon",
															"fieldName": "icon",
															"type": "Image",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "url",
																	"fieldName": "url",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "metadata",
																	"fieldName": "metadata",
																	"type": "FileMetadata",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "mimeType",
																			"fieldName": "mimeType",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "size",
																			"fieldName": "size",
																			"type": "Int!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "isImage",
																			"fieldName": "isImage",
																			"type": "Boolean!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageWidth",
																			"fieldName": "imageWidth",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageHeight",
																			"fieldName": "imageHeight",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageFormat",
																			"fieldName": "imageFormat",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "image",
															"fieldName": "image",
															"type": "Image",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "url",
																	"fieldName": "url",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "metadata",
																	"fieldName": "metadata",
																	"type": "FileMetadata",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "mimeType",
																			"fieldName": "mimeType",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "size",
																			"fieldName": "size",
																			"type": "Int!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "isImage",
																			"fieldName": "isImage",
																			"type": "Boolean!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageWidth",
																			"fieldName": "imageWidth",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageHeight",
																			"fieldName": "imageHeight",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageFormat",
																			"fieldName": "imageFormat",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "reactions",
							"fieldName": "reactions",
							"type": "[ModernMessageReaction!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "reaction",
									"fieldName": "reaction",
									"type": "MessageReactionType!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSpanUserMention",
									"possibleTypes": [
										"MessageSpanUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserForMention"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanMultiUserMention",
									"possibleTypes": [
										"MessageSpanMultiUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserForMention"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanRoomMention",
									"possibleTypes": [
										"MessageSpanRoomMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "room",
											"fieldName": "room",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanLink",
									"possibleTypes": [
										"MessageSpanLink"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "url",
											"fieldName": "url",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanDate",
									"possibleTypes": [
										"MessageSpanDate"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "date",
											"fieldName": "date",
											"type": "Date!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ServiceMessage",
					"possibleTypes": [
						"ServiceMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSpanUserMention",
									"possibleTypes": [
										"MessageSpanUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserForMention"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanMultiUserMention",
									"possibleTypes": [
										"MessageSpanMultiUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserForMention"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanRoomMention",
									"possibleTypes": [
										"MessageSpanRoomMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "room",
											"fieldName": "room",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanLink",
									"possibleTypes": [
										"MessageSpanLink"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "url",
											"fieldName": "url",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanDate",
									"possibleTypes": [
										"MessageSpanDate"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "date",
											"fieldName": "date",
											"type": "Date!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "serviceMetadata",
							"fieldName": "serviceMetadata",
							"type": "ServiceMetadata",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "InviteServiceMetadata",
									"possibleTypes": [
										"InviteServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "invitedBy",
											"fieldName": "invitedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "KickServiceMetadata",
									"possibleTypes": [
										"KickServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "kickedBy",
											"fieldName": "kickedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "TitleChangeServiceMetadata",
									"possibleTypes": [
										"TitleChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PhotoChangeServiceMetadata",
									"possibleTypes": [
										"PhotoChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PostRespondServiceMetadata",
									"possibleTypes": [
										"PostRespondServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "respondType",
											"fieldName": "respondType",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationFull.ts",
			"source": "fragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isPrivate",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "requests",
					"fieldName": "alphaOrganizationMemberRequests",
					"type": "[OrganizationRequestedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "rooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationMedium",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationMedium.ts",
			"source": "fragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "OrganizationProfile",
			"possibleTypes": [
				"OrganizationProfile"
			],
			"fragmentName": "OrganizationProfileFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationProfileFull.ts",
			"source": "fragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "websiteTitle",
					"fieldName": "websiteTitle",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "private",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "published",
					"fieldName": "alphaPublished",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "editorial",
					"fieldName": "alphaEditorial",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationSearch",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationSearch.ts",
			"source": "fragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationShort",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationShort.ts",
			"source": "fragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationWithoutMembersFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/OrganizationWithoutMembersFragment.ts",
			"source": "fragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isPrivate",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "requests",
					"fieldName": "alphaOrganizationMemberRequests",
					"type": "[OrganizationRequestedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "rooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/RoomFull.ts",
			"source": "fragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "socialImage",
							"fieldName": "socialImage",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "description",
							"fieldName": "description",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationMedium"
							],
							"inlineFragments": []
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[RoomMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "canKick",
									"fieldName": "canKick",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "badge",
									"fieldName": "badge",
									"type": "UserBadge",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserBadge"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "requests",
							"fieldName": "requests",
							"type": "[RoomMember!]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "welcomeMessage",
							"fieldName": "welcomeMessage",
							"type": "WelcomeMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isOn",
									"fieldName": "isOn",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomFullWithoutMembers",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/RoomFull.ts",
			"source": "fragment RoomFullWithoutMembers on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "socialImage",
							"fieldName": "socialImage",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "description",
							"fieldName": "description",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationMedium"
							],
							"inlineFragments": []
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "welcomeMessage",
							"fieldName": "welcomeMessage",
							"type": "WelcomeMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isOn",
									"fieldName": "isOn",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomNano",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/RoomNano.ts",
			"source": "fragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomShort",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/RoomShort.ts",
			"source": "fragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "SessionState",
			"possibleTypes": [
				"SessionState"
			],
			"fragmentName": "SessionStateFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/SessionStateFull.ts",
			"source": "fragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "isLoggedIn",
					"fieldName": "isLoggedIn",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isProfileCreated",
					"fieldName": "isProfileCreated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountActivated",
					"fieldName": "isAccountActivated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountExists",
					"fieldName": "isAccountExists",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountPicked",
					"fieldName": "isAccountPicked",
					"type": "Boolean!",
					"isConditional": false,
					"description": "deprecated",
					"isDeprecated": false
				},
				{
					"responseName": "isCompleted",
					"fieldName": "isCompleted",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBlocked",
					"fieldName": "isBlocked",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Settings",
			"possibleTypes": [
				"Settings"
			],
			"fragmentName": "SettingsFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/SettingsFragment.ts",
			"source": "fragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  commentNotifications\n  commentNotificationsDelivery\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryEmail",
					"fieldName": "primaryEmail",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "emailFrequency",
					"fieldName": "emailFrequency",
					"type": "EmailFrequency!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "desktopNotifications",
					"fieldName": "desktopNotifications",
					"type": "NotificationMessages!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "commentNotifications",
					"fieldName": "commentNotifications",
					"type": "NotificationComments!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "commentNotificationsDelivery",
					"fieldName": "commentNotificationsDelivery",
					"type": "CommentsNotificationDelivery!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileNotifications",
					"fieldName": "mobileNotifications",
					"type": "NotificationMessages!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileAlert",
					"fieldName": "mobileAlert",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileIncludeText",
					"fieldName": "mobileIncludeText",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "UserBadge",
			"possibleTypes": [
				"UserBadge"
			],
			"fragmentName": "UserBadge",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/UserBadge.ts",
			"source": "fragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "verified",
					"fieldName": "verified",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserForMention",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/UserForMention.ts",
			"source": "fragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryBadge",
					"fieldName": "primaryBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserFull",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/UserFull.ts",
			"source": "fragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  audienceSize\n  badges {\n    __typename\n    ...UserBadge\n  }\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "phone",
					"fieldName": "phone",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "location",
					"fieldName": "location",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "audienceSize",
					"fieldName": "audienceSize",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "badges",
					"fieldName": "badges",
					"type": "[UserBadge!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "primaryBadge",
					"fieldName": "primaryBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserShort",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/UserShort.ts",
			"source": "fragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryBadge",
					"fieldName": "primaryBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserTiny",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/fragments/UserTiny.ts",
			"source": "fragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryBadge {\n    __typename\n    ...UserBadge\n  }\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryBadge",
					"fieldName": "primaryBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "CommentUpdate",
			"possibleTypes": [
				"CommentReceived",
				"CommentUpdated"
			],
			"fragmentName": "CommentUpdateFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"source": "fragment CommentUpdateFragment on CommentUpdate {\n  __typename\n  ... on CommentReceived {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n  ... on CommentUpdated {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "CommentReceived",
					"possibleTypes": [
						"CommentReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "CommentEntry!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "CommentUpdated",
					"possibleTypes": [
						"CommentUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "CommentEntry!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ChatUpdate",
			"possibleTypes": [
				"ChatUpdated",
				"ChatMessageReceived",
				"ChatMessageUpdated",
				"ChatMessageDeleted",
				"ChatLostAccess"
			],
			"fragmentName": "ChatUpdateFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"source": "fragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "ChatMessageReceived",
					"possibleTypes": [
						"ChatMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "repeatKey",
							"fieldName": "repeatKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageUpdated",
					"possibleTypes": [
						"ChatMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageDeleted",
					"possibleTypes": [
						"ChatMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatUpdated",
					"possibleTypes": [
						"ChatUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chat",
							"fieldName": "chat",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"RoomShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatLostAccess",
					"possibleTypes": [
						"ChatLostAccess"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "lostAccess",
							"fieldName": "lostAccess",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "DialogUpdate",
			"possibleTypes": [
				"DialogMessageReceived",
				"DialogMessageUpdated",
				"DialogMessageDeleted",
				"DialogMessageRead",
				"DialogTitleUpdated",
				"DialogDeleted",
				"DialogPhotoUpdated",
				"DialogMuteChanged",
				"DialogMentionedChanged",
				"DialogBump"
			],
			"fragmentName": "DialogUpdateFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/Chats.ts",
			"source": "fragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogTitleUpdated {\n    cid\n    title\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogPhotoUpdated {\n    cid\n    photo\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "DialogMessageReceived",
					"possibleTypes": [
						"DialogMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageUpdated",
					"possibleTypes": [
						"DialogMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageDeleted",
					"possibleTypes": [
						"DialogMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "prevMessage",
							"fieldName": "alphaPrevMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageRead",
					"possibleTypes": [
						"DialogMessageRead"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogTitleUpdated",
					"possibleTypes": [
						"DialogTitleUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMuteChanged",
					"possibleTypes": [
						"DialogMuteChanged"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogPhotoUpdated",
					"possibleTypes": [
						"DialogPhotoUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogDeleted",
					"possibleTypes": [
						"DialogDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogBump",
					"possibleTypes": [
						"DialogBump"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "topMessage",
							"fieldName": "topMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Notification",
			"possibleTypes": [
				"Notification"
			],
			"fragmentName": "NotificationFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"source": "fragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "text",
					"fieldName": "text",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "content",
					"fieldName": "content",
					"type": "[NotificationContent!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "CommentEntry!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "peer",
							"fieldName": "peer",
							"type": "CommentsPeer!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "peerRoot",
									"fieldName": "peerRoot",
									"type": "CommentPeerRoot!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "GeneralMessage!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"description": "State",
													"isDeprecated": false
												},
												{
													"responseName": "fallback",
													"fieldName": "fallback",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "message",
													"fieldName": "message",
													"type": "String",
													"isConditional": false,
													"description": "Content",
													"isDeprecated": false
												},
												{
													"responseName": "sender",
													"fieldName": "sender",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												},
												{
													"responseName": "senderBadge",
													"fieldName": "senderBadge",
													"type": "UserBadge",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserBadge"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"RoomNano"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "subscription",
									"fieldName": "subscription",
									"type": "CommentSubscription",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "type",
											"fieldName": "type",
											"type": "CommentSubscriptionType",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "NotificationCenterUpdate",
			"possibleTypes": [
				"NotificationReceived",
				"NotificationRead",
				"NotificationDeleted",
				"NotificationUpdated",
				"NotificationContentUpdated"
			],
			"fragmentName": "NotificationCenterUpdateFragment",
			"filePath": "file:///Users/sergeylapin/repos/openland/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"source": "fragment NotificationCenterUpdateFragment on NotificationCenterUpdate {\n  __typename\n  ... on NotificationReceived {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationUpdated {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationDeleted {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      id\n    }\n  }\n  ... on NotificationRead {\n    center {\n      __typename\n      id\n      unread\n    }\n  }\n  ... on NotificationContentUpdated {\n    content {\n      __typename\n      ... on UpdatedNotificationContentComment {\n        peer {\n          __typename\n          peerRoot {\n            __typename\n            ... on CommentPeerRootMessage {\n              message {\n                __typename\n                ... on GeneralMessage {\n                  id\n                  fallback\n                  message\n                  sender {\n                    __typename\n                    id\n                    name\n                  }\n                  senderBadge {\n                    __typename\n                    ...UserBadge\n                  }\n                }\n              }\n              chat {\n                __typename\n                ...RoomNano\n              }\n            }\n          }\n          id\n          subscription {\n            __typename\n            type\n          }\n        }\n        comment {\n          __typename\n          ...CommentEntryFragment\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "NotificationReceived",
					"possibleTypes": [
						"NotificationReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationUpdated",
					"possibleTypes": [
						"NotificationUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationDeleted",
					"possibleTypes": [
						"NotificationDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationRead",
					"possibleTypes": [
						"NotificationRead"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationContentUpdated",
					"possibleTypes": [
						"NotificationContentUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "content",
							"fieldName": "content",
							"type": "UpdatedNotificationContent!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "peer",
									"fieldName": "peer",
									"type": "CommentsPeer!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "peerRoot",
											"fieldName": "peerRoot",
											"type": "CommentPeerRoot!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "message",
													"fieldName": "message",
													"type": "GeneralMessage!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"description": "State",
															"isDeprecated": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "message",
															"fieldName": "message",
															"type": "String",
															"isConditional": false,
															"description": "Content",
															"isDeprecated": false
														},
														{
															"responseName": "sender",
															"fieldName": "sender",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "senderBadge",
															"fieldName": "senderBadge",
															"type": "UserBadge",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserBadge"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												},
												{
													"responseName": "chat",
													"fieldName": "chat",
													"type": "Room!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"RoomNano"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subscription",
											"fieldName": "subscription",
											"type": "CommentSubscription",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "type",
													"fieldName": "type",
													"type": "CommentSubscriptionType",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "comment",
									"fieldName": "comment",
									"type": "CommentEntry",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentEntryFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		}
	],
	"typesUsed": [
		{
			"kind": "InputObjectType",
			"name": "CreateOrganizationInput",
			"fields": [
				{
					"name": "id",
					"type": "ID"
				},
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "personal",
					"type": "Boolean!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "isCommunity",
					"type": "Boolean"
				},
				{
					"name": "isPrivate",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageRefInput",
			"fields": [
				{
					"name": "uuid",
					"type": "String!"
				},
				{
					"name": "crop",
					"type": "ImageCropInput"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageCropInput",
			"fields": [
				{
					"name": "x",
					"type": "Int!"
				},
				{
					"name": "y",
					"type": "Int!"
				},
				{
					"name": "w",
					"type": "Int!"
				},
				{
					"name": "h",
					"type": "Int!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ProfileInput",
			"fields": [
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "PushType",
			"values": [
				{
					"name": "WEB_PUSH",
					"isDeprecated": false
				},
				{
					"name": "IOS",
					"isDeprecated": false
				},
				{
					"name": "ANDROID",
					"isDeprecated": false
				},
				{
					"name": "SAFARI",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppStorageValueInput",
			"fields": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "value",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DialogKind",
			"values": [
				{
					"name": "PRIVATE",
					"isDeprecated": false
				},
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomKind",
			"values": [
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomMembershipStatus",
			"values": [
				{
					"name": "MEMBER",
					"isDeprecated": false
				},
				{
					"name": "REQUESTED",
					"isDeprecated": false
				},
				{
					"name": "LEFT",
					"isDeprecated": false
				},
				{
					"name": "KICKED",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "RoomMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "PostMessageType",
			"values": [
				{
					"name": "BLANK",
					"isDeprecated": false
				},
				{
					"name": "JOB_OPPORTUNITY",
					"isDeprecated": false
				},
				{
					"name": "OFFICE_HOURS",
					"isDeprecated": false
				},
				{
					"name": "REQUEST_FOR_STARTUPS",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MentionInput",
			"fields": [
				{
					"name": "chatId",
					"type": "ID"
				},
				{
					"name": "userId",
					"type": "ID"
				},
				{
					"name": "userIds",
					"type": "[ID!]"
				},
				{
					"name": "all",
					"type": "Boolean"
				},
				{
					"name": "offset",
					"type": "Int!"
				},
				{
					"name": "length",
					"type": "Int!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "FileAttachmentInput",
			"fields": [
				{
					"name": "fileId",
					"type": "String!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MessageSpanInput",
			"fields": [
				{
					"name": "offset",
					"type": "Int!"
				},
				{
					"name": "length",
					"type": "Int!"
				},
				{
					"name": "type",
					"type": "MessageSpanType!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MessageSpanType",
			"values": [
				{
					"name": "Bold",
					"isDeprecated": false
				},
				{
					"name": "Italic",
					"isDeprecated": false
				},
				{
					"name": "Irony",
					"isDeprecated": false
				},
				{
					"name": "InlineCode",
					"isDeprecated": false
				},
				{
					"name": "CodeBlock",
					"isDeprecated": false
				},
				{
					"name": "Insane",
					"isDeprecated": false
				},
				{
					"name": "Loud",
					"isDeprecated": false
				},
				{
					"name": "Rotating",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomInviteInput",
			"fields": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "RoomMemberRole!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "OrganizationMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUserNotificaionSettingsInput",
			"fields": [
				{
					"name": "mute",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomInviteEmailRequest",
			"fields": [
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "emailText",
					"type": "String"
				},
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUpdateInput",
			"fields": [
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "socialImageRef",
					"type": "ImageRefInput"
				},
				{
					"name": "kind",
					"type": "SharedRoomKind"
				}
			]
		},
		{
			"kind": "ScalarType",
			"name": "Date",
			"description": "Date type format, serialized as UNIX-time in string"
		},
		{
			"kind": "EnumType",
			"name": "MessageReactionType",
			"values": [
				{
					"name": "LIKE",
					"isDeprecated": false
				},
				{
					"name": "THUMB_UP",
					"isDeprecated": false
				},
				{
					"name": "JOY",
					"isDeprecated": false
				},
				{
					"name": "SCREAM",
					"isDeprecated": false
				},
				{
					"name": "CRYING",
					"isDeprecated": false
				},
				{
					"name": "ANGRY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "CommentSubscriptionType",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MediaStreamState",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "GlobalSearchEntryKind",
			"values": [
				{
					"name": "ORGANIZATION",
					"isDeprecated": false
				},
				{
					"name": "USER",
					"isDeprecated": false
				},
				{
					"name": "SHAREDROOM",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateOrganizationProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "websiteTitle",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "facebook",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "contacts",
					"type": "[ContactPersonInput!]"
				},
				{
					"name": "alphaPublished",
					"type": "Boolean"
				},
				{
					"name": "alphaEditorial",
					"type": "Boolean"
				},
				{
					"name": "alphaFeatured",
					"type": "Boolean"
				},
				{
					"name": "alphaIsPrivate",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ContactPersonInput",
			"fields": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "position",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "link",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "InviteRequest",
			"fields": [
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "emailText",
					"type": "String"
				},
				{
					"name": "role",
					"type": "OrganizationMemberRole!"
				},
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DebugEmailType",
			"values": [
				{
					"name": "WELCOME",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_DEACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_REMOVED",
					"isDeprecated": false
				},
				{
					"name": "MEMBERSHIP_LEVEL_CHANGED",
					"isDeprecated": false
				},
				{
					"name": "INVITE",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_JOINED",
					"isDeprecated": false
				},
				{
					"name": "SIGNUP_CODE",
					"isDeprecated": false
				},
				{
					"name": "SIGIN_CODE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGES",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "PRIVATE_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "ROOM_INVITE_ACCEPTED",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAdminRole",
			"values": [
				{
					"name": "SUPER_ADMIN",
					"isDeprecated": false
				},
				{
					"name": "SOFTWARE_DEVELOPER",
					"isDeprecated": false
				},
				{
					"name": "EDITOR",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAccountState",
			"values": [
				{
					"name": "PENDING",
					"isDeprecated": false
				},
				{
					"name": "ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "SUSPENDED",
					"isDeprecated": false
				},
				{
					"name": "DELETED",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateProfileInput",
			"description": "Deprecated",
			"fields": [
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				},
				{
					"name": "alphaRole",
					"type": "String"
				},
				{
					"name": "alphaLocations",
					"type": "[String!]"
				},
				{
					"name": "alphaLinkedin",
					"type": "String"
				},
				{
					"name": "alphaTwitter",
					"type": "String"
				},
				{
					"name": "alphaPrimaryOrganizationId",
					"type": "ID"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "CreateProfileInput",
			"description": "Deprecated",
			"fields": [
				{
					"name": "firstName",
					"type": "String!"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateSettingsInput",
			"fields": [
				{
					"name": "emailFrequency",
					"type": "EmailFrequency"
				},
				{
					"name": "desktopNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "mobileNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "commentNotifications",
					"type": "NotificationComments"
				},
				{
					"name": "commentNotificationsDelivery",
					"type": "CommentsNotificationDelivery"
				},
				{
					"name": "mobileAlert",
					"type": "Boolean"
				},
				{
					"name": "mobileIncludeText",
					"type": "Boolean"
				},
				{
					"name": "mute",
					"type": "Boolean"
				},
				{
					"name": "notificationsDelay",
					"type": "NotificationsDelay"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EmailFrequency",
			"values": [
				{
					"name": "NEVER",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				},
				{
					"name": "HOUR_1",
					"isDeprecated": false
				},
				{
					"name": "HOUR_24",
					"isDeprecated": false
				},
				{
					"name": "WEEK_1",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationMessages",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationComments",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "CommentsNotificationDelivery",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationsDelay",
			"values": [
				{
					"name": "NONE",
					"isDeprecated": false
				},
				{
					"name": "MIN_1",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "Event",
			"fields": [
				{
					"name": "id",
					"type": "String!"
				},
				{
					"name": "event",
					"type": "String!"
				},
				{
					"name": "params",
					"type": "String"
				},
				{
					"name": "time",
					"type": "Date"
				},
				{
					"name": "os",
					"type": "String"
				},
				{
					"name": "deviceModel",
					"type": "String"
				},
				{
					"name": "platform",
					"type": "EventPlatform"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EventPlatform",
			"values": [
				{
					"name": "Android",
					"isDeprecated": false
				},
				{
					"name": "iOS",
					"isDeprecated": false
				},
				{
					"name": "WEB",
					"isDeprecated": false
				},
				{
					"name": "MobileWeb",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ConferencePeerConnectionState",
			"description": "Deprecated",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ModernMessageButtonStyle",
			"values": [
				{
					"name": "DEFAULT",
					"isDeprecated": false
				},
				{
					"name": "LIGHT",
					"isDeprecated": false
				}
			]
		}
	]
}