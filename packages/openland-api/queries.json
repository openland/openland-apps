{
	"operations": [
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "Account",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "sessionState",
					"fieldName": "sessionState",
					"type": "SessionState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SessionStateFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort",
				"SessionStateFull"
			],
			"sourceWithFragments": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"operationId": "75d91fc895737019ba48854c3550ef5f4e5bf821769f7e3a37abf5e3b9ba712d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "organizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "474fdb41be9150deca7e2b1b10ad38b25baf4e1281de98f4df6c1ba44ff06acc"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "SettingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "watchSettings",
					"fieldName": "watchSettings",
					"type": "Settings!",
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "8e479d719740077b4edb0e376978716d044dbfff05a4cfe24d2e0c1aed2d2233"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "CreateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "createOrganization",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "f6831fe0ff169ae7f2fdbeb49611e02c6427b3a97a8404828b62101ff0511f33"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "joined",
							"fieldName": "joined",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "forEmail",
							"fieldName": "forEmail",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "forName",
							"fieldName": "forName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isCommunity",
									"fieldName": "alphaIsCommunity",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "about",
									"fieldName": "about",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "9397aa9b759b4608ad6c887b83160d190e06f2bc61add5676a4a8736f31fd833"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "appInvite",
					"fieldName": "appInviteInfo",
					"type": "AppInvite",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "inviter",
							"fieldName": "inviter",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "9d64ded9886ac53db53f03d97cc489d205e0c6c3f4fb11ba737a7aca37822fb3"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountAppInvite {\n  invite: appInvite\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "appInvite",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountAppInvite {\n  invite: appInvite\n}",
			"operationId": "92485e320732c847a4bfd2d1e9f0667eb76669f900996bb1908f0d5e67716b04"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "alphaJoinInvite",
					"fieldName": "alphaJoinInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"operationId": "87acd52a2be3fa91bc8fb5651c16d36e338087d9bd02fa7da766f1bf2be88802"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInvites",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountInvites {\n  invites: alphaInvites {\n    __typename\n    id\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "invites",
					"fieldName": "alphaInvites",
					"type": "[Invite!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountInvites {\n  invites: alphaInvites {\n    __typename\n    id\n    key\n  }\n}",
			"operationId": "7c6375f060cf1743d397833557b02bf7457172113e285ae631893fc31ee3c82a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInvitesHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountInvitesHistory {\n  invites: alphaInvitesHistory {\n    __typename\n    forEmail\n    isGlobal\n    acceptedBy {\n      __typename\n      id\n      name\n      picture\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invites",
					"fieldName": "alphaInvitesHistory",
					"type": "[InviteHistotyInfo!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "forEmail",
							"fieldName": "forEmail",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isGlobal",
							"fieldName": "isGlobal",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "acceptedBy",
							"fieldName": "acceptedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "picture",
									"fieldName": "picture",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountInvitesHistory {\n  invites: alphaInvitesHistory {\n    __typename\n    forEmail\n    isGlobal\n    acceptedBy {\n      __typename\n      id\n      name\n      picture\n    }\n  }\n}",
			"operationId": "ef5fbf28a8dd4b1903f16d67118321f3e811c9be7c758eaae48424ff44a1b2bb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountCreateInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [],
			"source": "mutation AccountCreateInvite {\n  alphaCreateInvite {\n    __typename\n    id\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateInvite",
					"fieldName": "alphaCreateInvite",
					"type": "Invite!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountCreateInvite {\n  alphaCreateInvite {\n    __typename\n    id\n    key\n  }\n}",
			"operationId": "ed84e765334ed5cf84882a9936cfed6857acffe3ceb6ffe346f1f92cdf54c193"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "AccountDestroyInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation AccountDestroyInvite($id: ID!) {\n  alphaDeleteInvite(id: $id)\n}",
			"fields": [
				{
					"responseName": "alphaDeleteInvite",
					"fieldName": "alphaDeleteInvite",
					"type": "String!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountDestroyInvite($id: ID!) {\n  alphaDeleteInvite(id: $id)\n}",
			"operationId": "7b0d5b34eb34e2fbd32de3cf7af2065e1055f1cf01a3b2708208fe310198190e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "ProfilePrefill",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"fields": [
				{
					"responseName": "prefill",
					"fieldName": "myProfilePrefill",
					"type": "ProfilePrefill",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "picture",
							"fieldName": "picture",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"operationId": "869a1ca9997f74b34698133a00adf362cbfa0563b20c47c0f13d88eefe310330"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "CreateUserProfileAndOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "user",
					"type": "ProfileInput!"
				},
				{
					"name": "organization",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateUserProfileAndOrganization",
					"fieldName": "alphaCreateUserProfileAndOrganization",
					"type": "AlphaSignupData!",
					"args": [
						{
							"name": "user",
							"value": {
								"kind": "Variable",
								"variableName": "user"
							},
							"type": "ProfileInput!"
						},
						{
							"name": "organization",
							"value": {
								"kind": "Variable",
								"variableName": "organization"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "71bcc2ffe19ade12ac50d65255f1bd8b079346e57ccb403e7b04028bfa046fe8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "ReportOnline",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "active",
					"type": "Boolean"
				},
				{
					"name": "platform",
					"type": "String"
				}
			],
			"source": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"fields": [
				{
					"responseName": "presenceReportOnline",
					"fieldName": "presenceReportOnline",
					"type": "String!",
					"args": [
						{
							"name": "timeout",
							"value": 5000,
							"type": "Int!"
						},
						{
							"name": "active",
							"value": {
								"kind": "Variable",
								"variableName": "active"
							},
							"type": "Boolean"
						},
						{
							"name": "platform",
							"value": {
								"kind": "Variable",
								"variableName": "platform"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"operationId": "dae5bc153e0fe1a927d7ac90e49a4215e112464e021ad7c1717be44633465bf0"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				},
				{
					"name": "type",
					"type": "PushType!"
				}
			],
			"source": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"fields": [
				{
					"responseName": "registerPush",
					"fieldName": "registerPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "PushType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"operationId": "6a670ff6571c8c5ec63ca087a36729a73616fb193eb662a8af14689e55aaf45e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "FetchPushSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"fields": [
				{
					"responseName": "pushSettings",
					"fieldName": "pushSettings",
					"type": "PushSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "webPushKey",
							"fieldName": "webPushKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"operationId": "3e592c4aad6b00c990c8c205d08335e8e69578057c93284e084cf25e96b4d651"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterWebPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				}
			],
			"source": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"fields": [
				{
					"responseName": "registerWebPush",
					"fieldName": "registerWebPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"operationId": "b2f5515c7a71a4edd320ba247409da877f20df3ad9e153b3baddf105227b2250"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "MyApps",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "apps",
					"fieldName": "myApps",
					"type": "[AppProfile!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "7f5fcbd35608cf9f4f87d3244e1d9279834bbf7afa7cbf7ef10ec319f7eee515"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "CreateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			],
			"source": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "createApp",
					"fieldName": "createApp",
					"type": "AppProfile!",
					"args": [
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e66c8c46fe9ca81e6752c75cfdc56b39ab2f95b065b332ee0b5b74cfba58d247"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "UpdateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "AppProfileInput!"
				}
			],
			"source": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateAppProfile",
					"fieldName": "updateAppProfile",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "AppProfileInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "d1d94b978780c5722ad634731a6d5868f94dfd702f0e12e99ae1c4a3a6c4d275"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "RefreshAppToken",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				}
			],
			"source": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "refreshAppToken",
					"fieldName": "refreshAppToken",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e65cb17b382c289dda44a069bf5ade942a5e118656a6b7ad0b4ac7da0079ad57"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "AddAppToChat",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}",
			"fields": [
				{
					"responseName": "addAppToChat",
					"fieldName": "addAppToChat",
					"type": "AppChat!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppChat"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppChat"
			],
			"sourceWithFragments": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}\nfragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"operationId": "6eaa02124f5d5f5122b497b98351b2f30cf23ebd7ce4b906c147c4a883a2db01"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "UserStorage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "keys",
					"type": "[String!]!"
				}
			],
			"source": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorage",
					"fieldName": "userStorage",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "keys",
							"value": {
								"kind": "Variable",
								"variableName": "keys"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "f2955d05aeba62849ed54aa06e079023314a4e56b24bb40e466e4218c6e20e54"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/App.ts",
			"operationName": "UserStorageSet",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "data",
					"type": "[AppStorageValueInput!]!"
				}
			],
			"source": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorageSet",
					"fieldName": "userStorageSet",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "data",
							"value": {
								"kind": "Variable",
								"variableName": "data"
							},
							"type": "[AppStorageValueInput!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "6151ff3ad440a27aab076bde3d14d4a346e77cb2eaa66ceed11502d4fe3cf096"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "Dialogs",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...TinyMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "dialogs",
					"fieldName": "dialogs",
					"type": "DialogsConnection!",
					"args": [
						{
							"name": "first",
							"value": 20,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[Dialog!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "cid",
									"fieldName": "cid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fid",
									"fieldName": "fid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "DialogKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unreadCount",
									"fieldName": "unreadCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isMuted",
									"fieldName": "isMuted",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "haveMention",
									"fieldName": "haveMention",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "topMessage",
									"fieldName": "alphaTopMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"TinyMessage"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "dialogsState",
					"type": "DialogUpdateState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "counter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"TinyMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...TinyMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}\nfragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "40993d40c973d53e402469c74d7682bbb76ca77e643d1b0756772addd32b1aa5"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "chatUpdates",
					"type": "ChatUpdateContainer!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "ChatUpdateSingle",
							"possibleTypes": [
								"ChatUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "ChatUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "ChatUpdateBatch",
							"possibleTypes": [
								"ChatUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[ChatUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ChatUpdateFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}\nfragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}",
			"operationId": "19c4e0bb0e4081b17941ae36834093b13e1bf81f24ef3ae593d239dfce07aca0"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "DialogsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "dialogsUpdates",
					"type": "DialogUpdateContainer!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "DialogUpdateSingle",
							"possibleTypes": [
								"DialogUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "DialogUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "DialogUpdateBatch",
							"possibleTypes": [
								"DialogUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[DialogUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"DialogUpdateFragment",
				"TinyMessage",
				"UserTiny"
			],
			"sourceWithFragments": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}\nfragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n  }\n  ... on DialogTitleUpdated {\n    cid\n    title\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogMentionedChanged {\n    cid\n    haveMention\n  }\n  ... on DialogPhotoUpdated {\n    cid\n    photo\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n}\nfragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "e85142ae1f35b9cad8be0cba77e4c06cf552d9dcff8a416c877b3924e7b5f567"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "Room",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "1791f7a7e33a62345d93ac0fd3247bc2d71dd99c8b0ba58cd1d0bf02c3e2230f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomTiny",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "5067b77cdce1912186721de01e92a137a2538c2ef34e98ece392a59e5d712e03"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSuper",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"fields": [
				{
					"responseName": "roomSuper",
					"fieldName": "roomSuper",
					"type": "RoomSuper",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"operationId": "ea0da06309ee39889fa82d9c702244cb768bff10fee5c16ea37ef267985a5dcb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "PinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage(chatId: $chatId, messageId: $messageId)\n}",
			"fields": [
				{
					"responseName": "pinMessage",
					"fieldName": "pinMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage(chatId: $chatId, messageId: $messageId)\n}",
			"operationId": "7b1a1491df6086fea153fc2fc1a23ce230f4cf5c4a6b291b8ac09aad7c0a577a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "UnpinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage(chatId: $chatId)\n}",
			"fields": [
				{
					"responseName": "unpinMessage",
					"fieldName": "unpinMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage(chatId: $chatId)\n}",
			"operationId": "023d62984a3ede400769157231fc9b63e06a2fd5ad2a0098d88cad9c10586803"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageSetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation MessageSetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageSetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "9f724c1931d29de4ff56e283a49dcb7bee4425d33089076e8259f313cb9a9a87"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "SwitchReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "from",
					"type": "String!"
				},
				{
					"name": "to",
					"type": "String!"
				}
			],
			"source": "mutation SwitchReaction($messageId: ID!, $from: String!, $to: String!) {\n  betaReactionSet(mid: $messageId, reaction: $to)\n  betaReactionRemove(mid: $messageId, reaction: $from)\n}",
			"fields": [
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "to"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaReactionRemove",
					"fieldName": "betaReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "from"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SwitchReaction($messageId: ID!, $from: String!, $to: String!) {\n  betaReactionSet(mid: $messageId, reaction: $to)\n  betaReactionRemove(mid: $messageId, reaction: $from)\n}",
			"operationId": "6ab3b0a4733a61f350c28991ebf85cc7d4321be6ca72ff8088125c66c494d992"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageUnsetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation MessageUnsetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionRemove(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "betaReactionRemove",
					"fieldName": "betaReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageUnsetReaction($messageId: ID!, $reaction: String!) {\n  betaReactionRemove(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "dc032ef7e85eb37d26760af50f7db33697bcbb08e4e6a53ea4458b267e067f40"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "SendPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "text",
					"type": "String!"
				},
				{
					"name": "attachments",
					"type": "[String!]"
				},
				{
					"name": "postType",
					"type": "PostMessageType!"
				}
			],
			"source": "mutation SendPostMessage($conversationId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  sendPostMessage: alphaSendPostMessage(conversationId: $conversationId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"fields": [
				{
					"responseName": "sendPostMessage",
					"fieldName": "alphaSendPostMessage",
					"type": "ConversationEventMessage!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						},
						{
							"name": "text",
							"value": {
								"kind": "Variable",
								"variableName": "text"
							},
							"type": "String!"
						},
						{
							"name": "attachments",
							"value": {
								"kind": "Variable",
								"variableName": "attachments"
							},
							"type": "[String!]"
						},
						{
							"name": "postType",
							"value": {
								"kind": "Variable",
								"variableName": "postType"
							},
							"type": "PostMessageType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendPostMessage($conversationId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  sendPostMessage: alphaSendPostMessage(conversationId: $conversationId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"operationId": "f59b0bdb011d2d2fe6889c3f3b19be9b62205e5b3dc8684b3e0fd50cca5f94de"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "EditPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "text",
					"type": "String!"
				},
				{
					"name": "attachments",
					"type": "[String!]"
				},
				{
					"name": "postType",
					"type": "PostMessageType!"
				}
			],
			"source": "mutation EditPostMessage($messageId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  editPostMessage: alphaEditPostMessage(messageId: $messageId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"fields": [
				{
					"responseName": "editPostMessage",
					"fieldName": "alphaEditPostMessage",
					"type": "ConversationEventMessage!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						},
						{
							"name": "text",
							"value": {
								"kind": "Variable",
								"variableName": "text"
							},
							"type": "String!"
						},
						{
							"name": "attachments",
							"value": {
								"kind": "Variable",
								"variableName": "attachments"
							},
							"type": "[String!]"
						},
						{
							"name": "postType",
							"value": {
								"kind": "Variable",
								"variableName": "postType"
							},
							"type": "PostMessageType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditPostMessage($messageId: ID!, $title: String!, $text: String!, $attachments: [String!], $postType: PostMessageType!) {\n  editPostMessage: alphaEditPostMessage(messageId: $messageId, title: $title, text: $text, attachments: $attachments, postType: $postType) {\n    __typename\n    seq\n  }\n}",
			"operationId": "1c2dc61859a826aba683ecc21b65dc248c1b59f5d3192e8229c4555db1ac66bb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RespondPostMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "buttonId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "String!"
				}
			],
			"source": "mutation RespondPostMessage($messageId: ID!, $buttonId: ID!, $reaction: String!) {\n  alphaRespondPostMessage(messageId: $messageId, buttonId: $buttonId)\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "alphaRespondPostMessage",
					"fieldName": "alphaRespondPostMessage",
					"type": "Boolean",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "buttonId",
							"value": {
								"kind": "Variable",
								"variableName": "buttonId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaReactionSet",
					"fieldName": "betaReactionSet",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RespondPostMessage($messageId: ID!, $buttonId: ID!, $reaction: String!) {\n  alphaRespondPostMessage(messageId: $messageId, buttonId: $buttonId)\n  betaReactionSet(mid: $messageId, reaction: $reaction)\n}",
			"operationId": "6938e142dd9f03f679fcda35fcfbbfa7efcd38e432a942049ba9f5e99eb3c820"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "SaveDraftMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String!"
				}
			],
			"source": "mutation SaveDraftMessage($conversationId: ID!, $message: String!) {\n  conversationDraftUpdate(conversationId: $conversationId, message: $message)\n}",
			"fields": [
				{
					"responseName": "conversationDraftUpdate",
					"fieldName": "conversationDraftUpdate",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SaveDraftMessage($conversationId: ID!, $message: String!) {\n  conversationDraftUpdate(conversationId: $conversationId, message: $message)\n}",
			"operationId": "274718b5770ce92fe0cb9f4f0a9cd6320fca98e1f3bff588f711221b2372ca4f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "GetDraftMessage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "query GetDraftMessage($conversationId: ID!) {\n  message: conversationDraft(conversationId: $conversationId)\n}",
			"fields": [
				{
					"responseName": "message",
					"fieldName": "conversationDraft",
					"type": "String",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query GetDraftMessage($conversationId: ID!) {\n  message: conversationDraft(conversationId: $conversationId)\n}",
			"operationId": "c136a57f6da3543706ecd7709316c15d8008db66e054788a6ce4495bdbd74f7e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "GlobalCounter",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "alphaNotificationCounter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"operationId": "ba2ff26fcac56656eedb1e52d5625334b42a9f5142da25fc00ec6c10f030d5b3"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatHistory",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query ChatHistory($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "messages",
					"fieldName": "messages",
					"type": "[ModernMessage!]!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserTiny"
			],
			"sourceWithFragments": "query ChatHistory($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "5cb830f0600be88131546882ba30b01746236188fe5c95a26c8ec5cc444904a0"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "SendMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				},
				{
					"name": "repeatKey",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[ID!]"
				},
				{
					"name": "room",
					"type": "ID!"
				}
			],
			"source": "mutation SendMessage($message: String, $file: String, $repeatKey: String, $replyMessages: [ID!], $mentions: [ID!], $room: ID!) {\n  sentMessage: betaMessageSend(message: $message, file: $file, repeatKey: $repeatKey, replyMessages: $replyMessages, mentions: $mentions, room: $room)\n}",
			"fields": [
				{
					"responseName": "sentMessage",
					"fieldName": "betaMessageSend",
					"type": "Boolean!",
					"args": [
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[ID!]"
						},
						{
							"name": "room",
							"value": {
								"kind": "Variable",
								"variableName": "room"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendMessage($message: String, $file: String, $repeatKey: String, $replyMessages: [ID!], $mentions: [ID!], $room: ID!) {\n  sentMessage: betaMessageSend(message: $message, file: $file, repeatKey: $repeatKey, replyMessages: $replyMessages, mentions: $mentions, room: $room)\n}",
			"operationId": "f83e4d60bb8a91b3e6e60713479fe006a01d0e9e15f9e44024b8d7ccf8dbd3fe"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "ReplyMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[ID!]"
				}
			],
			"source": "mutation ReplyMessage($roomId: ID!, $message: String, $replyMessages: [ID!], $mentions: [ID!]) {\n  replyMessage: betaMessageSend(room: $roomId, message: $message, replyMessages: $replyMessages, mentions: $mentions)\n}",
			"fields": [
				{
					"responseName": "replyMessage",
					"fieldName": "betaMessageSend",
					"type": "Boolean!",
					"args": [
						{
							"name": "room",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[ID!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReplyMessage($roomId: ID!, $message: String, $replyMessages: [ID!], $mentions: [ID!]) {\n  replyMessage: betaMessageSend(room: $roomId, message: $message, replyMessages: $replyMessages, mentions: $mentions)\n}",
			"operationId": "7927631678ed8656eab5d1de4a4837f87a0e6f0af2734f8e377fb2e5974ff944"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "mid",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"fields": [
				{
					"responseName": "roomRead",
					"fieldName": "roomRead",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "mid"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"operationId": "87959d307e4b52880fbc752c7fc67974473b6733badac97a9f1634fef3ffad97"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatSearchGroup",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "members",
					"type": "[ID!]!"
				}
			],
			"source": "query ChatSearchGroup($members: [ID!]!) {\n  group: alphaChatSearch(members: $members) {\n    __typename\n    id\n    flexibleId\n  }\n}",
			"fields": [
				{
					"responseName": "group",
					"fieldName": "alphaChatSearch",
					"type": "Conversation",
					"args": [
						{
							"name": "members",
							"value": {
								"kind": "Variable",
								"variableName": "members"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "flexibleId",
							"fieldName": "flexibleId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ChatSearchGroup($members: [ID!]!) {\n  group: alphaChatSearch(members: $members) {\n    __typename\n    id\n    flexibleId\n  }\n}",
			"operationId": "f20769efeee3f92d24bc85f50787a79bd7597921377e8c37c2093e29c991a6a4"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "kind",
					"type": "SharedRoomKind!"
				},
				{
					"name": "members",
					"type": "[ID!]!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "organizationId",
					"type": "ID"
				},
				{
					"name": "channel",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "betaRoomCreate",
					"type": "SharedRoom!",
					"args": [
						{
							"name": "kind",
							"value": {
								"kind": "Variable",
								"variableName": "kind"
							},
							"type": "SharedRoomKind!"
						},
						{
							"name": "members",
							"value": {
								"kind": "Variable",
								"variableName": "members"
							},
							"type": "[ID!]!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String"
						},
						{
							"name": "description",
							"value": {
								"kind": "Variable",
								"variableName": "description"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						},
						{
							"name": "channel",
							"value": {
								"kind": "Variable",
								"variableName": "channel"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"description": "Room mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"operationId": "6599eb079eec56667dc804822d8e3b1dabed6badf0889ab8cba47ed7cb556596"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomCreateIntro",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				}
			],
			"source": "mutation RoomCreateIntro($roomId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroSend(room: $roomId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"fields": [
				{
					"responseName": "intro",
					"fieldName": "betaIntroSend",
					"type": "Boolean!",
					"args": [
						{
							"name": "room",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomCreateIntro($roomId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroSend(room: $roomId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"operationId": "caa61d4c68953e3abfae8948c07cfbaad8523ae0ddd3de6a40e5f58ebc94826e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomEditIntro",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				}
			],
			"source": "mutation RoomEditIntro($messageId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroEdit(mid: $messageId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"fields": [
				{
					"responseName": "intro",
					"fieldName": "betaIntroEdit",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomEditIntro($messageId: ID!, $uid: ID!, $about: String, $file: String) {\n  intro: betaIntroEdit(mid: $messageId, uid: $uid, about: $about, file: $file, message: $about)\n}",
			"operationId": "2b9c001f97af214adc78cd1e496a5f712badfb7fd686b00ab757d5486abf9588"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "SetTyping",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"fields": [
				{
					"responseName": "typingSend",
					"fieldName": "typingSend",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": "TEXT",
							"type": "TypingType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"operationId": "3b376c9bf15b7e2e33ae0919cd60784a7f08b4b13818e26b2c9787fc4241fe2c"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "CancelTyping",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "mutation CancelTyping($conversationId: ID!) {\n  typingCancel(conversationId: $conversationId)\n}",
			"fields": [
				{
					"responseName": "typingCancel",
					"fieldName": "typingCancel",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CancelTyping($conversationId: ID!) {\n  typingCancel(conversationId: $conversationId)\n}",
			"operationId": "4ef135377fde8eb83287cef3d3cf25a742f8ccb2715f054fd81126c66f975ef5"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAddMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomAddMember($roomId: ID!, $userId: ID!) {\n  betaRoomInvite(roomId: $roomId, invites: [{userId: $userId, role: MEMBER}]) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomInvite",
					"fieldName": "betaRoomInvite",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "invites",
							"value": [
								{
									"userId": {
										"kind": "Variable",
										"variableName": "userId"
									},
									"role": "MEMBER"
								}
							],
							"type": "[RoomInviteInput!]!"
						}
					],
					"isConditional": false,
					"description": "Members mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomAddMember($roomId: ID!, $userId: ID!) {\n  betaRoomInvite(roomId: $roomId, invites: [{userId: $userId, role: MEMBER}]) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "2d209561cbc7078964aa124d57f1ea30cf4956331bd185f78ad540ec089ae17c"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeclineJoinReuest",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeclineJoinReuest($roomId: ID!, $userId: ID!) {\n  betaRoomDeclineJoinRequest(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomDeclineJoinRequest",
					"fieldName": "betaRoomDeclineJoinRequest",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomDeclineJoinReuest($roomId: ID!, $userId: ID!) {\n  betaRoomDeclineJoinRequest(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "3fb6d96be115165e331f87d3b817b2dcdcaa8cc259dca1cd3394ba3cc00f6dbe"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAddMembers",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "invites",
					"type": "[RoomInviteInput!]!"
				}
			],
			"source": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  betaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomInvite",
					"fieldName": "betaRoomInvite",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "invites",
							"value": {
								"kind": "Variable",
								"variableName": "invites"
							},
							"type": "[RoomInviteInput!]!"
						}
					],
					"isConditional": false,
					"description": "Members mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  betaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "114c0528c38791297baacc54913dfa218c0910154db14861ae172eed2d6bb986"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomKick",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomKick",
					"fieldName": "betaRoomKick",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "6e31af0b69c1b4e9dd7645ac501b61b25cb13c28f7a8d89b01018d17d8be2de7"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomChangeRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "RoomMemberRole!"
				}
			],
			"source": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomChangeRole",
					"fieldName": "betaRoomChangeRole",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "RoomMemberRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "bc0b824743ba750b85c24148414b0588e4d43eeafc1286ab970f7cb9b9986cac"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomLeave",
					"fieldName": "betaRoomLeave",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "22e171c2305275018edd26a2b1b4557dcbe5bbbd653c515233060cb59f988a91"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSearchText",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query RoomSearchText($query: String!) {\n  items: betaDialogTextSearch(query: $query) {\n    __typename\n    id: cid\n    title\n    flexibleId: fid\n    photo\n    kind\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "betaDialogTextSearch",
					"type": "[Dialog!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "flexibleId",
							"fieldName": "fid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "DialogKind!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSearchText($query: String!) {\n  items: betaDialogTextSearch(query: $query) {\n    __typename\n    id: cid\n    title\n    flexibleId: fid\n    photo\n    kind\n  }\n}",
			"operationId": "833c22409ff07b99b2a528438cf1822a822bf24801813424ea81cf56a2a29904"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				}
			],
			"source": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...RoomShort\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "betaRoomSearch",
					"type": "RoomConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[RoomConnectionEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"RoomShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...RoomShort\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "03afbcd8ac56a63ace55f7f3d860a865008524a47b2ff9bf1bd4ce4cec250fc7"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterFeatured",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "featured",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterFeatured",
					"fieldName": "betaRoomAlterFeatured",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "featured",
							"value": {
								"kind": "Variable",
								"variableName": "featured"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"description": "Admin tools",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "e941c6e16566c7de768f67fc3cb788714d3e692586745aa9f68b1c67dd6f86de"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterHidden",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "listed",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterListed",
					"fieldName": "betaRoomAlterListed",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "listed",
							"value": {
								"kind": "Variable",
								"variableName": "listed"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "dac01e5e2d5890238c570a954f8325590e7327247276af35439e24507c325ddb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"operationId": "eb01e93b5df81e7aa52a034c5ea9fa3fab350786fb5005852c0616ff60ac22a6"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "04811fc2ae20ee1dd7f551bbe5959be7c3707a724aa41ceb0ed40703e8ad3bd4"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "settings",
					"type": "RoomUserNotificaionSettingsInput!"
				},
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdateUserNotificationSettings",
					"fieldName": "betaRoomUpdateUserNotificationSettings",
					"type": "RoomUserNotificaionSettings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "settings"
							},
							"type": "RoomUserNotificaionSettingsInput!"
						},
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"description": "User settings",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"operationId": "06c5327630b4f68b55f8ff4dc065d83b2cbf611eb2b3c34a16f38c060d629dcd"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomJoin",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "77af220d399b914411b0c8dd4c167758fd133c7e948e8cee3260b6a0944c76a2"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSendEmailInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "inviteRequests",
					"type": "[RoomInviteEmailRequest!]!"
				}
			],
			"source": "mutation RoomSendEmailInvite($roomId: ID!, $inviteRequests: [RoomInviteEmailRequest!]!) {\n  betaRoomInviteLinkSendEmail(roomId: $roomId, inviteRequests: $inviteRequests)\n}",
			"fields": [
				{
					"responseName": "betaRoomInviteLinkSendEmail",
					"fieldName": "betaRoomInviteLinkSendEmail",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "inviteRequests",
							"value": {
								"kind": "Variable",
								"variableName": "inviteRequests"
							},
							"type": "[RoomInviteEmailRequest!]!"
						}
					],
					"isConditional": false,
					"description": "Invite links",
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomSendEmailInvite($roomId: ID!, $inviteRequests: [RoomInviteEmailRequest!]!) {\n  betaRoomInviteLinkSendEmail(roomId: $roomId, inviteRequests: $inviteRequests)\n}",
			"operationId": "ed83ef0a666849b8aca04e2ba7d3635bc804fe1286e4b343f46a2c88e2d99e7f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoinInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomInviteLinkJoin",
					"type": "Room!",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"OrganizationMedium",
				"UserFull",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "811413397d189f0954b8756c1455d9f9b6f184199d48f4e02d54e35767f7da99"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRenewInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLinkRenew",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"operationId": "87171fbd97b50c4b54a836173e5debda1343a8986dad09ace36e909d30e55acb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteLink",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLink",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"operationId": "421f83a0ebf1bddcc0d9cb496cd80de3381bd8f91b8e0068b666901961599072"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "betaRoomInviteInfo",
					"type": "RoomInvite",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "room",
							"fieldName": "room",
							"type": "SharedRoom!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"OrganizationShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "invitedByUser",
							"fieldName": "invitedByUser",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort"
			],
			"sourceWithFragments": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "33a665e30ee69c581b164c8fac1eedee1e207319fee536b78c4d1cd164789fa6"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "ResolvedInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				}
			],
			"source": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      creator {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaResolveInvite",
					"type": "ResolveInviteEntry",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "InviteInfo",
							"possibleTypes": [
								"InviteInfo"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "creator",
									"fieldName": "creator",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "AppInvite",
							"possibleTypes": [
								"AppInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "inviter",
									"fieldName": "inviter",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "RoomInvite",
							"possibleTypes": [
								"RoomInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "invitedByUser",
									"fieldName": "invitedByUser",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "kind",
											"fieldName": "kind",
											"type": "SharedRoomKind!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isChannel",
											"fieldName": "isChannel",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "socialImage",
											"fieldName": "socialImage",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "description",
											"fieldName": "description",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membership",
											"fieldName": "membership",
											"type": "SharedRoomMembershipStatus!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      creator {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n        }\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "46537ca20ab18507da8ebbcee7b0b2b0807f8cf1aa217644782fd3ed9ad4359f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "RoomUpdateInput!"
				}
			],
			"source": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdate",
					"fieldName": "betaRoomUpdate",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "RoomUpdateInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n    }\n  }\n}",
			"operationId": "0d3066336e3b776d22a3a7475bb8eb48ed400cea4b36908e5874f9caf8a0a852"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"operationId": "e062da3347733ffc233e02064326d9cd578b945f9d49d92b81a1ae0e92c5c0e8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessages",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "mids",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mids",
							"value": {
								"kind": "Variable",
								"variableName": "mids"
							},
							"type": "[ID!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"operationId": "6227f6f997207c6854e98755bf4575fa5965643092a28544e0905b14f0ac0345"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteUrlAugmentation",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDeleteAugmentation",
					"fieldName": "betaMessageDeleteAugmentation",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"operationId": "67fda9fa3d5efa14694df68eb86319ca4d8a8fd0440603b639287a25ccc974cb"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomEditMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "file",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[ID!]"
				}
			],
			"source": "mutation RoomEditMessage($messageId: ID!, $message: String, $file: String, $replyMessages: [ID!], $mentions: [ID!]) {\n  betaMessageEdit(mid: $messageId, message: $message, file: $file, replyMessages: $replyMessages, mentions: $mentions)\n}",
			"fields": [
				{
					"responseName": "betaMessageEdit",
					"fieldName": "betaMessageEdit",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "file",
							"value": {
								"kind": "Variable",
								"variableName": "file"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[ID!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomEditMessage($messageId: ID!, $message: String, $file: String, $replyMessages: [ID!], $mentions: [ID!]) {\n  betaMessageEdit(mid: $messageId, message: $message, file: $file, replyMessages: $replyMessages, mentions: $mentions)\n}",
			"operationId": "9689fa47e09d3e8cced675a37afa95971be6a31c36f7f55501744362c057eea7"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "MarkSequenceRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "seq",
					"type": "Int!"
				}
			],
			"source": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"fields": [
				{
					"responseName": "alphaGlobalRead",
					"fieldName": "alphaGlobalRead",
					"type": "String!",
					"args": [
						{
							"name": "toSeq",
							"value": {
								"kind": "Variable",
								"variableName": "seq"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"operationId": "3ac00b53b7147bca4a579188417adf9b51e7ad32f013e5e699044474d861822e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "TypingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation {\n      __typename\n      id\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"fields": [
				{
					"responseName": "typings",
					"fieldName": "typings",
					"type": "TypingEvent!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "conversation",
							"fieldName": "conversation",
							"type": "Conversation!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cancel",
							"fieldName": "cancel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation {\n      __typename\n      id\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"operationId": "04da3b3d737f1956129d22faa08dc677f35ff1b1fc9ab9118ddb982ad399fa5d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"operationName": "UpdateWelcomeMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "welcomeMessageIsOn",
					"type": "Boolean!"
				},
				{
					"name": "welcomeMessageSender",
					"type": "ID"
				},
				{
					"name": "welcomeMessageText",
					"type": "String"
				}
			],
			"source": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"fields": [
				{
					"responseName": "updateWelcomeMessage",
					"fieldName": "updateWelcomeMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "welcomeMessageIsOn",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageIsOn"
							},
							"type": "Boolean!"
						},
						{
							"name": "welcomeMessageSender",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageSender"
							},
							"type": "ID"
						},
						{
							"name": "welcomeMessageText",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageText"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"operationId": "93b2980a544ac0c75deee548ca088a0110f90181e863ac867a67c8078c132aee"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "Conference",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "conference",
					"fieldName": "conference",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "a5cb406c8ad188d1c50ea95f7d0e2b30d18df59b254a28aff197d5fb6c1fbcc8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMedia",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceMedia",
					"fieldName": "conferenceMedia",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "iceServers",
							"fieldName": "iceServers",
							"type": "[ICEServer!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "urls",
									"fieldName": "urls",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "username",
									"fieldName": "username",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "credential",
									"fieldName": "credential",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"operationId": "35be179eae60bf0e919462a42fda8c13919b08fe865377cab4b7d55737f80935"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceFull\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceJoin",
					"fieldName": "conferenceJoin",
					"type": "ConferenceJoinResult!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "peerId",
							"fieldName": "peerId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "conference",
							"fieldName": "conference",
							"type": "Conference!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"ConferenceFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceFull\n    }\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "432da2a9a899d7bfbc61f8a0cf6569a5cfc82f60eeefdc043792a0e57162747a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceLeave",
					"fieldName": "conferenceLeave",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ba0d252af95f69ff51218235097a245d4009e5a5d2e325770758189f988575b4"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceKeepAlive",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceKeepAlive",
					"fieldName": "conferenceKeepAlive",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "7ab807646ab4f56b9f92b7bcd531ee783b2ff4175ecddee7c4c80bd884de1561"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionOffer",
					"fieldName": "peerConnectionOffer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "f7cbe46f50382e8aaec479146e95ced2915a82db9c77d1f8885057fa9441a74c"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionAnswer",
					"fieldName": "peerConnectionAnswer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "43b985527396df2aa1236fbbcc890610c0270c521d6f00d10fafab656e17bad4"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionCandidate",
					"fieldName": "peerConnectionCandidate",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "daed171e9b2291f94e03c0b11200529936c10bcab175b268cbfaa6d6e352afb0"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamOffer",
					"fieldName": "mediaStreamOffer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "4ec27733a3432a25d6f42cc4d7c7a4850fc21aefc77991074d08c7aac204ffa1"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamAnswer",
					"fieldName": "mediaStreamAnswer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "56c71f33327d511b28145a16127ab55180ce6d988a2c116c6f02945241402d33"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamCandidate",
					"fieldName": "mediaStreamCandidate",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "f0a65c04d41cbb16a07f1bc8b7b8bb6c7c47c258fc43ffcabd62dec2555992aa"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMediaWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "media",
					"fieldName": "alphaConferenceMediaWatch",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "3a548e19359ca7d9531648da9a3c777fe5399a524616528daa7c92ae8fdb155a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "alphaConferenceWatch",
					"fieldName": "alphaConferenceWatch",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "e9db83563affceb91536125460f37ac763b70de468e4987eae7b0a6a16899e2d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Explore.ts",
			"operationName": "AvailableRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AvailableRooms {\n  rooms: betaAvailableRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "rooms",
					"fieldName": "betaAvailableRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AvailableRooms {\n  rooms: betaAvailableRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"operationId": "679eecd728e3b606fd45b7f90f9ad984285fd1a5449eb4dad60e2df8ee7fed14"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Explore.ts",
			"operationName": "GlobalSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query GlobalSearch($query: String!) {\n  items: alphaGlobalSearch(query: $query) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaGlobalSearch",
					"type": "[GlobalSearchEntry!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							]
						},
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							]
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "roomPhoto",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort"
			],
			"sourceWithFragments": "query GlobalSearch($query: String!) {\n  items: alphaGlobalSearch(query: $query) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "0f6cb763cf8089613119ef6e54e163479a8fa2ceea8a8ff1ded8c6cade8c97e3"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlags",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlags",
					"fieldName": "featureFlags",
					"type": "[FeatureFlag!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "dd6de47404414231484d791d64fdfc82db8334197982191c682dd3784705d219"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlagAdd",
					"fieldName": "featureFlagAdd",
					"type": "FeatureFlag!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "cf2235a1b518f31402fc0fffb85ff5d6ace7df3f8353b6646c6d3df74eb72ce8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagEnable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureAdd",
					"fieldName": "superAccountFeatureAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "2083c426883d280373418e67fcd3ea5d057dd2a1a00f3b2b7778b99e0d13fe77"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagDisable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureRemove",
					"fieldName": "superAccountFeatureRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "8e8d707747ab2b7b137ff14eb2c653496a49f44bc595887227731fc002b88722"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedHome",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FeedHome {\n  homeFeed: alphaHomeFeed {\n    __typename\n    id\n    text\n    date\n    by: alphaBy {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "homeFeed",
					"fieldName": "alphaHomeFeed",
					"type": "[FeedItem!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "text",
							"fieldName": "text",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "by",
							"fieldName": "alphaBy",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query FeedHome {\n  homeFeed: alphaHomeFeed {\n    __typename\n    id\n    text\n    date\n    by: alphaBy {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "9b64642dec89a5927278ca1c9443e717d062d71d951de7c86d54d0d329e02757"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedPost",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "message",
					"type": "String!"
				}
			],
			"source": "mutation FeedPost($message: String!) {\n  alphaCreateFeedPost(message: $message) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateFeedPost",
					"fieldName": "alphaCreateFeedPost",
					"type": "FeedItem!",
					"args": [
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedPost($message: String!) {\n  alphaCreateFeedPost(message: $message) {\n    __typename\n    id\n  }\n}",
			"operationId": "8f8865ff6130b6f6af24fc52cb195d51d2a9a2cff45cefeb5d48120184bda00f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "MyOrganizations",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}",
			"fields": [
				{
					"responseName": "myOrganizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "isPrimary",
							"fieldName": "betaIsPrimary",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort"
			],
			"sourceWithFragments": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ea530ac015f6828103f76649e218c996350fdc35ac7d6f81def47d47b38d1981"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "UpdateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateOrganizationProfileInput!"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateOrganizationProfile",
					"fieldName": "updateOrganizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateOrganizationProfileInput!"
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  featured: alphaFeatured\n}",
			"operationId": "5dcec475e9f97846f7231e2db83ae25ae16ce31abcfe42495aad351af35665a8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "SetOrgShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetOrgShortName",
					"fieldName": "alphaSetOrgShortName",
					"type": "String",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"operationId": "2ba01d87de67cde65ef91cbc9a49ca67c67beab9b555f4683f363399d3786c14"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "Organization",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationFull",
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "f8069022836000c650876cdf6d7be2548799642966290ec580dce944aec327a2"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "members",
							"fieldName": "alphaOrganizationMembers",
							"type": "[OrganizationJoinedMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}",
			"operationId": "d9fb63fc1e3a593933618f45eb10b3aab3df31135dc6d181baba1838963b37bc"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationProfile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "organizationProfile",
					"fieldName": "organizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  featured: alphaFeatured\n}",
			"operationId": "dfca8d1a4e2a9fe0054420783c9b6342c9f068f10e4b7da5b64c6c7c37b95b6d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "ExploreOrganizations",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "prefix",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				},
				{
					"name": "all",
					"type": "Boolean"
				}
			],
			"source": "query ExploreOrganizations($query: String, $prefix: String, $sort: String, $page: Int, $after: String, $all: Boolean) {\n  items: alphaOrganizations(query: $query, prefix: $prefix, sort: $sort, page: $page, first: 25, after: $after, all: $all) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...OrganizationSearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaOrganizations",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "prefix",
							"value": {
								"kind": "Variable",
								"variableName": "prefix"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						},
						{
							"name": "all",
							"value": {
								"kind": "Variable",
								"variableName": "all"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"OrganizationSearch"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "query ExploreOrganizations($query: String, $prefix: String, $sort: String, $page: Int, $after: String, $all: Boolean) {\n  items: alphaOrganizations(query: $query, prefix: $prefix, sort: $sort, page: $page, first: 25, after: $after, all: $all) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...OrganizationSearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "5e867fe96760dccf1d4096b7a6f188814b218faef98423237a6dd446b8b45c1f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "ExploreCommunity",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				}
			],
			"source": "query ExploreCommunity($query: String, $sort: String, $page: Int) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaComunityPrefixSearch",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommunitySearch"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommunitySearch"
			],
			"sourceWithFragments": "query ExploreCommunity($query: String, $sort: String, $page: Int) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n}",
			"operationId": "1683b2ae73735a325fdc58e87bd42354e609bfdb8e262037d7125f8358063478"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationChangeMemberRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "memberId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "OrganizationMemberRole!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationChangeMemberRole",
					"fieldName": "alphaOrganizationChangeMemberRole",
					"type": "String!",
					"args": [
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "OrganizationMemberRole!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"operationId": "2c1206cb6dc01189e2d17cf07f43f7d1f2ae165875317411aee7b237b523b91e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAddMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userIds",
					"type": "[ID!]"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  betaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaOrganizationMemberAdd",
					"fieldName": "betaOrganizationMemberAdd",
					"type": "Organization!",
					"args": [
						{
							"name": "userIds",
							"value": {
								"kind": "Variable",
								"variableName": "userIds"
							},
							"type": "[ID!]"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationFull",
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  betaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "d1a3c15f97978af279d1c5094ecd03926d84dff793154434a7bfdba40f5000cd"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationRemoveMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "memberId",
					"type": "ID!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationRemoveMember($memberId: ID!, $organizationId: ID!) {\n  alphaOrganizationRemoveMember(memberId: $memberId, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationRemoveMember",
					"fieldName": "alphaOrganizationRemoveMember",
					"type": "String!",
					"args": [
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationRemoveMember($memberId: ID!, $organizationId: ID!) {\n  alphaOrganizationRemoveMember(memberId: $memberId, organizationId: $organizationId)\n}",
			"operationId": "5f1c807a147aeaca15a675acefd6af98b3371fe2f5c8f540b87453a847028362"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationInviteMembers",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteRequests",
					"type": "[InviteRequest!]!"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation OrganizationInviteMembers($inviteRequests: [InviteRequest!]!, $organizationId: ID) {\n  alphaOrganizationInviteMembers(inviteRequests: $inviteRequests, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationInviteMembers",
					"fieldName": "alphaOrganizationInviteMembers",
					"type": "String!",
					"args": [
						{
							"name": "inviteRequests",
							"value": {
								"kind": "Variable",
								"variableName": "inviteRequests"
							},
							"type": "[InviteRequest!]!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationInviteMembers($inviteRequests: [InviteRequest!]!, $organizationId: ID) {\n  alphaOrganizationInviteMembers(inviteRequests: $inviteRequests, organizationId: $organizationId)\n}",
			"operationId": "bbab73ef170fbf7d935705f21ac0bbb765c933a5aacdf2b465bb7b6ff0922319"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationPublicInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "publicInvite",
					"fieldName": "alphaOrganizationInviteLink",
					"type": "Invite",
					"args": [
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "695bfdf06fc8416883a48cb0750900636ec1d7983d400cf552c49f92bb24a95c"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationCreatePublicInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "expirationDays",
					"type": "Int"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationRefreshInviteLink",
					"fieldName": "alphaOrganizationRefreshInviteLink",
					"type": "Invite!",
					"args": [
						{
							"name": "expirationDays",
							"value": {
								"kind": "Variable",
								"variableName": "expirationDays"
							},
							"type": "Int"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "55955682d04e275bfd3ffb85722ec928dc2666314a474d371293caef099181b5"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "DeleteOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"fields": [
				{
					"responseName": "deleteOrganization",
					"fieldName": "deleteOrganization",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"operationId": "1943b0cb999b7c1070e2d244152f6c5fe217795a985820661d39ebfa9f20a034"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "betaOrganizationMemberRemove",
					"fieldName": "betaOrganizationMemberRemove",
					"type": "Organization!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"operationId": "0e426a8697d8558f1a871019ee40e2f4bb39ee5d04f77ba429c4c1c5da7fb5f1"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationActivateByInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "joinAppInvite",
					"fieldName": "joinAppInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"operationId": "5bdf1b731e1732711ccda488d3416c909a68a1c5f11ae0384539fffd53277cce"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAlterPublished",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "published",
					"type": "Boolean!"
				}
			],
			"source": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "alphaAlterPublished",
					"fieldName": "alphaAlterPublished",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "published",
							"value": {
								"kind": "Variable",
								"variableName": "published"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "fb154ae63c001bc89eaac0ec23ce1a46305ba658dba6e1f40701fa7c40a3a90f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationByPrefix",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "organizationByPrefix",
					"fieldName": "alphaOrganizationByPrefix",
					"type": "Organization",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "57ba6ecc0814aff32b011a46417e01cc0acfe5b8f6d47daa78221a3bab082c42"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "Permissions",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"operationId": "a4645b2b569166586d434a382d16320ccfc9999f859128de91439c67f6cf1f76"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "DebugMails",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "type",
					"type": "DebugEmailType!"
				}
			],
			"source": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"fields": [
				{
					"responseName": "debugSendEmail",
					"fieldName": "debugSendEmail",
					"type": "Boolean",
					"args": [
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "DebugEmailType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"operationId": "63da7e2686018eb1c9f88b0106afdb2a54567e75325c2c4fc898919820490618"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdmins",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}",
			"fields": [
				{
					"responseName": "superAdmins",
					"fieldName": "superAdmins",
					"type": "[SuperAdmin!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "SuperAdminRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "e2b6a618f400ac333d125650a56731fb0b656687d9e7639c63d482c44e92bd9a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccounts",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccounts",
					"fieldName": "superAccounts",
					"type": "[SuperAccount!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n  }\n}",
			"operationId": "4912b48bb1f25e954dc71aa547e620e0724519a16a205ce73c675d1f852b8c30"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccount",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "viaOrgId",
					"type": "Boolean"
				}
			],
			"source": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      name\n    }\n    published: alphaPublished\n  }\n}",
			"fields": [
				{
					"responseName": "superAccount",
					"fieldName": "superAccount",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "viaOrgId",
							"value": {
								"kind": "Variable",
								"variableName": "viaOrgId"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdAt",
							"fieldName": "createdAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdBy",
							"fieldName": "createdBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "published",
							"fieldName": "alphaPublished",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      name\n    }\n    published: alphaPublished\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "b7ae5190e2adcdd9194a40dfc0fb017ddea5ebc19fbea6f7b8da222e75462834"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountRename",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountRename",
					"fieldName": "superAccountRename",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"operationId": "35e0b4c1ca53345b71db4be33f09d9d7d01f937d5edb66e20427e369e4369422"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountActivate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountActivate",
					"fieldName": "superAccountActivate",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "0634260d10c11dd5297daeb03a14dbb6fc99de5b60f582afba1c852030eb30ec"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountSuspend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountSuspend",
					"fieldName": "superAccountSuspend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "9731f7a74a97f83e2fda938181a4959263505df0da3600b3c9a403c1e67dcef1"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountPend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountPend",
					"fieldName": "superAccountPend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "e94d623a074a655a29baed63b62a0de47aa4548bebca58827c0b284362ad89c4"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountAdd",
					"fieldName": "superAccountAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"operationId": "8040bdd9914bcb22b2177e32642d811080abe3729fecae8aafec56efbf037a2f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberAdd",
					"fieldName": "superAccountMemberAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "cb0c75ea67d9b7252d5b73ca52aa0ad45c238acd836408197001594f2e36982d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberRemove",
					"fieldName": "superAccountMemberRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "fe48ff191a761b04cada2cfd32a79dd6bf23fef6d0e07181a46db71c1a3c35dc"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "SuperAdminRole!"
				}
			],
			"source": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"fields": [
				{
					"responseName": "superAdminAdd",
					"fieldName": "superAdminAdd",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "role",
							"value": {
								"kind": "Variable",
								"variableName": "role"
							},
							"type": "SuperAdminRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"operationId": "f440c733de0c8db6b034cc5c7c67b5832011435850a008172d5a015594d51e37"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"fields": [
				{
					"responseName": "superAdminRemove",
					"fieldName": "superAdminRemove",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"operationId": "2d0cc3fb7ab84f3f2571981d691ccd467a8784d4e5d75a8aa7b9bb4d22b087c2"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "Profile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "shortname",
							"fieldName": "shortname",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "profile",
					"fieldName": "myProfile",
					"type": "Profile",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "alphaLinkedin",
							"type": "String",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganization",
							"fieldName": "primaryOrganization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      name\n    }\n  }\n}",
			"operationId": "42456512812f46d7fec7f46dd09c2f224c09ef827192ac080be565f5987a4903"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateProfileInput!"
				},
				{
					"name": "uid",
					"type": "ID"
				}
			],
			"source": "mutation ProfileUpdate($input: UpdateProfileInput!, $uid: ID) {\n  updateProfile(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "updateProfile",
					"fieldName": "updateProfile",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateProfileInput!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "alphaLinkedin",
							"type": "String",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganizationId",
							"fieldName": "alphaPrimaryOrganizationId",
							"type": "ID",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileUpdate($input: UpdateProfileInput!, $uid: ID) {\n  updateProfile(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin: alphaLinkedin\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      name\n    }\n  }\n}",
			"operationId": "c3d3c72f763758a2daaa8118cd652b7552113a217deb8e0f1cd0413d37a41534"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "SetUserShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetUserShortName",
					"fieldName": "alphaSetUserShortName",
					"type": "String",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"operationId": "7f73862c2c0dbb13a01ff87bd3477d333a04ce8410a46a807d5f7af1b26dbab3"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateProfileInput!"
				}
			],
			"source": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"fields": [
				{
					"responseName": "createProfile",
					"fieldName": "createProfile",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateProfileInput!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"operationId": "f19be472891264ad6a518c1bfbee153b51cfb434be1f780bdb7c2f8b3a51d70e"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "Settings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "settings",
					"fieldName": "settings",
					"type": "Settings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "35d2c1ce5886540c21c43499ce6cf62a8edd588ef5de583258e7ec1774e857f6"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Settings.ts",
			"operationName": "SettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateSettingsInput"
				}
			],
			"source": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateSettings",
					"fieldName": "updateSettings",
					"type": "Settings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateSettingsInput"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull"
			],
			"sourceWithFragments": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"operationId": "b2d13a2c6fed15d76bb8eb2f0dfeb4225bcf1381cda6807dd0a0936b45a94515"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Track.ts",
			"operationName": "PersistEvents",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "did",
					"type": "String!"
				},
				{
					"name": "events",
					"type": "[Event!]!"
				},
				{
					"name": "platform",
					"type": "EventPlatform"
				},
				{
					"name": "isProd",
					"type": "Boolean"
				}
			],
			"source": "mutation PersistEvents($did: String!, $events: [Event!]!, $platform: EventPlatform, $isProd: Boolean) {\n  track(did: $did, events: $events, platform: $platform, isProd: $isProd)\n}",
			"fields": [
				{
					"responseName": "track",
					"fieldName": "track",
					"type": "String!",
					"args": [
						{
							"name": "did",
							"value": {
								"kind": "Variable",
								"variableName": "did"
							},
							"type": "String!"
						},
						{
							"name": "events",
							"value": {
								"kind": "Variable",
								"variableName": "events"
							},
							"type": "[Event!]!"
						},
						{
							"name": "platform",
							"value": {
								"kind": "Variable",
								"variableName": "platform"
							},
							"type": "EventPlatform"
						},
						{
							"name": "isProd",
							"value": {
								"kind": "Variable",
								"variableName": "isProd"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation PersistEvents($did: String!, $events: [Event!]!, $platform: EventPlatform, $isProd: Boolean) {\n  track(did: $did, events: $events, platform: $platform, isProd: $isProd)\n}",
			"operationId": "a68609c9bfa272b16e27a9d92541e9f8f7f4f1e3e51314d124baec5f9e9a155d"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "Users",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "users",
					"type": "[User!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "subtitle",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n  }\n}",
			"operationId": "67dbb2aa634cac328a9ae07a9182c3f2664eeba0eea0b7b1cc2419e23fdbff2f"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "User",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "conversation",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"OrganizationShort"
			],
			"sourceWithFragments": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "01f81ce17a83dd461d63a10576b4e3655e0ecbfd63768978f01bbaf13f4d75c8"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "Online",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "online",
							"fieldName": "online",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastSeen",
							"fieldName": "lastSeen",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"operationId": "7686bc2494ba8abdf780a6454cc0bc2a92ff4c863d304d34f14af248518c9398"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "OnlineWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "conversations",
					"type": "[ID!]!"
				}
			],
			"source": "subscription OnlineWatch($conversations: [ID!]!) {\n  alphaSubscribeChatOnline(conversations: $conversations) {\n    __typename\n    user: user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    type\n    timeout\n  }\n}",
			"fields": [
				{
					"responseName": "alphaSubscribeChatOnline",
					"fieldName": "alphaSubscribeChatOnline",
					"type": "OnlineEvent!",
					"args": [
						{
							"name": "conversations",
							"value": {
								"kind": "Variable",
								"variableName": "conversations"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "online",
									"fieldName": "online",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "lastSeen",
									"fieldName": "lastSeen",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "type",
							"fieldName": "type",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "timeout",
							"fieldName": "timeout",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription OnlineWatch($conversations: [ID!]!) {\n  alphaSubscribeChatOnline(conversations: $conversations) {\n    __typename\n    user: user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    type\n    timeout\n  }\n}",
			"operationId": "2b432ff5475f23cdc3456d8e4f4a34c1a7e7cdb39faf4fc41438575b57454624"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "ExplorePeople",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "userSearch",
					"type": "UserConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[UserEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "isYou",
											"fieldName": "isYou",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "2318c6108330f16307a9ff7d8d732c0d2a6ac1ef3f368a198f223fa2fea4183a"
		},
		{
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/User.ts",
			"operationName": "ResolveShortName",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      ...UserFull\n    }\n    ... on Organization {\n      ...OrganizationFull\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "item",
					"fieldName": "alphaResolveShortName",
					"type": "ShortNameDestination",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							]
						},
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationFull"
							]
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"OrganizationShort",
				"OrganizationFull",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserTiny"
			],
			"sourceWithFragments": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      ...UserFull\n    }\n    ... on Organization {\n      ...OrganizationFull\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"operationId": "901770a672f3e9d776b66fdee29d11c1d1322eba1035fd3461e482afbbe3a19d"
		}
	],
	"fragments": [
		{
			"typeCondition": "AppChat",
			"possibleTypes": [
				"AppChat"
			],
			"fragmentName": "AppChat",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/AppChat.ts",
			"source": "fragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "chat",
					"fieldName": "chat",
					"type": "Room!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "webhook",
					"fieldName": "webhook",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "AppProfile",
			"possibleTypes": [
				"AppProfile"
			],
			"fragmentName": "AppFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/AppFull.ts",
			"source": "fragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "token",
					"fieldName": "token",
					"type": "AppToken!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "salt",
							"fieldName": "salt",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "CommunitySearch",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/CommunitySearch.ts",
			"source": "fragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Conference",
			"possibleTypes": [
				"Conference"
			],
			"fragmentName": "ConferenceFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/ConferenceFull.ts",
			"source": "fragment ConferenceFull on Conference {\n  __typename\n  id\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "peers",
					"fieldName": "peers",
					"type": "[ConferencePeer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "connection",
							"fieldName": "connection",
							"type": "ConferencePeerConnection",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "ConferencePeerConnectionState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "iceServers",
					"fieldName": "iceServers",
					"type": "[ICEServer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urls",
							"fieldName": "urls",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "credential",
							"fieldName": "credential",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage"
			],
			"fragmentName": "TinyMessage",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/Message.ts",
			"source": "fragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserTiny"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserTiny"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage"
			],
			"fragmentName": "FullMessage",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/Message.ts",
			"source": "fragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n      date\n      message\n      sender {\n        __typename\n        ...UserShort\n      }\n      message\n      fallback\n      spans {\n        __typename\n        offset\n        length\n        ... on MessageSpanUserMention {\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanMultiUserMention {\n          users {\n            __typename\n            ...UserShort\n          }\n        }\n        ... on MessageSpanRoomMention {\n          room {\n            __typename\n            ... on PrivateRoom {\n              id\n              user {\n                __typename\n                id\n                name\n              }\n            }\n            ... on SharedRoom {\n              id\n              title\n            }\n          }\n        }\n        ... on MessageSpanLink {\n          url\n        }\n      }\n      ... on GeneralMessage {\n        edited\n        attachments {\n          __typename\n          fallback\n          ... on MessageAttachmentFile {\n            fileId\n            fileMetadata {\n              __typename\n              name\n              mimeType\n              size\n              isImage\n              imageWidth\n              imageHeight\n              imageFormat\n            }\n            filePreview\n          }\n          ... on MessageRichAttachment {\n            title\n            subTitle\n            titleLink\n            titleLinkHostname\n            text\n            icon {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            image {\n              __typename\n              url\n              metadata {\n                __typename\n                name\n                mimeType\n                size\n                isImage\n                imageWidth\n                imageHeight\n                imageFormat\n              }\n            }\n            fallback\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    offset\n    length\n    ... on MessageSpanUserMention {\n      user {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanMultiUserMention {\n      users {\n        __typename\n        ...UserTiny\n      }\n    }\n    ... on MessageSpanRoomMention {\n      room {\n        __typename\n        ... on PrivateRoom {\n          id\n          user {\n            __typename\n            id\n            name\n          }\n        }\n        ... on SharedRoom {\n          id\n          title\n        }\n      }\n    }\n    ... on MessageSpanLink {\n      url\n    }\n    ... on MessageSpanBold {\n      offset\n      length\n    }\n  }\n  ... on ServiceMessage {\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "spans",
					"fieldName": "spans",
					"type": "[MessageSpan!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "MessageSpanUserMention",
							"possibleTypes": [
								"MessageSpanUserMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserTiny"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanMultiUserMention",
							"possibleTypes": [
								"MessageSpanMultiUserMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "users",
									"fieldName": "users",
									"type": "[User!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserTiny"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanRoomMention",
							"possibleTypes": [
								"MessageSpanRoomMention"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "Room!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "PrivateRoom",
											"possibleTypes": [
												"PrivateRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "SharedRoom",
											"possibleTypes": [
												"SharedRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "title",
													"fieldName": "title",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanLink",
							"possibleTypes": [
								"MessageSpanLink"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "url",
									"fieldName": "url",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MessageSpanBold",
							"possibleTypes": [
								"MessageSpanBold"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "edited",
							"fieldName": "edited",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "mimeType",
													"fieldName": "mimeType",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "size",
													"fieldName": "size",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageWidth",
													"fieldName": "imageWidth",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageHeight",
													"fieldName": "imageHeight",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageRichAttachment",
									"possibleTypes": [
										"MessageRichAttachment"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subTitle",
											"fieldName": "subTitle",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLink",
											"fieldName": "titleLink",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLinkHostname",
											"fieldName": "titleLinkHostname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "text",
											"fieldName": "text",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "icon",
											"fieldName": "icon",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "image",
											"fieldName": "image",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "keyboard",
											"fieldName": "keyboard",
											"type": "MessageKeyboard",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "buttons",
													"fieldName": "buttons",
													"type": "[[ModernMessageButton!]]!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "style",
															"fieldName": "style",
															"type": "ModernMessageButtonStyle!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "url",
															"fieldName": "url",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								},
								{
									"responseName": "date",
									"fieldName": "date",
									"type": "Date!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"description": "Content",
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "spans",
									"fieldName": "spans",
									"type": "[MessageSpan!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "MessageSpanUserMention",
											"possibleTypes": [
												"MessageSpanUserMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanMultiUserMention",
											"possibleTypes": [
												"MessageSpanMultiUserMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "users",
													"fieldName": "users",
													"type": "[User!]!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanRoomMention",
											"possibleTypes": [
												"MessageSpanRoomMention"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "room",
													"fieldName": "room",
													"type": "Room!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": [
														{
															"typeCondition": "PrivateRoom",
															"possibleTypes": [
																"PrivateRoom"
															],
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "user",
																	"fieldName": "user",
																	"type": "User!",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": []
														},
														{
															"typeCondition": "SharedRoom",
															"possibleTypes": [
																"SharedRoom"
															],
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "title",
																	"fieldName": "title",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": []
														}
													]
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "MessageSpanLink",
											"possibleTypes": [
												"MessageSpanLink"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "GeneralMessage",
									"possibleTypes": [
										"GeneralMessage"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"description": "State",
											"isDeprecated": false
										},
										{
											"responseName": "date",
											"fieldName": "date",
											"type": "Date!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "String",
											"isConditional": false,
											"description": "Content",
											"isDeprecated": false
										},
										{
											"responseName": "sender",
											"fieldName": "sender",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserShort"
											],
											"inlineFragments": []
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "spans",
											"fieldName": "spans",
											"type": "[MessageSpan!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "offset",
													"fieldName": "offset",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "length",
													"fieldName": "length",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "MessageSpanUserMention",
													"possibleTypes": [
														"MessageSpanUserMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserShort"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanMultiUserMention",
													"possibleTypes": [
														"MessageSpanMultiUserMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "users",
															"fieldName": "users",
															"type": "[User!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserShort"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanRoomMention",
													"possibleTypes": [
														"MessageSpanRoomMention"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "room",
															"fieldName": "room",
															"type": "Room!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": [
																{
																	"typeCondition": "PrivateRoom",
																	"possibleTypes": [
																		"PrivateRoom"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "user",
																			"fieldName": "user",
																			"type": "User!",
																			"isConditional": false,
																			"isDeprecated": false,
																			"fields": [
																				{
																					"responseName": "__typename",
																					"fieldName": "__typename",
																					"type": "String!",
																					"isConditional": false
																				},
																				{
																					"responseName": "id",
																					"fieldName": "id",
																					"type": "ID!",
																					"isConditional": false,
																					"isDeprecated": false
																				},
																				{
																					"responseName": "name",
																					"fieldName": "name",
																					"type": "String!",
																					"isConditional": false,
																					"isDeprecated": false
																				}
																			],
																			"fragmentSpreads": [],
																			"inlineFragments": []
																		}
																	],
																	"fragmentSpreads": []
																},
																{
																	"typeCondition": "SharedRoom",
																	"possibleTypes": [
																		"SharedRoom"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "title",
																			"fieldName": "title",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": []
																}
															]
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageSpanLink",
													"possibleTypes": [
														"MessageSpanLink"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "offset",
															"fieldName": "offset",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "length",
															"fieldName": "length",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "url",
															"fieldName": "url",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "edited",
											"fieldName": "edited",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "attachments",
											"fieldName": "attachments",
											"type": "[ModernMessageAttachment!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "fallback",
													"fieldName": "fallback",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "MessageAttachmentFile",
													"possibleTypes": [
														"MessageAttachmentFile"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "fileId",
															"fieldName": "fileId",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "fileMetadata",
															"fieldName": "fileMetadata",
															"type": "FileMetadata!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "mimeType",
																	"fieldName": "mimeType",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "size",
																	"fieldName": "size",
																	"type": "Int!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "isImage",
																	"fieldName": "isImage",
																	"type": "Boolean!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageWidth",
																	"fieldName": "imageWidth",
																	"type": "Int",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageHeight",
																	"fieldName": "imageHeight",
																	"type": "Int",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "imageFormat",
																	"fieldName": "imageFormat",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "filePreview",
															"fieldName": "filePreview",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "MessageRichAttachment",
													"possibleTypes": [
														"MessageRichAttachment"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "subTitle",
															"fieldName": "subTitle",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "titleLink",
															"fieldName": "titleLink",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "titleLinkHostname",
															"fieldName": "titleLinkHostname",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "text",
															"fieldName": "text",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "icon",
															"fieldName": "icon",
															"type": "Image",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "url",
																	"fieldName": "url",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "metadata",
																	"fieldName": "metadata",
																	"type": "FileMetadata",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "mimeType",
																			"fieldName": "mimeType",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "size",
																			"fieldName": "size",
																			"type": "Int!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "isImage",
																			"fieldName": "isImage",
																			"type": "Boolean!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageWidth",
																			"fieldName": "imageWidth",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageHeight",
																			"fieldName": "imageHeight",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageFormat",
																			"fieldName": "imageFormat",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "image",
															"fieldName": "image",
															"type": "Image",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "url",
																	"fieldName": "url",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "metadata",
																	"fieldName": "metadata",
																	"type": "FileMetadata",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "mimeType",
																			"fieldName": "mimeType",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "size",
																			"fieldName": "size",
																			"type": "Int!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "isImage",
																			"fieldName": "isImage",
																			"type": "Boolean!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageWidth",
																			"fieldName": "imageWidth",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageHeight",
																			"fieldName": "imageHeight",
																			"type": "Int",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "imageFormat",
																			"fieldName": "imageFormat",
																			"type": "String",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "reactions",
							"fieldName": "reactions",
							"type": "[ModernMessageReaction!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "reaction",
									"fieldName": "reaction",
									"type": "MessageReactionType!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSpanUserMention",
									"possibleTypes": [
										"MessageSpanUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanMultiUserMention",
									"possibleTypes": [
										"MessageSpanMultiUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanRoomMention",
									"possibleTypes": [
										"MessageSpanRoomMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "room",
											"fieldName": "room",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanLink",
									"possibleTypes": [
										"MessageSpanLink"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "url",
											"fieldName": "url",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanBold",
									"possibleTypes": [
										"MessageSpanBold"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ServiceMessage",
					"possibleTypes": [
						"ServiceMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "offset",
									"fieldName": "offset",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "length",
									"fieldName": "length",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSpanUserMention",
									"possibleTypes": [
										"MessageSpanUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanMultiUserMention",
									"possibleTypes": [
										"MessageSpanMultiUserMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanRoomMention",
									"possibleTypes": [
										"MessageSpanRoomMention"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "room",
											"fieldName": "room",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanLink",
									"possibleTypes": [
										"MessageSpanLink"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "url",
											"fieldName": "url",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageSpanBold",
									"possibleTypes": [
										"MessageSpanBold"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "offset",
											"fieldName": "offset",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "length",
											"fieldName": "length",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "serviceMetadata",
							"fieldName": "serviceMetadata",
							"type": "ServiceMetadata",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "InviteServiceMetadata",
									"possibleTypes": [
										"InviteServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "invitedBy",
											"fieldName": "invitedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "KickServiceMetadata",
									"possibleTypes": [
										"KickServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "kickedBy",
											"fieldName": "kickedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "TitleChangeServiceMetadata",
									"possibleTypes": [
										"TitleChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PhotoChangeServiceMetadata",
									"possibleTypes": [
										"PhotoChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PostRespondServiceMetadata",
									"possibleTypes": [
										"PostRespondServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "respondType",
											"fieldName": "respondType",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/OrganizationFull.ts",
			"source": "fragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "requests",
					"fieldName": "alphaOrganizationMemberRequests",
					"type": "[OrganizationRequestedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "rooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationMedium",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/OrganizationMedium.ts",
			"source": "fragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n  adminMembers: alphaOrganizationAdminMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "adminMembers",
					"fieldName": "alphaOrganizationAdminMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "OrganizationProfile",
			"possibleTypes": [
				"OrganizationProfile"
			],
			"fragmentName": "OrganizationProfileFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/OrganizationProfileFull.ts",
			"source": "fragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  shortname\n  featured: alphaFeatured\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "websiteTitle",
					"fieldName": "websiteTitle",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationSearch",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/OrganizationSearch.ts",
			"source": "fragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationShort",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/OrganizationShort.ts",
			"source": "fragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  isCommunity: alphaIsCommunity\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/RoomFull.ts",
			"source": "fragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "socialImage",
							"fieldName": "socialImage",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "description",
							"fieldName": "description",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationMedium"
							],
							"inlineFragments": []
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[RoomMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "canKick",
									"fieldName": "canKick",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "requests",
							"fieldName": "requests",
							"type": "[RoomMember!]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "welcomeMessage",
							"fieldName": "welcomeMessage",
							"type": "WelcomeMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isOn",
									"fieldName": "isOn",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomShort",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/RoomShort.ts",
			"source": "fragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "SessionState",
			"possibleTypes": [
				"SessionState"
			],
			"fragmentName": "SessionStateFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/SessionStateFull.ts",
			"source": "fragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "isLoggedIn",
					"fieldName": "isLoggedIn",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isProfileCreated",
					"fieldName": "isProfileCreated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountActivated",
					"fieldName": "isAccountActivated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountExists",
					"fieldName": "isAccountExists",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountPicked",
					"fieldName": "isAccountPicked",
					"type": "Boolean!",
					"isConditional": false,
					"description": "deprecated",
					"isDeprecated": false
				},
				{
					"responseName": "isCompleted",
					"fieldName": "isCompleted",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBlocked",
					"fieldName": "isBlocked",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Settings",
			"possibleTypes": [
				"Settings"
			],
			"fragmentName": "SettingsFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/SettingsFragment.ts",
			"source": "fragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  desktopNotifications\n  mobileNotifications\n  mobileAlert\n  mobileIncludeText\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryEmail",
					"fieldName": "primaryEmail",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "emailFrequency",
					"fieldName": "emailFrequency",
					"type": "EmailFrequency!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "desktopNotifications",
					"fieldName": "desktopNotifications",
					"type": "NotificationMessages!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileNotifications",
					"fieldName": "mobileNotifications",
					"type": "NotificationMessages!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileAlert",
					"fieldName": "mobileAlert",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "mobileIncludeText",
					"fieldName": "mobileIncludeText",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserFull",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/UserFull.ts",
			"source": "fragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  twitter\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "phone",
					"fieldName": "phone",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "location",
					"fieldName": "location",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserShort",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/UserShort.ts",
			"source": "fragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserTiny",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/fragments/UserTiny.ts",
			"source": "fragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ChatUpdate",
			"possibleTypes": [
				"ChatUpdated",
				"ChatMessageReceived",
				"ChatMessageUpdated",
				"ChatMessageDeleted",
				"ChatLostAccess"
			],
			"fragmentName": "ChatUpdateFragment",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"source": "fragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "ChatMessageReceived",
					"possibleTypes": [
						"ChatMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "repeatKey",
							"fieldName": "repeatKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageUpdated",
					"possibleTypes": [
						"ChatMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageDeleted",
					"possibleTypes": [
						"ChatMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatUpdated",
					"possibleTypes": [
						"ChatUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chat",
							"fieldName": "chat",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"RoomShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatLostAccess",
					"possibleTypes": [
						"ChatLostAccess"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "lostAccess",
							"fieldName": "lostAccess",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "DialogUpdate",
			"possibleTypes": [
				"DialogMessageReceived",
				"DialogMessageUpdated",
				"DialogMessageDeleted",
				"DialogMessageRead",
				"DialogTitleUpdated",
				"DialogDeleted",
				"DialogPhotoUpdated",
				"DialogMuteChanged",
				"DialogMentionedChanged",
				"DialogBump"
			],
			"fragmentName": "DialogUpdateFragment",
			"filePath": "file:///Users/max/Desktop/Openland/packages/openland-api/queries/Chats.ts",
			"source": "fragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n  }\n  ... on DialogTitleUpdated {\n    cid\n    title\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogMentionedChanged {\n    cid\n    haveMention\n  }\n  ... on DialogPhotoUpdated {\n    cid\n    photo\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "DialogMessageReceived",
					"possibleTypes": [
						"DialogMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageUpdated",
					"possibleTypes": [
						"DialogMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageDeleted",
					"possibleTypes": [
						"DialogMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "prevMessage",
							"fieldName": "alphaPrevMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageRead",
					"possibleTypes": [
						"DialogMessageRead"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogTitleUpdated",
					"possibleTypes": [
						"DialogTitleUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMuteChanged",
					"possibleTypes": [
						"DialogMuteChanged"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMentionedChanged",
					"possibleTypes": [
						"DialogMentionedChanged"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogPhotoUpdated",
					"possibleTypes": [
						"DialogPhotoUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogDeleted",
					"possibleTypes": [
						"DialogDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogBump",
					"possibleTypes": [
						"DialogBump"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "topMessage",
							"fieldName": "topMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		}
	],
	"typesUsed": [
		{
			"kind": "InputObjectType",
			"name": "CreateOrganizationInput",
			"fields": [
				{
					"name": "id",
					"type": "ID"
				},
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "personal",
					"type": "Boolean!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "isCommunity",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageRefInput",
			"fields": [
				{
					"name": "uuid",
					"type": "String!"
				},
				{
					"name": "crop",
					"type": "ImageCropInput"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageCropInput",
			"fields": [
				{
					"name": "x",
					"type": "Int!"
				},
				{
					"name": "y",
					"type": "Int!"
				},
				{
					"name": "w",
					"type": "Int!"
				},
				{
					"name": "h",
					"type": "Int!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ProfileInput",
			"fields": [
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "PushType",
			"values": [
				{
					"name": "WEB_PUSH",
					"isDeprecated": false
				},
				{
					"name": "IOS",
					"isDeprecated": false
				},
				{
					"name": "ANDROID",
					"isDeprecated": false
				},
				{
					"name": "SAFARI",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppStorageValueInput",
			"fields": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "value",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DialogKind",
			"values": [
				{
					"name": "PRIVATE",
					"isDeprecated": false
				},
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "PostMessageType",
			"values": [
				{
					"name": "BLANK",
					"isDeprecated": false
				},
				{
					"name": "JOB_OPPORTUNITY",
					"isDeprecated": false
				},
				{
					"name": "OFFICE_HOURS",
					"isDeprecated": false
				},
				{
					"name": "REQUEST_FOR_STARTUPS",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomKind",
			"values": [
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomInviteInput",
			"fields": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "RoomMemberRole!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "RoomMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomMembershipStatus",
			"values": [
				{
					"name": "MEMBER",
					"isDeprecated": false
				},
				{
					"name": "REQUESTED",
					"isDeprecated": false
				},
				{
					"name": "LEFT",
					"isDeprecated": false
				},
				{
					"name": "KICKED",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUserNotificaionSettingsInput",
			"fields": [
				{
					"name": "mute",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomInviteEmailRequest",
			"fields": [
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "emailText",
					"type": "String"
				},
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUpdateInput",
			"fields": [
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "socialImageRef",
					"type": "ImageRefInput"
				},
				{
					"name": "kind",
					"type": "SharedRoomKind"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MediaStreamState",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "ScalarType",
			"name": "Date",
			"description": "Date type format, serialized as UNIX-time in string"
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateOrganizationProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "websiteTitle",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "facebook",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "contacts",
					"type": "[ContactPersonInput!]"
				},
				{
					"name": "alphaPublished",
					"type": "Boolean"
				},
				{
					"name": "alphaEditorial",
					"type": "Boolean"
				},
				{
					"name": "alphaFeatured",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ContactPersonInput",
			"fields": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "position",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "link",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "OrganizationMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "InviteRequest",
			"fields": [
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "emailText",
					"type": "String"
				},
				{
					"name": "role",
					"type": "OrganizationMemberRole!"
				},
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DebugEmailType",
			"values": [
				{
					"name": "WELCOME",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_DEACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_REMOVED",
					"isDeprecated": false
				},
				{
					"name": "MEMBERSHIP_LEVEL_CHANGED",
					"isDeprecated": false
				},
				{
					"name": "INVITE",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_JOINED",
					"isDeprecated": false
				},
				{
					"name": "SIGNUP_CODE",
					"isDeprecated": false
				},
				{
					"name": "SIGIN_CODE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGES",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "PRIVATE_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "ROOM_INVITE_ACCEPTED",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAdminRole",
			"values": [
				{
					"name": "SUPER_ADMIN",
					"isDeprecated": false
				},
				{
					"name": "SOFTWARE_DEVELOPER",
					"isDeprecated": false
				},
				{
					"name": "EDITOR",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAccountState",
			"values": [
				{
					"name": "PENDING",
					"isDeprecated": false
				},
				{
					"name": "ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "SUSPENDED",
					"isDeprecated": false
				},
				{
					"name": "DELETED",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateProfileInput",
			"description": "Deprecated",
			"fields": [
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				},
				{
					"name": "alphaRole",
					"type": "String"
				},
				{
					"name": "alphaLocations",
					"type": "[String!]"
				},
				{
					"name": "alphaLinkedin",
					"type": "String"
				},
				{
					"name": "alphaTwitter",
					"type": "String"
				},
				{
					"name": "alphaPrimaryOrganizationId",
					"type": "ID"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "CreateProfileInput",
			"description": "Deprecated",
			"fields": [
				{
					"name": "firstName",
					"type": "String!"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateSettingsInput",
			"fields": [
				{
					"name": "emailFrequency",
					"type": "EmailFrequency"
				},
				{
					"name": "desktopNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "mobileNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "mobileAlert",
					"type": "Boolean"
				},
				{
					"name": "mobileIncludeText",
					"type": "Boolean"
				},
				{
					"name": "mute",
					"type": "Boolean"
				},
				{
					"name": "notificationsDelay",
					"type": "NotificationsDelay"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EmailFrequency",
			"values": [
				{
					"name": "NEVER",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				},
				{
					"name": "HOUR_1",
					"isDeprecated": false
				},
				{
					"name": "HOUR_24",
					"isDeprecated": false
				},
				{
					"name": "WEEK_1",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationMessages",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationsDelay",
			"values": [
				{
					"name": "NONE",
					"isDeprecated": false
				},
				{
					"name": "MIN_1",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "Event",
			"fields": [
				{
					"name": "id",
					"type": "String!"
				},
				{
					"name": "event",
					"type": "String!"
				},
				{
					"name": "params",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EventPlatform",
			"values": [
				{
					"name": "Android",
					"isDeprecated": false
				},
				{
					"name": "iOS",
					"isDeprecated": false
				},
				{
					"name": "WEB",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ConferencePeerConnectionState",
			"description": "Deprecated",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ModernMessageButtonStyle",
			"values": [
				{
					"name": "DEFAULT",
					"isDeprecated": false
				},
				{
					"name": "LIGHT",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MessageReactionType",
			"values": [
				{
					"name": "LIKE",
					"isDeprecated": false
				},
				{
					"name": "THUMB_UP",
					"isDeprecated": false
				},
				{
					"name": "JOY",
					"isDeprecated": false
				},
				{
					"name": "SCREAM",
					"isDeprecated": false
				},
				{
					"name": "CRYING",
					"isDeprecated": false
				},
				{
					"name": "ANGRY",
					"isDeprecated": false
				}
			]
		}
	]
}