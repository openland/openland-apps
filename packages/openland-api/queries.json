{
	"operations": [
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "Account",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "sessionState",
					"fieldName": "sessionState",
					"type": "SessionState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SessionStateFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort",
				"SessionStateFull"
			],
			"sourceWithFragments": "query Account {\n  me: me {\n    __typename\n    ...UserShort\n  }\n  sessionState: sessionState {\n    __typename\n    ...SessionStateFull\n  }\n  myPermissions {\n    __typename\n    roles\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"operationId": "26bef02ab38d065047f08fa6fb66bf1b8a10c6a991f47acf7a31b3408ab280ae"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n    audienceSize\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "me",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "audienceSize",
							"fieldName": "audienceSize",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "organizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountSettings {\n  me: me {\n    __typename\n    ...UserShort\n    audienceSize\n  }\n  organizations: myOrganizations {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "c7c9aa2d2c15b70c3c0fd9e721b072819714b3c727318da176f8aabe0fdd1c8a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "SettingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "watchSettings",
					"fieldName": "watchSettings",
					"type": "Settings!",
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull",
				"PlatformNotificationSettingsFull"
			],
			"sourceWithFragments": "subscription SettingsWatch {\n  watchSettings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  excludeMutedChats\n  countUnreadChats\n  desktop {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n  mobile {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n}\nfragment PlatformNotificationSettingsFull on PlatformNotificationSettings {\n  __typename\n  direct {\n    __typename\n    showNotification\n    sound\n  }\n  secretChat {\n    __typename\n    showNotification\n    sound\n  }\n  organizationChat {\n    __typename\n    showNotification\n    sound\n  }\n  communityChat {\n    __typename\n    showNotification\n    sound\n  }\n  comments {\n    __typename\n    showNotification\n    sound\n  }\n  notificationPreview\n}",
			"operationId": "30ac7c1c567e900efd6cbe863961a2194be9a386850507caecd623487eaee643"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "CreateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "createOrganization",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CreateOrganization($input: CreateOrganizationInput!) {\n  organization: createOrganization(input: $input) {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "f6831fe0ff169ae7f2fdbeb49611e02c6427b3a97a8404828b62101ff0511f33"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      id\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "joined",
							"fieldName": "joined",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "forEmail",
							"fieldName": "forEmail",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "forName",
							"fieldName": "forName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isCommunity",
									"fieldName": "alphaIsCommunity",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "about",
									"fieldName": "about",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    key\n    orgId\n    title\n    photo\n    joined\n    creator {\n      __typename\n      ...UserShort\n    }\n    forEmail\n    forName\n    membersCount\n    organization {\n      __typename\n      id\n      isCommunity: alphaIsCommunity\n      about\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "2b0060a46fb32f8b894f1b7593176246d9cd07fc97f2499c29132e80f620e1dd"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaInviteInfo",
					"type": "InviteInfo",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "creator",
							"fieldName": "creator",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "appInvite",
					"fieldName": "appInviteInfo",
					"type": "AppInvite",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "inviter",
							"fieldName": "inviter",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query AccountAppInviteInfo($inviteKey: String!) {\n  invite: alphaInviteInfo(key: $inviteKey) {\n    __typename\n    id\n    creator {\n      __typename\n      ...UserShort\n    }\n  }\n  appInvite: appInviteInfo(key: $inviteKey) {\n    __typename\n    inviter {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "880f16b4a48827c354ab8e53fd17a72cb94b1be2efbac2bbaf878067b46b3e99"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountAppInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AccountAppInvite {\n  invite: appInvite\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "appInvite",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query AccountAppInvite {\n  invite: appInvite\n}",
			"operationId": "92485e320732c847a4bfd2d1e9f0667eb76669f900996bb1908f0d5e67716b04"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "AccountInviteJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "alphaJoinInvite",
					"fieldName": "alphaJoinInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AccountInviteJoin($inviteKey: String!) {\n  alphaJoinInvite(key: $inviteKey)\n}",
			"operationId": "87acd52a2be3fa91bc8fb5651c16d36e338087d9bd02fa7da766f1bf2be88802"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "ProfilePrefill",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"fields": [
				{
					"responseName": "prefill",
					"fieldName": "myProfilePrefill",
					"type": "ProfilePrefill",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "picture",
							"fieldName": "picture",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ProfilePrefill {\n  prefill: myProfilePrefill {\n    __typename\n    firstName\n    lastName\n    picture\n  }\n}",
			"operationId": "869a1ca9997f74b34698133a00adf362cbfa0563b20c47c0f13d88eefe310330"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "CreateUserProfileAndOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "user",
					"type": "ProfileInput!"
				},
				{
					"name": "organization",
					"type": "CreateOrganizationInput!"
				}
			],
			"source": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "alphaCreateUserProfileAndOrganization",
					"fieldName": "alphaCreateUserProfileAndOrganization",
					"type": "AlphaSignupData!",
					"args": [
						{
							"name": "user",
							"value": {
								"kind": "Variable",
								"variableName": "user"
							},
							"type": "ProfileInput!"
						},
						{
							"name": "organization",
							"value": {
								"kind": "Variable",
								"variableName": "organization"
							},
							"type": "CreateOrganizationInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation CreateUserProfileAndOrganization($user: ProfileInput!, $organization: CreateOrganizationInput!) {\n  alphaCreateUserProfileAndOrganization(user: $user, organization: $organization) {\n    __typename\n    user {\n      __typename\n      ...UserFull\n    }\n    organization {\n      __typename\n      id\n      name\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "55f325f2ec5cfc320d2cb9478e49baf8212739df3d2e3f0818fb9e1b3ae4a3e1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "ReportOnline",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "active",
					"type": "Boolean"
				},
				{
					"name": "platform",
					"type": "String"
				}
			],
			"source": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"fields": [
				{
					"responseName": "presenceReportOnline",
					"fieldName": "presenceReportOnline",
					"type": "String!",
					"args": [
						{
							"name": "timeout",
							"value": 5000,
							"type": "Int!"
						},
						{
							"name": "active",
							"value": {
								"kind": "Variable",
								"variableName": "active"
							},
							"type": "Boolean"
						},
						{
							"name": "platform",
							"value": {
								"kind": "Variable",
								"variableName": "platform"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReportOnline($active: Boolean, $platform: String) {\n  presenceReportOnline(timeout: 5000, active: $active, platform: $platform)\n}",
			"operationId": "dae5bc153e0fe1a927d7ac90e49a4215e112464e021ad7c1717be44633465bf0"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				},
				{
					"name": "type",
					"type": "PushType!"
				}
			],
			"source": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"fields": [
				{
					"responseName": "registerPush",
					"fieldName": "registerPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "PushType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterPush($endpoint: String!, $type: PushType!) {\n  registerPush(endpoint: $endpoint, type: $type)\n}",
			"operationId": "6a670ff6571c8c5ec63ca087a36729a73616fb193eb662a8af14689e55aaf45e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "FetchPushSettings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"fields": [
				{
					"responseName": "pushSettings",
					"fieldName": "pushSettings",
					"type": "PushSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "webPushKey",
							"fieldName": "webPushKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FetchPushSettings {\n  pushSettings {\n    __typename\n    webPushKey\n  }\n}",
			"operationId": "3e592c4aad6b00c990c8c205d08335e8e69578057c93284e084cf25e96b4d651"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Account.ts",
			"operationName": "RegisterWebPush",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "endpoint",
					"type": "String!"
				}
			],
			"source": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"fields": [
				{
					"responseName": "registerWebPush",
					"fieldName": "registerWebPush",
					"type": "String!",
					"args": [
						{
							"name": "endpoint",
							"value": {
								"kind": "Variable",
								"variableName": "endpoint"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RegisterWebPush($endpoint: String!) {\n  registerWebPush(endpoint: $endpoint)\n}",
			"operationId": "b2f5515c7a71a4edd320ba247409da877f20df3ad9e153b3baddf105227b2250"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "MyApps",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "apps",
					"fieldName": "myApps",
					"type": "[AppProfile!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "query MyApps {\n  apps: myApps {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "7f5fcbd35608cf9f4f87d3244e1d9279834bbf7afa7cbf7ef10ec319f7eee515"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "CreateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			],
			"source": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "createApp",
					"fieldName": "createApp",
					"type": "AppProfile!",
					"args": [
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation CreateApp($name: String!, $shortname: String, $photoRef: ImageRefInput, $about: String) {\n  createApp(name: $name, shortname: $shortname, photoRef: $photoRef, about: $about) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e66c8c46fe9ca81e6752c75cfdc56b39ab2f95b065b332ee0b5b74cfba58d247"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UpdateApp",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "AppProfileInput!"
				}
			],
			"source": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateAppProfile",
					"fieldName": "updateAppProfile",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "AppProfileInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation UpdateApp($appId: ID!, $input: AppProfileInput!) {\n  updateAppProfile(appId: $appId, input: $input) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "d1d94b978780c5722ad634731a6d5868f94dfd702f0e12e99ae1c4a3a6c4d275"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "RefreshAppToken",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				}
			],
			"source": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}",
			"fields": [
				{
					"responseName": "refreshAppToken",
					"fieldName": "refreshAppToken",
					"type": "AppProfile!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppFull"
			],
			"sourceWithFragments": "mutation RefreshAppToken($appId: ID!) {\n  refreshAppToken(appId: $appId) {\n    __typename\n    ...AppFull\n  }\n}\nfragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"operationId": "e65cb17b382c289dda44a069bf5ade942a5e118656a6b7ad0b4ac7da0079ad57"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "AddAppToChat",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "appId",
					"type": "ID!"
				},
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}",
			"fields": [
				{
					"responseName": "addAppToChat",
					"fieldName": "addAppToChat",
					"type": "AppChat!",
					"args": [
						{
							"name": "appId",
							"value": {
								"kind": "Variable",
								"variableName": "appId"
							},
							"type": "ID!"
						},
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"AppChat"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"AppChat"
			],
			"sourceWithFragments": "mutation AddAppToChat($appId: ID!, $chatId: ID!) {\n  addAppToChat(appId: $appId, chatId: $chatId) {\n    __typename\n    ...AppChat\n  }\n}\nfragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"operationId": "6eaa02124f5d5f5122b497b98351b2f30cf23ebd7ce4b906c147c4a883a2db01"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UserStorage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "keys",
					"type": "[String!]!"
				}
			],
			"source": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorage",
					"fieldName": "userStorage",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "keys",
							"value": {
								"kind": "Variable",
								"variableName": "keys"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserStorage($namespace: String!, $keys: [String!]!) {\n  userStorage(namespace: $namespace, keys: $keys) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "f2955d05aeba62849ed54aa06e079023314a4e56b24bb40e466e4218c6e20e54"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/App.ts",
			"operationName": "UserStorageSet",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "namespace",
					"type": "String!"
				},
				{
					"name": "data",
					"type": "[AppStorageValueInput!]!"
				}
			],
			"source": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"fields": [
				{
					"responseName": "userStorageSet",
					"fieldName": "userStorageSet",
					"type": "[AppStorageValue!]!",
					"args": [
						{
							"name": "namespace",
							"value": {
								"kind": "Variable",
								"variableName": "namespace"
							},
							"type": "String!"
						},
						{
							"name": "data",
							"value": {
								"kind": "Variable",
								"variableName": "data"
							},
							"type": "[AppStorageValueInput!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "value",
							"fieldName": "value",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UserStorageSet($namespace: String!, $data: [AppStorageValueInput!]!) {\n  userStorageSet(namespace: $namespace, data: $data) {\n    __typename\n    id\n    key\n    value\n  }\n}",
			"operationId": "6151ff3ad440a27aab076bde3d14d4a346e77cb2eaa66ceed11502d4fe3cf096"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeCreateToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "name",
					"type": "String!"
				}
			],
			"source": "mutation SuperBadgeCreateToRoom($roomId: ID!, $userId: ID!, $name: String!) {\n  superBadgeCreateToRoom(roomId: $roomId, userId: $userId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeCreateToRoom",
					"fieldName": "superBadgeCreateToRoom",
					"type": "UserBadge!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "name",
							"value": {
								"kind": "Variable",
								"variableName": "name"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "mutation SuperBadgeCreateToRoom($roomId: ID!, $userId: ID!, $name: String!) {\n  superBadgeCreateToRoom(roomId: $roomId, userId: $userId, name: $name) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "ff85fe4d68deab3033a53cd9c06d871036b28e43169d4f23029cff7168230d0d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeUnsetToRoom",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "badgeId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperBadgeUnsetToRoom($roomId: ID!, $userId: ID!, $badgeId: ID!) {\n  superBadgeUnsetToRoom(roomId: $roomId, userId: $userId, badgeId: $badgeId)\n}",
			"fields": [
				{
					"responseName": "superBadgeUnsetToRoom",
					"fieldName": "superBadgeUnsetToRoom",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "badgeId",
							"value": {
								"kind": "Variable",
								"variableName": "badgeId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperBadgeUnsetToRoom($roomId: ID!, $userId: ID!, $badgeId: ID!) {\n  superBadgeUnsetToRoom(roomId: $roomId, userId: $userId, badgeId: $badgeId)\n}",
			"operationId": "72da32c975a6a7db6cbe884a7c2ddac93c00858c21e622f377764466c51e931d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Badges.ts",
			"operationName": "SuperBadgeInRoom",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query SuperBadgeInRoom($roomId: ID!, $userId: ID!) {\n  superBadgeInRoom(roomId: $roomId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}",
			"fields": [
				{
					"responseName": "superBadgeInRoom",
					"fieldName": "superBadgeInRoom",
					"type": "UserBadge",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query SuperBadgeInRoom($roomId: ID!, $userId: ID!) {\n  superBadgeInRoom(roomId: $roomId, userId: $userId) {\n    __typename\n    ...UserBadge\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "fb59369b82502a7b20d6053d2730d53f253a353b9f3754a33a8a6ffdad2a500c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Dialogs",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      id\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...DaialogListMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "dialogs",
					"fieldName": "dialogs",
					"type": "DialogsConnection!",
					"args": [
						{
							"name": "first",
							"value": 20,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[Dialog!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "cid",
									"fieldName": "cid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fid",
									"fieldName": "fid",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "DialogKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unreadCount",
									"fieldName": "unreadCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isMuted",
									"fieldName": "isMuted",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "haveMention",
									"fieldName": "haveMention",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "topMessage",
									"fieldName": "alphaTopMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DaialogListMessage"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "dialogsState",
					"type": "DialogUpdateState!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "counter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"DaialogListMessage",
				"UserBadge"
			],
			"sourceWithFragments": "query Dialogs($after: String) {\n  dialogs(first: 20, after: $after) {\n    __typename\n    items {\n      __typename\n      id\n      cid\n      fid\n      kind\n      isChannel\n      title\n      photo\n      unreadCount\n      isMuted\n      haveMention\n      topMessage: alphaTopMessage {\n        __typename\n        ...DaialogListMessage\n      }\n    }\n    cursor\n  }\n  state: dialogsState {\n    __typename\n    state\n  }\n  counter: alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}\nfragment DaialogListMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    id\n    name\n    firstName\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "df6d3f4819731b933c2a51343e283c3f1c6905cbbec8e6bf3af5c5d2901d10a0"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "chatUpdates",
					"type": "ChatUpdateContainer!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "ChatUpdateSingle",
							"possibleTypes": [
								"ChatUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "ChatUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "ChatUpdateBatch",
							"possibleTypes": [
								"ChatUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[ChatUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"ChatUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ChatUpdateFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "subscription ChatWatch($chatId: ID!, $state: String) {\n  event: chatUpdates(chatId: $chatId, fromState: $state) {\n    __typename\n    ... on ChatUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n    ... on ChatUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...ChatUpdateFragment\n      }\n    }\n  }\n}\nfragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"operationId": "7695baf19399c033e67baf5b06eb41e54828d1193aaa7d035a0b89e84c2e44b9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "DialogsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "dialogsUpdates",
					"type": "DialogUpdateContainer!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "DialogUpdateSingle",
							"possibleTypes": [
								"DialogUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "DialogUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "DialogUpdateBatch",
							"possibleTypes": [
								"DialogUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[DialogUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"DialogUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"DialogUpdateFragment",
				"TinyMessage",
				"UserTiny",
				"OrganizationShort",
				"UserBadge"
			],
			"sourceWithFragments": "subscription DialogsWatch($state: String) {\n  event: dialogsUpdates(fromState: $state) {\n    __typename\n    ... on DialogUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n    ... on DialogUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...DialogUpdateFragment\n      }\n    }\n  }\n}\nfragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n    silent {\n      __typename\n      mobile\n      desktop\n    }\n    showNotification {\n      __typename\n      mobile\n      desktop\n    }\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogPeerUpdated {\n    cid\n    peer {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n        photo\n      }\n    }\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n}\nfragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    isMentioned\n    commentsCount\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "46480fbbf7f593bead41fbe497b82fce13f312bf0f38896caee9c29a837de75a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Room",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "query Room($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "9cd5029714c0970ced76cca3a47e575791eb3da627c8c46011b748ef32c98423"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomPico",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomPico($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomNano\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomNano"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomNano"
			],
			"sourceWithFragments": "query RoomPico($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomNano\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"operationId": "925db034197c862f33e4821bc90734d9f5c26839a6bf050d67281723f5689ff5"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomChat",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomChat($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n        photo\n        shortname\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n        isBot\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      membership\n      isChannel\n      role\n      canEdit\n      photo\n      membersCount\n      matchmaking {\n        __typename\n        ...MatchmakingRoomFragment\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "shortname",
											"fieldName": "shortname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "primaryOrganization",
											"fieldName": "primaryOrganization",
											"type": "Organization",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "isBot",
											"fieldName": "isBot",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "pinnedMessage",
									"fieldName": "pinnedMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FullMessage"
									],
									"inlineFragments": []
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "canEdit",
									"fieldName": "canEdit",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "matchmaking",
									"fieldName": "matchmaking",
									"type": "MatchmakingRoom",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"MatchmakingRoomFragment"
									],
									"inlineFragments": []
								},
								{
									"responseName": "pinnedMessage",
									"fieldName": "pinnedMessage",
									"type": "ModernMessage",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FullMessage"
									],
									"inlineFragments": []
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "query RoomChat($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on PrivateRoom {\n      id\n      user {\n        __typename\n        id\n        name\n        photo\n        shortname\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n        isBot\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      membership\n      isChannel\n      role\n      canEdit\n      photo\n      membersCount\n      matchmaking {\n        __typename\n        ...MatchmakingRoomFragment\n      }\n      pinnedMessage {\n        __typename\n        ...FullMessage\n      }\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "9d748298623db27c56c86e816a7a26980ebd93723856ba77c7cc2fbe2468e71b"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomWithoutMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomWithoutMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFullWithoutMembers\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFullWithoutMembers"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFullWithoutMembers",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment",
				"FullMessage",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomWithoutMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomFullWithoutMembers\n  }\n}\nfragment RoomFullWithoutMembers on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    settings {\n      __typename\n      id\n      mute\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "72472a6c7daea28f32e90ddc45a8f2c4d64fd837967ea3977a9a8a399c289245"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomFeaturedMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomFeaturedMembers($roomId: ID!) {\n  roomFeaturedMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "roomFeaturedMembers",
					"fieldName": "roomFeaturedMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badge",
							"fieldName": "badge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort",
				"UserBadge"
			],
			"sourceWithFragments": "query RoomFeaturedMembers($roomId: ID!) {\n  roomFeaturedMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "db80ad26edb26a5b4650ba90aa858a5fc96f72d2e638ff949e354fb0ce1871a6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomTiny",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query RoomTiny($id: ID!) {\n  room(id: $id) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "d32a4e4b17ddb9c932c7a6915ef4a4958081d86466264291cf61c5a035df0ba9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSuper",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"fields": [
				{
					"responseName": "roomSuper",
					"fieldName": "roomSuper",
					"type": "RoomSuper",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSuper($id: ID!) {\n  roomSuper(id: $id) {\n    __typename\n    id\n    featured\n    listed\n  }\n}",
			"operationId": "ea0da06309ee39889fa82d9c702244cb768bff10fee5c16ea37ef267985a5dcb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "PinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage: gammaPinMessage(chatId: $chatId, messageId: $messageId) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "pinMessage",
					"fieldName": "gammaPinMessage",
					"type": "Room!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "mutation PinMessage($chatId: ID!, $messageId: ID!) {\n  pinMessage: gammaPinMessage(chatId: $chatId, messageId: $messageId) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "42647747ca72bf47a1884880bea6fc232e9984d2db80c60285f4e623345e4651"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "UnpinMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage: gammaUnpinMessage(chatId: $chatId) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "unpinMessage",
					"fieldName": "gammaUnpinMessage",
					"type": "Room!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "mutation UnpinMessage($chatId: ID!) {\n  unpinMessage: gammaUnpinMessage(chatId: $chatId) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "67caeef3061d488dd1f2d8f10494c762013326123797f6da7af54832b7a5548c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageSetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation MessageSetReaction($messageId: ID!, $reaction: MessageReactionType!) {\n  messageReactionAdd(messageId: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "messageReactionAdd",
					"fieldName": "messageReactionAdd",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageSetReaction($messageId: ID!, $reaction: MessageReactionType!) {\n  messageReactionAdd(messageId: $messageId, reaction: $reaction)\n}",
			"operationId": "99602d5d857b6de2a2fa7f1f99dd4df7594cbf6715911bdebeb82065282241de"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessageUnsetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation MessageUnsetReaction($messageId: ID!, $reaction: MessageReactionType!) {\n  messageReactionRemove(messageId: $messageId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "messageReactionRemove",
					"fieldName": "messageReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MessageUnsetReaction($messageId: ID!, $reaction: MessageReactionType!) {\n  messageReactionRemove(messageId: $messageId, reaction: $reaction)\n}",
			"operationId": "158605d47e2c1b77606708e1b2f8f516def645e525796afbb018416f831bb2f1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "GlobalCounter",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"fields": [
				{
					"responseName": "alphaNotificationCounter",
					"fieldName": "alphaNotificationCounter",
					"type": "NotificationCounter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unreadCount",
							"fieldName": "unreadCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query GlobalCounter {\n  alphaNotificationCounter {\n    __typename\n    id\n    unreadCount\n  }\n}",
			"operationId": "ba2ff26fcac56656eedb1e52d5625334b42a9f5142da25fc00ec6c10f030d5b3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessagesBatch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query MessagesBatch($chatId: ID!, $first: Int!, $before: ID, $after: ID) {\n  gammaMessages(chatId: $chatId, first: $first, before: $before, after: $after) {\n    __typename\n    messages {\n      __typename\n      ...FullMessage\n    }\n    haveMoreForward\n    haveMoreBackward\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "gammaMessages",
					"fieldName": "gammaMessages",
					"type": "GammaMessagesBatch",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "messages",
							"fieldName": "messages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMoreForward",
							"fieldName": "haveMoreForward",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMoreBackward",
							"fieldName": "haveMoreBackward",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query MessagesBatch($chatId: ID!, $first: Int!, $before: ID, $after: ID) {\n  gammaMessages(chatId: $chatId, first: $first, before: $before, after: $after) {\n    __typename\n    messages {\n      __typename\n      ...FullMessage\n    }\n    haveMoreForward\n    haveMoreBackward\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "cbcae776354152eec93c8bc7681f040ad04d42d5c37aea4d8e74f2cebf825873"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatInit",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query ChatInit($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "messages",
					"fieldName": "messages",
					"type": "[ModernMessage!]!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "lastReadedMessage",
					"fieldName": "lastReadedMessage",
					"type": "ModernMessage",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "query ChatInit($chatId: ID!, $before: ID, $first: Int!) {\n  messages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    ...FullMessage\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"operationId": "1be6df51b9d8992e8033cd026d11c73a68e3bad9d9e36f55579ef545fc4822e9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatInitFromUnread",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "before",
					"type": "ID"
				},
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query ChatInitFromUnread($chatId: ID!, $before: ID, $first: Int!) {\n  gammaMessages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    messages {\n      __typename\n      ...FullMessage\n    }\n    haveMoreForward\n    haveMoreBackward\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "gammaMessages",
					"fieldName": "gammaMessages",
					"type": "GammaMessagesBatch",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "messages",
							"fieldName": "messages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMoreForward",
							"fieldName": "haveMoreForward",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMoreBackward",
							"fieldName": "haveMoreBackward",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "state",
					"fieldName": "conversationState",
					"type": "ConversationUpdateState!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "lastReadedMessage",
					"fieldName": "lastReadedMessage",
					"type": "ModernMessage",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"RoomShort"
			],
			"sourceWithFragments": "query ChatInitFromUnread($chatId: ID!, $before: ID, $first: Int!) {\n  gammaMessages(chatId: $chatId, first: $first, before: $before) {\n    __typename\n    messages {\n      __typename\n      ...FullMessage\n    }\n    haveMoreForward\n    haveMoreBackward\n  }\n  state: conversationState(id: $chatId) {\n    __typename\n    state\n  }\n  room(id: $chatId) {\n    __typename\n    ...RoomShort\n  }\n  lastReadedMessage(chatId: $chatId) {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"operationId": "a7c62c3f14970d80adf0cacd3592536bccaff7e9e79d37317a3a7289f8089e59"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SendMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation SendMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  sentMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"fields": [
				{
					"responseName": "sentMessage",
					"fieldName": "sendMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendMessage($chatId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!], $repeatKey: String) {\n  sentMessage: sendMessage(chatId: $chatId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans, repeatKey: $repeatKey)\n}",
			"operationId": "17897dd83cbaed23e3d1c9177f48590e9807ff68a149500fb3a5de2993330297"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "mid",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"fields": [
				{
					"responseName": "roomRead",
					"fieldName": "roomRead",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "mid"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRead($id: ID!, $mid: ID!) {\n  roomRead(id: $id, mid: $mid)\n}",
			"operationId": "87959d307e4b52880fbc752c7fc67974473b6733badac97a9f1634fef3ffad97"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "kind",
					"type": "SharedRoomKind!"
				},
				{
					"name": "members",
					"type": "[ID!]!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "organizationId",
					"type": "ID"
				},
				{
					"name": "channel",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "betaRoomCreate",
					"type": "SharedRoom!",
					"args": [
						{
							"name": "kind",
							"value": {
								"kind": "Variable",
								"variableName": "kind"
							},
							"type": "SharedRoomKind!"
						},
						{
							"name": "members",
							"value": {
								"kind": "Variable",
								"variableName": "members"
							},
							"type": "[ID!]!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String"
						},
						{
							"name": "description",
							"value": {
								"kind": "Variable",
								"variableName": "description"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						},
						{
							"name": "channel",
							"value": {
								"kind": "Variable",
								"variableName": "channel"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"description": "Room mgmt",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomCreate($kind: SharedRoomKind!, $members: [ID!]!, $message: String, $title: String, $description: String, $photoRef: ImageRefInput, $organizationId: ID, $channel: Boolean!) {\n  room: betaRoomCreate(kind: $kind, members: $members, message: $message, title: $title, description: $description, photoRef: $photoRef, organizationId: $organizationId, channel: $channel) {\n    __typename\n    id\n  }\n}",
			"operationId": "6599eb079eec56667dc804822d8e3b1dabed6badf0889ab8cba47ed7cb556596"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "SetTyping",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "conversationId",
					"type": "ID!"
				}
			],
			"source": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"fields": [
				{
					"responseName": "typingSend",
					"fieldName": "typingSend",
					"type": "String!",
					"args": [
						{
							"name": "conversationId",
							"value": {
								"kind": "Variable",
								"variableName": "conversationId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": "TEXT",
							"type": "TypingType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetTyping($conversationId: ID!) {\n  typingSend(conversationId: $conversationId, type: TEXT)\n}",
			"operationId": "3b376c9bf15b7e2e33ae0919cd60784a7f08b4b13818e26b2c9787fc4241fe2c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAddMembers",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "invites",
					"type": "[RoomInviteInput!]!"
				}
			],
			"source": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  alphaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "alphaRoomInvite",
					"fieldName": "alphaRoomInvite",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "invites",
							"value": {
								"kind": "Variable",
								"variableName": "invites"
							},
							"type": "[RoomInviteInput!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badge",
							"fieldName": "badge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort",
				"UserBadge"
			],
			"sourceWithFragments": "mutation RoomAddMembers($roomId: ID!, $invites: [RoomInviteInput!]!) {\n  alphaRoomInvite(roomId: $roomId, invites: $invites) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "cdffa4d205eda5a31c2214174d758f08811206ad799a57ac0843d794e59670d9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomKick",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomKick",
					"fieldName": "betaRoomKick",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation RoomKick($roomId: ID!, $userId: ID!) {\n  betaRoomKick(roomId: $roomId, userId: $userId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "c11026d45adc6581274e869c07dce4d5b4a297b9e395b56fb86a5d356654661c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomChangeRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "RoomMemberRole!"
				}
			],
			"source": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomChangeRole",
					"fieldName": "betaRoomChangeRole",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "RoomMemberRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation RoomChangeRole($roomId: ID!, $userId: ID!, $newRole: RoomMemberRole!) {\n  betaRoomChangeRole(roomId: $roomId, userId: $userId, newRole: $newRole) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "bd00379ef17ade4d684b93a8e6c0ed76f3ac8d7f6fbd4dc7e43be7034145a98e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomLeave",
					"fieldName": "betaRoomLeave",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation RoomLeave($roomId: ID!) {\n  betaRoomLeave(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "a418b86d256c04a409792065068d1106f355545554c13ab1fadbf8213f3cbad3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				}
			],
			"source": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          membership\n          membersCount\n          organization {\n            __typename\n            id\n            photo\n            name\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "betaRoomSearch",
					"type": "RoomConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[RoomConnectionEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "kind",
											"fieldName": "kind",
											"type": "SharedRoomKind!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isChannel",
											"fieldName": "isChannel",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membership",
											"fieldName": "membership",
											"type": "SharedRoomMembershipStatus!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "organization",
											"fieldName": "organization",
											"type": "Organization",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "photo",
													"fieldName": "photo",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomSearch($query: String, $sort: String, $page: Int) {\n  items: betaRoomSearch(query: $query, sort: $sort, page: $page, first: 25) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          membership\n          membersCount\n          organization {\n            __typename\n            id\n            photo\n            name\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"operationId": "fa5c3fdfcfc9c1893b8c7f73610256409b5bab0f15d3cc69390e04d06965d6fb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterFeatured",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "featured",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterFeatured",
					"fieldName": "betaRoomAlterFeatured",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "featured",
							"value": {
								"kind": "Variable",
								"variableName": "featured"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterFeatured($roomId: ID!, $featured: Boolean!) {\n  betaRoomAlterFeatured(roomId: $roomId, featured: $featured) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "e941c6e16566c7de768f67fc3cb788714d3e692586745aa9f68b1c67dd6f86de"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomAlterHidden",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "listed",
					"type": "Boolean!"
				}
			],
			"source": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomAlterListed",
					"fieldName": "betaRoomAlterListed",
					"type": "RoomSuper!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "listed",
							"value": {
								"kind": "Variable",
								"variableName": "listed"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "listed",
							"fieldName": "listed",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featured",
							"fieldName": "featured",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomAlterHidden($roomId: ID!, $listed: Boolean!) {\n  betaRoomAlterListed(roomId: $roomId, listed: $listed) {\n    __typename\n    id\n    listed\n    featured\n  }\n}",
			"operationId": "dac01e5e2d5890238c570a954f8325590e7327247276af35439e24507c325ddb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomMembersShort($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n    }\n  }\n}",
			"operationId": "eb01e93b5df81e7aa52a034c5ea9fa3fab350786fb5005852c0616ff60ac22a6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomMembers($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "ddfd134540441fb5b52ffc133b9726324328a4409c9dc2743c8955788166b773"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersTiny",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomMembersTiny($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n      name\n      shortname\n      photo\n      primaryOrganization {\n        __typename\n        id\n        name\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "shortname",
									"fieldName": "shortname",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "primaryOrganization",
									"fieldName": "primaryOrganization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomMembersTiny($roomId: ID!) {\n  members: roomMembers(roomId: $roomId) {\n    __typename\n    user {\n      __typename\n      id\n      name\n      shortname\n      photo\n      primaryOrganization {\n        __typename\n        id\n        name\n      }\n    }\n  }\n}",
			"operationId": "5fcbeb31ed1167e40bf3123b027a124e89c9774da225fc4498260105e62ed787"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatMembersSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "cid",
					"type": "ID!"
				},
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query ChatMembersSearch($cid: ID!, $query: String, $first: Int!, $after: String) {\n  members: chatMembersSearch(cid: $cid, query: $query, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      user: node {\n        __typename\n        id\n        name\n        shortname\n        photo\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "chatMembersSearch",
					"type": "UserConnection!",
					"args": [
						{
							"name": "cid",
							"value": {
								"kind": "Variable",
								"variableName": "cid"
							},
							"type": "ID!"
						},
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[UserEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "node",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "shortname",
											"fieldName": "shortname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "primaryOrganization",
											"fieldName": "primaryOrganization",
											"type": "Organization",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ChatMembersSearch($cid: ID!, $query: String, $first: Int!, $after: String) {\n  members: chatMembersSearch(cid: $cid, query: $query, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      user: node {\n        __typename\n        id\n        name\n        shortname\n        photo\n        primaryOrganization {\n          __typename\n          id\n          name\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n    }\n  }\n}",
			"operationId": "3337e7345d4721cb502188aacf160b7ccf3a0be41700e0d5a686553c393c349d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomOrganizationAdminMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query RoomOrganizationAdminMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on SharedRoom {\n      id\n      organization {\n        __typename\n        id\n        adminMembers: alphaOrganizationAdminMembers {\n          __typename\n          role\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "room",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "adminMembers",
											"fieldName": "alphaOrganizationAdminMembers",
											"type": "[OrganizationJoinedMember!]!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "role",
													"fieldName": "role",
													"type": "OrganizationMemberRole!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "user",
													"fieldName": "user",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserShort"
													],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query RoomOrganizationAdminMembers($id: ID!) {\n  room(id: $id) {\n    __typename\n    ... on SharedRoom {\n      id\n      organization {\n        __typename\n        id\n        adminMembers: alphaOrganizationAdminMembers {\n          __typename\n          role\n          user {\n            __typename\n            ...UserShort\n          }\n        }\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "f8268a3210daf197ff90bcfb76e4aebc9a155ff05c5e86f2572bfd172a8cf824"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomMembersPaginated",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query RoomMembersPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "members",
					"fieldName": "roomMembers",
					"type": "[RoomMember!]!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canKick",
							"fieldName": "canKick",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "badge",
							"fieldName": "badge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort",
				"UserBadge"
			],
			"sourceWithFragments": "query RoomMembersPaginated($roomId: ID!, $first: Int, $after: ID) {\n  members: roomMembers(roomId: $roomId, first: $first, after: $after) {\n    __typename\n    user {\n      __typename\n      ...UserShort\n    }\n    role\n    membership\n    canKick\n    badge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "6040e3f5ae678ee1377b7fd2553c7f372e7fa0633611adadbc9edcafc2319022"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomSettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "settings",
					"type": "RoomUserNotificaionSettingsInput!"
				},
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdateUserNotificationSettings",
					"fieldName": "betaRoomUpdateUserNotificationSettings",
					"type": "RoomUserNotificaionSettings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "settings"
							},
							"type": "RoomUserNotificaionSettingsInput!"
						},
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"description": "User settings",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomSettingsUpdate($settings: RoomUserNotificaionSettingsInput!, $roomId: ID!) {\n  betaRoomUpdateUserNotificationSettings(settings: $settings, roomId: $roomId) {\n    __typename\n    id\n    mute\n  }\n}",
			"operationId": "06c5327630b4f68b55f8ff4dc065d83b2cbf611eb2b3c34a16f38c060d629dcd"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomJoin",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation RoomJoin($roomId: ID!) {\n  join: betaRoomJoin(roomId: $roomId) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "7c3d86b1eaf9c204126a55bff2a5fa1e9d029f88bf79e75d7ffcdd083b710d09"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomsJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomsIds",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomsJoin($roomsIds: [ID!]!) {\n  join: betaRoomsJoin(roomsIds: $roomsIds) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomsJoin",
					"type": "[Room!]!",
					"args": [
						{
							"name": "roomsIds",
							"value": {
								"kind": "Variable",
								"variableName": "roomsIds"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomsJoin($roomsIds: [ID!]!) {\n  join: betaRoomsJoin(roomsIds: $roomsIds) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "b398b8dac21dad071f91c967882892be8a543de21cb7e8792f474f96fb208a04"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomsInviteUser",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "roomIds",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomsInviteUser($userId: ID!, $roomIds: [ID!]!) {\n  rooms: betaRoomsInviteUser(userId: $userId, roomIds: $roomIds) {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "rooms",
					"fieldName": "betaRoomsInviteUser",
					"type": "[Room!]!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "roomIds",
							"value": {
								"kind": "Variable",
								"variableName": "roomIds"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"description": "Admin tools",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "mutation RoomsInviteUser($userId: ID!, $roomIds: [ID!]!) {\n  rooms: betaRoomsInviteUser(userId: $userId, roomIds: $roomIds) {\n    __typename\n    ...RoomShort\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "f28377888489a47fc6b491168c48f5d010c83087f4289caaccd73155678ad933"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomJoinInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}",
			"fields": [
				{
					"responseName": "join",
					"fieldName": "betaRoomInviteLinkJoin",
					"type": "Room!",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomFull",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"OrganizationMedium",
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation RoomJoinInviteLink($invite: String!) {\n  join: betaRoomInviteLinkJoin(invite: $invite) {\n    __typename\n    ...RoomFull\n  }\n}\nfragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "f932694bea17897ca4ada9b0253ce50624467eec150c5689d300ce607db15c91"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomRenewInviteLink",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLinkRenew",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomRenewInviteLink($roomId: ID!) {\n  link: betaRoomInviteLinkRenew(roomId: $roomId)\n}",
			"operationId": "87171fbd97b50c4b54a836173e5debda1343a8986dad09ace36e909d30e55acb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteLink",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				}
			],
			"source": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"fields": [
				{
					"responseName": "link",
					"fieldName": "betaRoomInviteLink",
					"type": "String!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query RoomInviteLink($roomId: ID!) {\n  link: betaRoomInviteLink(roomId: $roomId)\n}",
			"operationId": "421f83a0ebf1bddcc0d9cb496cd80de3381bd8f91b8e0068b666901961599072"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomInviteInfo",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "invite",
					"type": "String!"
				}
			],
			"source": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n        matchmaking {\n          __typename\n          enabled\n        }\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "betaRoomInviteInfo",
					"type": "RoomInvite",
					"args": [
						{
							"name": "invite",
							"value": {
								"kind": "Variable",
								"variableName": "invite"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "room",
							"fieldName": "room",
							"type": "SharedRoom!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isChannel",
									"fieldName": "isChannel",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"OrganizationShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "matchmaking",
									"fieldName": "matchmaking",
									"type": "MatchmakingRoom",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "enabled",
											"fieldName": "enabled",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "invitedByUser",
							"fieldName": "invitedByUser",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort"
			],
			"sourceWithFragments": "query RoomInviteInfo($invite: String!) {\n  invite: betaRoomInviteInfo(invite: $invite) {\n    __typename\n    id\n    room {\n      __typename\n      ... on SharedRoom {\n        id\n        kind\n        isChannel\n        title\n        photo\n        socialImage\n        description\n        organization {\n          __typename\n          ...OrganizationShort\n        }\n        membership\n        membersCount\n        matchmaking {\n          __typename\n          enabled\n        }\n      }\n    }\n    invitedByUser {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "32da54f8b6222cf9fa930f71582459629767db221d05a1bc1e4ac8af580ac45d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ResolvedInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				}
			],
			"source": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      id\n      orgId\n      title\n      creator {\n        __typename\n        ...UserShort\n      }\n      organization {\n        __typename\n        id\n        photo\n        name\n        membersCount\n        about\n        isCommunity: alphaIsCommunity\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      id\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n          matchmaking {\n            __typename\n            enabled\n          }\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "invite",
					"fieldName": "alphaResolveInvite",
					"type": "ResolveInviteEntry",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "InviteInfo",
							"possibleTypes": [
								"InviteInfo"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "orgId",
									"fieldName": "orgId",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "creator",
									"fieldName": "creator",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "about",
											"fieldName": "about",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isCommunity",
											"fieldName": "alphaIsCommunity",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "AppInvite",
							"possibleTypes": [
								"AppInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "inviter",
									"fieldName": "inviter",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "RoomInvite",
							"possibleTypes": [
								"RoomInvite"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "invitedByUser",
									"fieldName": "invitedByUser",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "SharedRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "kind",
											"fieldName": "kind",
											"type": "SharedRoomKind!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "isChannel",
											"fieldName": "isChannel",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "socialImage",
											"fieldName": "socialImage",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "description",
											"fieldName": "description",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membership",
											"fieldName": "membership",
											"type": "SharedRoomMembershipStatus!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "membersCount",
											"fieldName": "membersCount",
											"type": "Int",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "matchmaking",
											"fieldName": "matchmaking",
											"type": "MatchmakingRoom",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "enabled",
													"fieldName": "enabled",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ResolvedInvite($key: String!) {\n  invite: alphaResolveInvite(key: $key) {\n    __typename\n    ... on InviteInfo {\n      id\n      orgId\n      title\n      creator {\n        __typename\n        ...UserShort\n      }\n      organization {\n        __typename\n        id\n        photo\n        name\n        membersCount\n        about\n        isCommunity: alphaIsCommunity\n      }\n    }\n    ... on AppInvite {\n      inviter {\n        __typename\n        ...UserShort\n      }\n    }\n    ... on RoomInvite {\n      id\n      invitedByUser {\n        __typename\n        ...UserShort\n      }\n      room {\n        __typename\n        ... on SharedRoom {\n          id\n          kind\n          isChannel\n          title\n          photo\n          socialImage\n          description\n          membership\n          membersCount\n          matchmaking {\n            __typename\n            enabled\n          }\n        }\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "32cd549ab37b311f0a1989ce614987afa3a8796d534fc2f3e47ae40429ae5dbd"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "RoomUpdateInput!"
				}
			],
			"source": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n      socialImage\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaRoomUpdate",
					"fieldName": "betaRoomUpdate",
					"type": "Room!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "RoomUpdateInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "description",
									"fieldName": "description",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "socialImage",
									"fieldName": "socialImage",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomUpdate($roomId: ID!, $input: RoomUpdateInput!) {\n  betaRoomUpdate(roomId: $roomId, input: $input) {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n      title\n      photo\n      description\n      socialImage\n    }\n  }\n}",
			"operationId": "f0b5bbbc0bb767fd8f436a48c752745289db117a3a2b2065f06f8301c6f28d28"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessage($messageId: ID!) {\n  betaMessageDelete(mid: $messageId)\n}",
			"operationId": "e062da3347733ffc233e02064326d9cd578b945f9d49d92b81a1ae0e92c5c0e8"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteMessages",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "mids",
					"type": "[ID!]!"
				}
			],
			"source": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"fields": [
				{
					"responseName": "betaMessageDelete",
					"fieldName": "betaMessageDelete",
					"type": "Boolean!",
					"args": [
						{
							"name": "mids",
							"value": {
								"kind": "Variable",
								"variableName": "mids"
							},
							"type": "[ID!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteMessages($mids: [ID!]!) {\n  betaMessageDelete(mids: $mids)\n}",
			"operationId": "6227f6f997207c6854e98755bf4575fa5965643092a28544e0905b14f0ac0345"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "RoomDeleteUrlAugmentation",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"fields": [
				{
					"responseName": "betaMessageDeleteAugmentation",
					"fieldName": "betaMessageDeleteAugmentation",
					"type": "Boolean!",
					"args": [
						{
							"name": "mid",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation RoomDeleteUrlAugmentation($messageId: ID!) {\n  betaMessageDeleteAugmentation(mid: $messageId)\n}",
			"operationId": "67fda9fa3d5efa14694df68eb86319ca4d8a8fd0440603b639287a25ccc974cb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "EditMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation EditMessage($messageId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editMessage(messageId: $messageId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"fields": [
				{
					"responseName": "editMessage",
					"fieldName": "editMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditMessage($messageId: ID!, $message: String, $replyMessages: [ID!], $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editMessage(messageId: $messageId, message: $message, replyMessages: $replyMessages, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"operationId": "94f5de73e975267e6ebc5c7a11451658a897e784627c758aec1e3259c0110b8a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MarkSequenceRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "seq",
					"type": "Int!"
				}
			],
			"source": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"fields": [
				{
					"responseName": "alphaGlobalRead",
					"fieldName": "alphaGlobalRead",
					"type": "String!",
					"args": [
						{
							"name": "toSeq",
							"value": {
								"kind": "Variable",
								"variableName": "seq"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MarkSequenceRead($seq: Int!) {\n  alphaGlobalRead(toSeq: $seq)\n}",
			"operationId": "3ac00b53b7147bca4a579188417adf9b51e7ad32f013e5e699044474d861822e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "TypingsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [],
			"source": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation: chat {\n      __typename\n      ... on PrivateRoom {\n        id\n      }\n      ... on SharedRoom {\n        id\n      }\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"fields": [
				{
					"responseName": "typings",
					"fieldName": "typings",
					"type": "TypingEvent!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "conversation",
							"fieldName": "chat",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "PrivateRoom",
									"possibleTypes": [
										"PrivateRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "SharedRoom",
									"possibleTypes": [
										"SharedRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cancel",
							"fieldName": "cancel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription TypingsWatch {\n  typings {\n    __typename\n    conversation: chat {\n      __typename\n      ... on PrivateRoom {\n        id\n      }\n      ... on SharedRoom {\n        id\n      }\n    }\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    cancel\n  }\n}",
			"operationId": "d5bbf31cc85f514ff67ddf661a5a101ec7346159d5d380ff18fb40213be20653"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "ChatOnlinesCountWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				}
			],
			"source": "subscription ChatOnlinesCountWatch($chatId: ID!) {\n  chatOnlinesCount(chatId: $chatId) {\n    __typename\n    onlineMembers\n  }\n}",
			"fields": [
				{
					"responseName": "chatOnlinesCount",
					"fieldName": "chatOnlinesCount",
					"type": "ChatOnlineEvent!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "onlineMembers",
							"fieldName": "onlineMembers",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription ChatOnlinesCountWatch($chatId: ID!) {\n  chatOnlinesCount(chatId: $chatId) {\n    __typename\n    onlineMembers\n  }\n}",
			"operationId": "cd54e19105faa346b1255242cd80841d3008a1e92818d3df2e53761a25d49a5d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "UpdateWelcomeMessage",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "roomId",
					"type": "ID!"
				},
				{
					"name": "welcomeMessageIsOn",
					"type": "Boolean!"
				},
				{
					"name": "welcomeMessageSender",
					"type": "ID"
				},
				{
					"name": "welcomeMessageText",
					"type": "String"
				}
			],
			"source": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"fields": [
				{
					"responseName": "updateWelcomeMessage",
					"fieldName": "updateWelcomeMessage",
					"type": "Boolean!",
					"args": [
						{
							"name": "roomId",
							"value": {
								"kind": "Variable",
								"variableName": "roomId"
							},
							"type": "ID!"
						},
						{
							"name": "welcomeMessageIsOn",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageIsOn"
							},
							"type": "Boolean!"
						},
						{
							"name": "welcomeMessageSender",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageSender"
							},
							"type": "ID"
						},
						{
							"name": "welcomeMessageText",
							"value": {
								"kind": "Variable",
								"variableName": "welcomeMessageText"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UpdateWelcomeMessage($roomId: ID!, $welcomeMessageIsOn: Boolean!, $welcomeMessageSender: ID, $welcomeMessageText: String) {\n  updateWelcomeMessage(roomId: $roomId, welcomeMessageIsOn: $welcomeMessageIsOn, welcomeMessageSender: $welcomeMessageSender, welcomeMessageText: $welcomeMessageText)\n}",
			"operationId": "93b2980a544ac0c75deee548ca088a0110f90181e863ac867a67c8078c132aee"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "Message",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "messageId",
					"type": "ID!"
				}
			],
			"source": "query Message($messageId: ID!) {\n  message(messageId: $messageId) {\n    __typename\n    ...FullMessage\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "ModernMessage",
					"args": [
						{
							"name": "messageId",
							"value": {
								"kind": "Variable",
								"variableName": "messageId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query Message($messageId: ID!) {\n  message(messageId: $messageId) {\n    __typename\n    ...FullMessage\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "f6dc6c1cfdd03a1e0956ea5b00ad43e8c040863f042beec97b899992c72f678a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"operationName": "MessagesSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query MessagesSearch($query: String!, $sort: String, $first: Int!, $after: String) {\n  messagesSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n            user {\n              __typename\n              id\n              name\n              photo\n            }\n          }\n          ... on SharedRoom {\n            id\n            kind\n            title\n            membership\n            isChannel\n            role\n            canEdit\n            photo\n          }\n        }\n        message {\n          __typename\n          id\n          date\n          sender {\n            __typename\n            id\n            name\n            firstName\n            photo\n          }\n          senderBadge {\n            __typename\n            ...UserBadge\n          }\n          message\n          fallback\n          ... on GeneralMessage {\n            id\n            attachments {\n              __typename\n              id\n              fallback\n              ... on MessageAttachmentFile {\n                id\n                fileId\n                fileMetadata {\n                  __typename\n                  isImage\n                  imageFormat\n                }\n              }\n            }\n            quotedMessages {\n              __typename\n              id\n            }\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "messagesSearch",
					"fieldName": "messagesSearch",
					"type": "MessageConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[MessageEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "MessageWithChat!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "user",
															"fieldName": "user",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "photo",
																	"fieldName": "photo",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "kind",
															"fieldName": "kind",
															"type": "SharedRoomKind!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "membership",
															"fieldName": "membership",
															"type": "SharedRoomMembershipStatus!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isChannel",
															"fieldName": "isChannel",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "role",
															"fieldName": "role",
															"type": "RoomMemberRole!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "canEdit",
															"fieldName": "canEdit",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "photo",
															"fieldName": "photo",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "message",
											"fieldName": "message",
											"type": "ModernMessage!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"description": "State",
													"isDeprecated": false
												},
												{
													"responseName": "date",
													"fieldName": "date",
													"type": "Date!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "sender",
													"fieldName": "sender",
													"type": "User!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "firstName",
															"fieldName": "firstName",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "photo",
															"fieldName": "photo",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												},
												{
													"responseName": "senderBadge",
													"fieldName": "senderBadge",
													"type": "UserBadge",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														}
													],
													"fragmentSpreads": [
														"UserBadge"
													],
													"inlineFragments": []
												},
												{
													"responseName": "message",
													"fieldName": "message",
													"type": "String",
													"isConditional": false,
													"description": "Content",
													"isDeprecated": false
												},
												{
													"responseName": "fallback",
													"fieldName": "fallback",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "GeneralMessage",
													"possibleTypes": [
														"GeneralMessage"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"description": "State",
															"isDeprecated": false
														},
														{
															"responseName": "date",
															"fieldName": "date",
															"type": "Date!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "sender",
															"fieldName": "sender",
															"type": "User!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "name",
																	"fieldName": "name",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "firstName",
																	"fieldName": "firstName",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "photo",
																	"fieldName": "photo",
																	"type": "String",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "senderBadge",
															"fieldName": "senderBadge",
															"type": "UserBadge",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"UserBadge"
															],
															"inlineFragments": []
														},
														{
															"responseName": "message",
															"fieldName": "message",
															"type": "String",
															"isConditional": false,
															"description": "Content",
															"isDeprecated": false
														},
														{
															"responseName": "fallback",
															"fieldName": "fallback",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "attachments",
															"fieldName": "attachments",
															"type": "[ModernMessageAttachment!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "fallback",
																	"fieldName": "fallback",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": [
																{
																	"typeCondition": "MessageAttachmentFile",
																	"possibleTypes": [
																		"MessageAttachmentFile"
																	],
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fallback",
																			"fieldName": "fallback",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fileId",
																			"fieldName": "fileId",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "fileMetadata",
																			"fieldName": "fileMetadata",
																			"type": "FileMetadata!",
																			"isConditional": false,
																			"isDeprecated": false,
																			"fields": [
																				{
																					"responseName": "__typename",
																					"fieldName": "__typename",
																					"type": "String!",
																					"isConditional": false
																				},
																				{
																					"responseName": "isImage",
																					"fieldName": "isImage",
																					"type": "Boolean!",
																					"isConditional": false,
																					"isDeprecated": false
																				},
																				{
																					"responseName": "imageFormat",
																					"fieldName": "imageFormat",
																					"type": "String",
																					"isConditional": false,
																					"isDeprecated": false
																				}
																			],
																			"fragmentSpreads": [],
																			"inlineFragments": []
																		}
																	],
																	"fragmentSpreads": []
																}
															]
														},
														{
															"responseName": "quotedMessages",
															"fieldName": "quotedMessages",
															"type": "[ModernMessage!]!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"description": "State",
																	"isDeprecated": false
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserBadge"
			],
			"sourceWithFragments": "query MessagesSearch($query: String!, $sort: String, $first: Int!, $after: String) {\n  messagesSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n            user {\n              __typename\n              id\n              name\n              photo\n            }\n          }\n          ... on SharedRoom {\n            id\n            kind\n            title\n            membership\n            isChannel\n            role\n            canEdit\n            photo\n          }\n        }\n        message {\n          __typename\n          id\n          date\n          sender {\n            __typename\n            id\n            name\n            firstName\n            photo\n          }\n          senderBadge {\n            __typename\n            ...UserBadge\n          }\n          message\n          fallback\n          ... on GeneralMessage {\n            id\n            attachments {\n              __typename\n              id\n              fallback\n              ... on MessageAttachmentFile {\n                id\n                fileId\n                fileMetadata {\n                  __typename\n                  isImage\n                  imageFormat\n                }\n              }\n            }\n            quotedMessages {\n              __typename\n              id\n            }\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"operationId": "10e66377a30c9acc4afcc8297b1054b6fac8387761ec22f65b858ffff49bc17a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "DeleteComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteComment($id: ID!) {\n  deleteComment(id: $id)\n}",
			"fields": [
				{
					"responseName": "deleteComment",
					"fieldName": "deleteComment",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteComment($id: ID!) {\n  deleteComment(id: $id)\n}",
			"operationId": "1c15e6199ac581135afa4868872f463d7c505f01683520266b9f3e62a20d3df0"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "Comments",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "query Comments($peerId: ID!) {\n  comments(peerId: $peerId) {\n    __typename\n    id\n    state {\n      __typename\n      state\n    }\n    count\n    comments {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "comments",
					"fieldName": "comments",
					"type": "CommentsPeer!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "CommentUpdatesState!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "count",
							"fieldName": "count",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "comments",
							"fieldName": "comments",
							"type": "[CommentEntry!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query Comments($peerId: ID!) {\n  comments(peerId: $peerId) {\n    __typename\n    id\n    state {\n      __typename\n      state\n    }\n    count\n    comments {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment: betaComment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment: betaComment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "9e3d277c0eb0b263325e9581dd705761d2a14b17761f0ea19ba136249313c1b2"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "CommentSetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "commentId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation CommentSetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionAdd(commentId: $commentId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "commentReactionAdd",
					"fieldName": "commentReactionAdd",
					"type": "Boolean!",
					"args": [
						{
							"name": "commentId",
							"value": {
								"kind": "Variable",
								"variableName": "commentId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CommentSetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionAdd(commentId: $commentId, reaction: $reaction)\n}",
			"operationId": "68681459c19a3718ee3cbc5928062747ba8c14aa6a47fbbce51dd7ed41779857"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "CommentUnsetReaction",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "commentId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation CommentUnsetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionRemove(commentId: $commentId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "commentReactionRemove",
					"fieldName": "commentReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "commentId",
							"value": {
								"kind": "Variable",
								"variableName": "commentId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation CommentUnsetReaction($commentId: ID!, $reaction: MessageReactionType!) {\n  commentReactionRemove(commentId: $commentId, reaction: $reaction)\n}",
			"operationId": "d60882350e6c5b03ee3536480f68acc5a170f1c11395b23b98e7d6a432c808db"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "DeleteNotification",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "notificationId",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteNotification($notificationId: ID!) {\n  deleteNotification(notificationId: $notificationId)\n}",
			"fields": [
				{
					"responseName": "deleteNotification",
					"fieldName": "deleteNotification",
					"type": "Boolean!",
					"args": [
						{
							"name": "notificationId",
							"value": {
								"kind": "Variable",
								"variableName": "notificationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteNotification($notificationId: ID!) {\n  deleteNotification(notificationId: $notificationId)\n}",
			"operationId": "6d2459d4a28525f141af1091dada28b6be2bbef96ab29ba43d70cf09a5061175"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "SubscribeToComments",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "type",
					"type": "CommentSubscriptionType!"
				}
			],
			"source": "mutation SubscribeToComments($peerId: ID!, $type: CommentSubscriptionType!) {\n  subscribeToComments(peerId: $peerId, type: $type)\n}",
			"fields": [
				{
					"responseName": "subscribeToComments",
					"fieldName": "subscribeToComments",
					"type": "Boolean!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "CommentSubscriptionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SubscribeToComments($peerId: ID!, $type: CommentSubscriptionType!) {\n  subscribeToComments(peerId: $peerId, type: $type)\n}",
			"operationId": "8124f6250183413b6b8d6cfa2edcdfb06b00bf32922cc32e57c39614b45f08d3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "UnSubscribeFromComments",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation UnSubscribeFromComments($peerId: ID!) {\n  unsubscribeFromComments(peerId: $peerId)\n}",
			"fields": [
				{
					"responseName": "unsubscribeFromComments",
					"fieldName": "unsubscribeFromComments",
					"type": "Boolean!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation UnSubscribeFromComments($peerId: ID!) {\n  unsubscribeFromComments(peerId: $peerId)\n}",
			"operationId": "712d91bee071e2c83f2abaddcb8b0b5323d5378d54a1c1e633a870f8cd9cd8bb"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "AddComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "repeatKey",
					"type": "String"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "replyComment",
					"type": "ID"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation AddComment($repeatKey: String, $peerId: ID!, $message: String, $replyComment: ID, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  betaAddComment(repeatKey: $repeatKey, peerId: $peerId, message: $message, replyComment: $replyComment, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "betaAddComment",
					"fieldName": "betaAddComment",
					"type": "CommentEntry!",
					"args": [
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "replyComment",
							"value": {
								"kind": "Variable",
								"variableName": "replyComment"
							},
							"type": "ID"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AddComment($repeatKey: String, $peerId: ID!, $message: String, $replyComment: ID, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  betaAddComment(repeatKey: $repeatKey, peerId: $peerId, message: $message, replyComment: $replyComment, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans) {\n    __typename\n    id\n  }\n}",
			"operationId": "966ffe2a551059f6ebffbe1a5e567c7f013145a933a5a426c15b1cc2f1517390"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "EditComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "message",
					"type": "String"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "fileAttachments",
					"type": "[FileAttachmentInput!]"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				}
			],
			"source": "mutation EditComment($id: ID!, $message: String, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editComment(id: $id, message: $message, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"fields": [
				{
					"responseName": "editComment",
					"fieldName": "editComment",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						},
						{
							"name": "mentions",
							"value": {
								"kind": "Variable",
								"variableName": "mentions"
							},
							"type": "[MentionInput!]"
						},
						{
							"name": "fileAttachments",
							"value": {
								"kind": "Variable",
								"variableName": "fileAttachments"
							},
							"type": "[FileAttachmentInput!]"
						},
						{
							"name": "spans",
							"value": {
								"kind": "Variable",
								"variableName": "spans"
							},
							"type": "[MessageSpanInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation EditComment($id: ID!, $message: String, $mentions: [MentionInput!], $fileAttachments: [FileAttachmentInput!], $spans: [MessageSpanInput!]) {\n  editComment(id: $id, message: $message, mentions: $mentions, fileAttachments: $fileAttachments, spans: $spans)\n}",
			"operationId": "2d5f0055d9c9deb950af70b56c8f428e5186af3877692dd6b25062e14c1226d9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"operationName": "CommentWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "fromState",
					"type": "String"
				}
			],
			"source": "subscription CommentWatch($peerId: ID!, $fromState: String) {\n  event: commentUpdates(peerId: $peerId, fromState: $fromState) {\n    __typename\n    ... on CommentUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n    ... on CommentUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "commentUpdates",
					"type": "CommentUpdateContainer",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "fromState"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "CommentUpdateSingle",
							"possibleTypes": [
								"CommentUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "CommentUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "CommentUpdateBatch",
							"possibleTypes": [
								"CommentUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[CommentUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommentUpdateFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "subscription CommentWatch($peerId: ID!, $fromState: String) {\n  event: commentUpdates(peerId: $peerId, fromState: $fromState) {\n    __typename\n    ... on CommentUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n    ... on CommentUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...CommentUpdateFragment\n      }\n    }\n  }\n}\nfragment CommentUpdateFragment on CommentUpdate {\n  __typename\n  ... on CommentReceived {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n  ... on CommentUpdated {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment: betaComment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment: betaComment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "81d4b008d0d00f67761e08db52f9e5dc16c686e2130a8f880963364a3161622e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "Conference",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "conference",
					"fieldName": "conference",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query Conference($id: ID!) {\n  conference(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "c4b133c20c55734a3b353fbf8ab9f5652dad12974d2a6c61a90ae3376a85eef9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMedia",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceMedia",
					"fieldName": "conferenceMedia",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "iceServers",
							"fieldName": "iceServers",
							"type": "[ICEServer!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "urls",
									"fieldName": "urls",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "username",
									"fieldName": "username",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "credential",
									"fieldName": "credential",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ConferenceMedia($id: ID!, $peerId: ID!) {\n  conferenceMedia(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n    iceServers {\n      __typename\n      urls\n      username\n      credential\n    }\n  }\n}",
			"operationId": "35be179eae60bf0e919462a42fda8c13919b08fe865377cab4b7d55737f80935"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceJoin",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceJoin",
					"fieldName": "conferenceJoin",
					"type": "ConferenceJoinResult!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "peerId",
							"fieldName": "peerId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "conference",
							"fieldName": "conference",
							"type": "Conference!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"ConferenceShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceJoin($id: ID!) {\n  conferenceJoin(id: $id) {\n    __typename\n    peerId\n    conference {\n      __typename\n      ...ConferenceShort\n    }\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "b401f8c43af22acd594c50a6cdd30eafaa2d4f6cb604e3a950be45eeb67ddc37"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceLeave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceLeave",
					"fieldName": "conferenceLeave",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceLeave($id: ID!, $peerId: ID!) {\n  conferenceLeave(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "4cccfd3d69b2d796431aae940fc397e517d7d4ee9b1f9d36b328ad639f088c66"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceKeepAlive",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "conferenceKeepAlive",
					"fieldName": "conferenceKeepAlive",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceKeepAlive($id: ID!, $peerId: ID!) {\n  conferenceKeepAlive(id: $id, peerId: $peerId) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "a18fc76228f42e0f393f819cf5759111a159e327502c1cd483f4492ce681d367"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionOffer",
					"fieldName": "peerConnectionOffer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceOffer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $offer: String!) {\n  peerConnectionOffer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, offer: $offer) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "b1f74b0ad73c2ff17a9ecd6fd984230e188995c4e320d89bef138c9f7ac29651"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionAnswer",
					"fieldName": "peerConnectionAnswer",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceAnswer($id: ID!, $ownPeerId: ID!, $peerId: ID!, $answer: String!) {\n  peerConnectionAnswer(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, answer: $answer) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "abbd10248ecfb96953078f31dd5f48456439e3ce4a0e8bfc1bf83cf81188c5c3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "ownPeerId",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceShort\n  }\n}",
			"fields": [
				{
					"responseName": "peerConnectionCandidate",
					"fieldName": "peerConnectionCandidate",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "ownPeerId",
							"value": {
								"kind": "Variable",
								"variableName": "ownPeerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceShort"
			],
			"sourceWithFragments": "mutation ConferenceCandidate($id: ID!, $ownPeerId: ID!, $peerId: ID!, $candidate: String!) {\n  peerConnectionCandidate(id: $id, peerId: $peerId, ownPeerId: $ownPeerId, candidate: $candidate) {\n    __typename\n    ...ConferenceShort\n  }\n}\nfragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"operationId": "49b5ed93964906df2ac91f3018d3f64f9ded84d4d2cb180bbea6125c63d6dbd5"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaOffer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "offer",
					"type": "String!"
				}
			],
			"source": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamOffer",
					"fieldName": "mediaStreamOffer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "offer",
							"value": {
								"kind": "Variable",
								"variableName": "offer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaOffer($id: ID!, $peerId: ID!, $offer: String!) {\n  mediaStreamOffer(id: $id, peerId: $peerId, offer: $offer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "4ec27733a3432a25d6f42cc4d7c7a4850fc21aefc77991074d08c7aac204ffa1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaNegotiationNeeded",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation MediaNegotiationNeeded($id: ID!, $peerId: ID!) {\n  mediaStreamNegotiationNeeded(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamNegotiationNeeded",
					"fieldName": "mediaStreamNegotiationNeeded",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaNegotiationNeeded($id: ID!, $peerId: ID!) {\n  mediaStreamNegotiationNeeded(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "bb9d15f4f046016fabf395f71f6c551bfdd61cf28e1342bef529744c4115be64"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaFailed",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "mutation MediaFailed($id: ID!, $peerId: ID!) {\n  mediaStreamFailed(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamFailed",
					"fieldName": "mediaStreamFailed",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaFailed($id: ID!, $peerId: ID!) {\n  mediaStreamFailed(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "c30b95cd1c870db93249ca4d4646605f8faf6ac4ecc25ce67520aa871f52900c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaAnswer",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "answer",
					"type": "String!"
				}
			],
			"source": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamAnswer",
					"fieldName": "mediaStreamAnswer",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "answer",
							"value": {
								"kind": "Variable",
								"variableName": "answer"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaAnswer($id: ID!, $peerId: ID!, $answer: String!) {\n  mediaStreamAnswer(id: $id, peerId: $peerId, answer: $answer) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "56c71f33327d511b28145a16127ab55180ce6d988a2c116c6f02945241402d33"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "MediaCandidate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "candidate",
					"type": "String!"
				}
			],
			"source": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "mediaStreamCandidate",
					"fieldName": "mediaStreamCandidate",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "candidate",
							"value": {
								"kind": "Variable",
								"variableName": "candidate"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MediaCandidate($id: ID!, $peerId: ID!, $candidate: String!) {\n  mediaStreamCandidate(id: $id, peerId: $peerId, candidate: $candidate) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "f0a65c04d41cbb16a07f1bc8b7b8bb6c7c47c258fc43ffcabd62dec2555992aa"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceMediaWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "media",
					"fieldName": "alphaConferenceMediaWatch",
					"type": "ConferenceMedia!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "streams",
							"fieldName": "streams",
							"type": "[MediaStream!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "MediaStreamState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription ConferenceMediaWatch($id: ID!, $peerId: ID!) {\n  media: alphaConferenceMediaWatch(id: $id, peerId: $peerId) {\n    __typename\n    id\n    streams {\n      __typename\n      id\n      state\n      sdp\n      ice\n    }\n  }\n}",
			"operationId": "3a548e19359ca7d9531648da9a3c777fe5399a524616528daa7c92ae8fdb155a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Conferences.ts",
			"operationName": "ConferenceWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}",
			"fields": [
				{
					"responseName": "alphaConferenceWatch",
					"fieldName": "alphaConferenceWatch",
					"type": "Conference!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"ConferenceFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"ConferenceFull",
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "subscription ConferenceWatch($id: ID!) {\n  alphaConferenceWatch(id: $id) {\n    __typename\n    ...ConferenceFull\n  }\n}\nfragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "772ea1b9df41c12249ae1efce309c4630984aad3d28a77de1d459d0de15b127f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "AvailableRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query AvailableRooms {\n  availableChats: betaUserAvailableRooms(limit: 3, isChannel: false) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  availableChannels: betaUserAvailableRooms(limit: 3, isChannel: true) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  communities: alphaComunityPrefixSearch(first: 3) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "availableChats",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": 3,
							"type": "Int"
						},
						{
							"name": "isChannel",
							"value": false,
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "availableChannels",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": 3,
							"type": "Int"
						},
						{
							"name": "isChannel",
							"value": true,
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "suggestedRooms",
					"fieldName": "betaSuggestedRooms",
					"type": "[Room!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "communities",
					"fieldName": "alphaComunityPrefixSearch",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "first",
							"value": 3,
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommunitySearch"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "isDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommunitySearch"
			],
			"sourceWithFragments": "query AvailableRooms {\n  availableChats: betaUserAvailableRooms(limit: 3, isChannel: false) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  availableChannels: betaUserAvailableRooms(limit: 3, isChannel: true) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  communities: alphaComunityPrefixSearch(first: 3) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}\nfragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"operationId": "2a67975d50a443e49b1089838d567ffc568eb5998761326899524151c24c5ef6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "SuggestedRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuggestedRooms {\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "suggestedRooms",
					"fieldName": "betaSuggestedRooms",
					"type": "[Room!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "isDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query SuggestedRooms {\n  suggestedRooms: betaSuggestedRooms {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n  isDiscoverDone: betaIsDiscoverDone\n}",
			"operationId": "66c33b706672be3b136f69449250d6217de6428c968710f54be44bc97d3ed901"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "UserAvailableRooms",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "limit",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				},
				{
					"name": "isChannel",
					"type": "Boolean"
				}
			],
			"source": "query UserAvailableRooms($limit: Int!, $after: ID, $isChannel: Boolean) {\n  betaUserAvailableRooms(limit: $limit, after: $after, isChannel: $isChannel) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaUserAvailableRooms",
					"fieldName": "betaUserAvailableRooms",
					"type": "[SharedRoom!]!",
					"args": [
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							},
							"type": "Int"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						},
						{
							"name": "isChannel",
							"value": {
								"kind": "Variable",
								"variableName": "isChannel"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query UserAvailableRooms($limit: Int!, $after: ID, $isChannel: Boolean) {\n  betaUserAvailableRooms(limit: $limit, after: $after, isChannel: $isChannel) {\n    __typename\n    ... on SharedRoom {\n      id\n      kind\n      title\n      photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"operationId": "3de9de2928e0bd53861b493f1d92b088dd99b63a35b935d46baf7f6439b0a0d0"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "GlobalSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				},
				{
					"name": "kinds",
					"type": "[GlobalSearchEntryKind!]"
				}
			],
			"source": "query GlobalSearch($query: String!, $kinds: [GlobalSearchEntryKind!]) {\n  items: alphaGlobalSearch(query: $query, kinds: $kinds) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaGlobalSearch",
					"type": "[GlobalSearchEntry!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						},
						{
							"name": "kinds",
							"value": {
								"kind": "Variable",
								"variableName": "kinds"
							},
							"type": "[GlobalSearchEntryKind!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							]
						},
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							]
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "roomPhoto",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort",
				"UserShort"
			],
			"sourceWithFragments": "query GlobalSearch($query: String!, $kinds: [GlobalSearchEntryKind!]) {\n  items: alphaGlobalSearch(query: $query, kinds: $kinds) {\n    __typename\n    ... on Organization {\n      ...OrganizationShort\n    }\n    ... on User {\n      ...UserShort\n    }\n    ... on SharedRoom {\n      id\n      kind\n      title\n      roomPhoto: photo\n      membersCount\n      membership\n      organization {\n        __typename\n        id\n        name\n        photo\n      }\n    }\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "37b1cb8b7f7d7d68cddcbb77b62f3ad5942565e02fc0ba924d2a4cadf150b2a5"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "DiscoverNextPage",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "selectedTagsIds",
					"type": "[String!]!"
				},
				{
					"name": "excudedGroupsIds",
					"type": "[String!]!"
				}
			],
			"source": "query DiscoverNextPage($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaNextDiscoverPage: gammaNextDiscoverPage(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    chats {\n      __typename\n      ...RoomShort\n    }\n    tagGroup {\n      __typename\n      id\n      title\n      subtitle\n      tags {\n        __typename\n        id\n        title\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaNextDiscoverPage",
					"fieldName": "gammaNextDiscoverPage",
					"type": "DiscoverPage",
					"args": [
						{
							"name": "selectedTagsIds",
							"value": {
								"kind": "Variable",
								"variableName": "selectedTagsIds"
							},
							"type": "[String!]!"
						},
						{
							"name": "excudedGroupsIds",
							"value": {
								"kind": "Variable",
								"variableName": "excudedGroupsIds"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chats",
							"fieldName": "chats",
							"type": "[Room!]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"RoomShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "tagGroup",
							"fieldName": "tagGroup",
							"type": "TagGroup",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "subtitle",
									"fieldName": "subtitle",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tags",
									"fieldName": "tags",
									"type": "[Tag!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"RoomShort",
				"UserShort",
				"OrganizationShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query DiscoverNextPage($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaNextDiscoverPage: gammaNextDiscoverPage(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    chats {\n      __typename\n      ...RoomShort\n    }\n    tagGroup {\n      __typename\n      id\n      title\n      subtitle\n      tags {\n        __typename\n        id\n        title\n      }\n    }\n  }\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "3f12259c54de5207d48fc566280cfae7b0a27210cb25b1007f1728b4f1813f55"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "BetaSubmitNextDiscover",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "selectedTagsIds",
					"type": "[String!]!"
				},
				{
					"name": "excudedGroupsIds",
					"type": "[String!]!"
				}
			],
			"source": "mutation BetaSubmitNextDiscover($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaSubmitNextDiscover(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    tagGroup {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaSubmitNextDiscover",
					"fieldName": "betaSubmitNextDiscover",
					"type": "DiscoverPage",
					"args": [
						{
							"name": "selectedTagsIds",
							"value": {
								"kind": "Variable",
								"variableName": "selectedTagsIds"
							},
							"type": "[String!]!"
						},
						{
							"name": "excudedGroupsIds",
							"value": {
								"kind": "Variable",
								"variableName": "excudedGroupsIds"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "tagGroup",
							"fieldName": "tagGroup",
							"type": "TagGroup",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation BetaSubmitNextDiscover($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {\n  betaSubmitNextDiscover(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {\n    __typename\n    tagGroup {\n      __typename\n      id\n    }\n  }\n}",
			"operationId": "0553d4ad2c022360134504be915f36197b429777276d4150b8808e86a9e1e3b8"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "BetaDiscoverSkip",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "selectedTagsIds",
					"type": "[String!]!"
				}
			],
			"source": "mutation BetaDiscoverSkip($selectedTagsIds: [String!]!) {\n  betaDiscoverSkip(selectedTagsIds: $selectedTagsIds) {\n    __typename\n    tagGroup {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "betaDiscoverSkip",
					"fieldName": "betaDiscoverSkip",
					"type": "DiscoverPage",
					"args": [
						{
							"name": "selectedTagsIds",
							"value": {
								"kind": "Variable",
								"variableName": "selectedTagsIds"
							},
							"type": "[String!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "tagGroup",
							"fieldName": "tagGroup",
							"type": "TagGroup",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation BetaDiscoverSkip($selectedTagsIds: [String!]!) {\n  betaDiscoverSkip(selectedTagsIds: $selectedTagsIds) {\n    __typename\n    tagGroup {\n      __typename\n      id\n    }\n  }\n}",
			"operationId": "259e480a2e4518ca3ead11f40d770b99f91b1cebb83ef0cbeb303322ee35ab4f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Explore.ts",
			"operationName": "DiscoverIsDone",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query DiscoverIsDone {\n  betaIsDiscoverDone\n}",
			"fields": [
				{
					"responseName": "betaIsDiscoverDone",
					"fieldName": "betaIsDiscoverDone",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query DiscoverIsDone {\n  betaIsDiscoverDone\n}",
			"operationId": "1699290ac35a2da7ffe83662ca2a57754657859f9c61c62fefdd5766fa677026"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlags",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlags",
					"fieldName": "featureFlags",
					"type": "[FeatureFlag!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query FeatureFlags {\n  featureFlags {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "dd6de47404414231484d791d64fdfc82db8334197982191c682dd3784705d219"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "featureFlagAdd",
					"fieldName": "featureFlagAdd",
					"type": "FeatureFlag!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "key"
							},
							"type": "String!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagAdd($key: String!, $title: String!) {\n  featureFlagAdd(key: $key, title: $title) {\n    __typename\n    id\n    key\n    title\n  }\n}",
			"operationId": "cf2235a1b518f31402fc0fffb85ff5d6ace7df3f8353b6646c6d3df74eb72ce8"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagEnable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureAdd",
					"fieldName": "superAccountFeatureAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagEnable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureAdd(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "2083c426883d280373418e67fcd3ea5d057dd2a1a00f3b2b7778b99e0d13fe77"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/FeatureFlag.ts",
			"operationName": "FeatureFlagDisable",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "featureId",
					"type": "ID!"
				}
			],
			"source": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountFeatureRemove",
					"fieldName": "superAccountFeatureRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "featureId",
							"value": {
								"kind": "Variable",
								"variableName": "featureId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeatureFlagDisable($accountId: ID!, $featureId: ID!) {\n  superAccountFeatureRemove(id: $accountId, featureId: $featureId) {\n    __typename\n    id\n    features {\n      __typename\n      id\n      key\n      title\n    }\n  }\n}",
			"operationId": "8e8d707747ab2b7b137ff14eb2c653496a49f44bc595887227731fc002b88722"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "InitFeed",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				}
			],
			"source": "query InitFeed($first: Int!) {\n  feed: alphaHomeFeed(first: $first) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n  drafts: alphaFeedMyDraftsChannel {\n    __typename\n    ...FeedChannelFull\n  }\n}",
			"fields": [
				{
					"responseName": "feed",
					"fieldName": "alphaHomeFeed",
					"type": "FeedItemConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedItem!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "drafts",
					"fieldName": "alphaFeedMyDraftsChannel",
					"type": "FeedChannel!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedChannelFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "query InitFeed($first: Int!) {\n  feed: alphaHomeFeed(first: $first) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n  drafts: alphaFeedMyDraftsChannel {\n    __typename\n    ...FeedChannelFull\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "f062e25f429529c1ea5f6a88c1a5e0c21aabfbca79c338e39867946bf0dd376e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedLoadMore",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query FeedLoadMore($first: Int!, $after: String) {\n  feed: alphaHomeFeed(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "feed",
					"fieldName": "alphaHomeFeed",
					"type": "FeedItemConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedItem!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "query FeedLoadMore($first: Int!, $after: String) {\n  feed: alphaHomeFeed(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "f11551303d5ab31979d3696d880ffcdbf2dfaa4a8edd626444b17ec461d5acdc"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedSubscriptions",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query FeedSubscriptions($first: Int!, $after: ID) {\n  channels: alphaFeedMySubscriptions(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedChannelFull\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "channels",
					"fieldName": "alphaFeedMySubscriptions",
					"type": "FeedChannelConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedChannel!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedChannelFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "query FeedSubscriptions($first: Int!, $after: ID) {\n  channels: alphaFeedMySubscriptions(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedChannelFull\n    }\n    cursor\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "5afcfa7dbe16d8a1b9c3c51e6065715099488c24ca1a75728cc56d9a6c9e9f5a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedWritableChannels",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query FeedWritableChannels($first: Int!, $after: ID) {\n  channels: alphaWritableChannels(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedChannelFull\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "channels",
					"fieldName": "alphaWritableChannels",
					"type": "FeedChannelConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedChannel!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedChannelFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "query FeedWritableChannels($first: Int!, $after: ID) {\n  channels: alphaWritableChannels(first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedChannelFull\n    }\n    cursor\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "8499868085e50574063a60a3289be086c0a5dff32b2175f2fc889324b721f9cf"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelsSearch",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query FeedChannelsSearch($query: String, $sort: String, $first: Int!, $after: String) {\n  search: alphaFeedChannelSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...FeedChannelFull\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "search",
					"fieldName": "alphaFeedChannelSearch",
					"type": "FeedChannelSearchConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[FeedChannelEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "FeedChannel!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FeedChannelFull"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "query FeedChannelsSearch($query: String, $sort: String, $first: Int!, $after: String) {\n  search: alphaFeedChannelSearch(query: $query, sort: $sort, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...FeedChannelFull\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "85792b2009c7e0a8248c7ae8d86d8f7d108abcb0c7ffcef4e56fa3b529c5c1ef"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedRecommendedChannels",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query FeedRecommendedChannels($first: Int!, $after: String) {\n  search: alphaRecommendedChannels(first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...FeedChannelFull\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "search",
					"fieldName": "alphaRecommendedChannels",
					"type": "FeedChannelSearchConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[FeedChannelEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "FeedChannel!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"FeedChannelFull"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "query FeedRecommendedChannels($first: Int!, $after: String) {\n  search: alphaRecommendedChannels(first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...FeedChannelFull\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "e13a8ba8c4f6bf6b64b6688f18178b3eada402271ffb976e9306e662a1114f46"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannel",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query FeedChannel($id: ID!) {\n  channel: alphaFeedChannel(id: $id) {\n    __typename\n    ...FeedChannelFull\n  }\n}",
			"fields": [
				{
					"responseName": "channel",
					"fieldName": "alphaFeedChannel",
					"type": "FeedChannel!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedChannelFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "query FeedChannel($id: ID!) {\n  channel: alphaFeedChannel(id: $id) {\n    __typename\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "e56b70d7519c184c0002b4b00c54d18773254a2bbeb963e47f920db48a30cd3e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelWriters",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query FeedChannelWriters($id: ID!, $first: Int!, $after: ID) {\n  writers: alphaFeedChannelAdmins(id: $id, first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      role\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "writers",
					"fieldName": "alphaFeedChannelAdmins",
					"type": "FeedChannelAdminConnection!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedChannelAdmin!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "FeedChannelSubscriberRole!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query FeedChannelWriters($id: ID!, $first: Int!, $after: ID) {\n  writers: alphaFeedChannelAdmins(id: $id, first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      role\n    }\n    cursor\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "354a61ff5292ede6a723616d813b1d40358f8356f8575c3962bbca66322180a6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelSubscribers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "channelId",
					"type": "ID!"
				},
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query FeedChannelSubscribers($channelId: ID!, $query: String, $first: Int!, $after: String) {\n  subscribers: alphaFeedChannelSubscribers(channelId: $channelId, query: $query, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        user {\n          __typename\n          ...UserShort\n        }\n        role\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "subscribers",
					"fieldName": "alphaFeedChannelSubscribers",
					"type": "FeedChannelSubscriberConnection!",
					"args": [
						{
							"name": "channelId",
							"value": {
								"kind": "Variable",
								"variableName": "channelId"
							},
							"type": "ID!"
						},
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[FeedChannelSubscriberEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "FeedChannelSubscriber!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserShort"
											],
											"inlineFragments": []
										},
										{
											"responseName": "role",
											"fieldName": "role",
											"type": "FeedChannelSubscriberRole!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query FeedChannelSubscribers($channelId: ID!, $query: String, $first: Int!, $after: String) {\n  subscribers: alphaFeedChannelSubscribers(channelId: $channelId, query: $query, first: $first, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        user {\n          __typename\n          ...UserShort\n        }\n        role\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      pagesCount\n      currentPage\n      openEnded\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "16d8f807ba3730f6884895bc3c4b3c5367747ece8c2a1b9279808bc7a89e2c7e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelContent",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query FeedChannelContent($id: ID!, $first: Int!, $after: String) {\n  content: alphaFeedChannelContent(id: $id, first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "content",
					"fieldName": "alphaFeedChannelContent",
					"type": "FeedItemConnection!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[FeedItem!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "query FeedChannelContent($id: ID!, $first: Int!, $after: String) {\n  content: alphaFeedChannelContent(id: $id, first: $first, after: $after) {\n    __typename\n    items {\n      __typename\n      ...FeedItemFull\n    }\n    cursor\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "2e18242c74943a94677134ea4d2dd004ac31fbe15060874192fa9787cdd62c95"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "global",
					"type": "Boolean"
				}
			],
			"source": "mutation FeedChannelCreate($title: String!, $about: String, $photoRef: ImageRefInput, $global: Boolean) {\n  channel: alphaFeedCreateChannel(title: $title, about: $about, photoRef: $photoRef, global: $global) {\n    __typename\n    ...FeedChannelFull\n  }\n}",
			"fields": [
				{
					"responseName": "channel",
					"fieldName": "alphaFeedCreateChannel",
					"type": "FeedChannel!",
					"args": [
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "global",
							"value": {
								"kind": "Variable",
								"variableName": "global"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedChannelFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedChannelFull"
			],
			"sourceWithFragments": "mutation FeedChannelCreate($title: String!, $about: String, $photoRef: ImageRefInput, $global: Boolean) {\n  channel: alphaFeedCreateChannel(title: $title, about: $about, photoRef: $photoRef, global: $global) {\n    __typename\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"operationId": "574f83ebff2019aebc601f8ba374ae05286a63cd89894d306c83b4b1779e87a7"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "global",
					"type": "Boolean"
				}
			],
			"source": "mutation FeedChannelUpdate($id: ID!, $title: String!, $about: String, $photoRef: ImageRefInput, $global: Boolean) {\n  channel: alphaFeedUpdateChannel(id: $id, title: $title, about: $about, photoRef: $photoRef, global: $global) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "channel",
					"fieldName": "alphaFeedUpdateChannel",
					"type": "FeedChannel!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String"
						},
						{
							"name": "about",
							"value": {
								"kind": "Variable",
								"variableName": "about"
							},
							"type": "String"
						},
						{
							"name": "photoRef",
							"value": {
								"kind": "Variable",
								"variableName": "photoRef"
							},
							"type": "ImageRefInput"
						},
						{
							"name": "global",
							"value": {
								"kind": "Variable",
								"variableName": "global"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedChannelUpdate($id: ID!, $title: String!, $about: String, $photoRef: ImageRefInput, $global: Boolean) {\n  channel: alphaFeedUpdateChannel(id: $id, title: $title, about: $about, photoRef: $photoRef, global: $global) {\n    __typename\n    id\n  }\n}",
			"operationId": "6a23512d8a37018a492ba91378b452ac019889871d9113e207501af9811d1b6a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelSubscribe",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation FeedChannelSubscribe($id: ID!) {\n  alphaFeedChannelSubscribe(id: $id)\n}",
			"fields": [
				{
					"responseName": "alphaFeedChannelSubscribe",
					"fieldName": "alphaFeedChannelSubscribe",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedChannelSubscribe($id: ID!) {\n  alphaFeedChannelSubscribe(id: $id)\n}",
			"operationId": "cef272879f030a59c2afbbfd79a0a7461936fbcf53c71be454c81540fa792a5a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelUnsubscribe",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation FeedChannelUnsubscribe($id: ID!) {\n  alphaFeedChannelUnsubscribe(id: $id)\n}",
			"fields": [
				{
					"responseName": "alphaFeedChannelUnsubscribe",
					"fieldName": "alphaFeedChannelUnsubscribe",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedChannelUnsubscribe($id: ID!) {\n  alphaFeedChannelUnsubscribe(id: $id)\n}",
			"operationId": "7b4eca6e9957eae01cd2db7b33c2c8ac5635a9d6b77745905eb36d2d32e7e695"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelAddWriter",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation FeedChannelAddWriter($id: ID!, $userId: ID!) {\n  alphaFeedChannelAddEditor(id: $id, userId: $userId)\n}",
			"fields": [
				{
					"responseName": "alphaFeedChannelAddEditor",
					"fieldName": "alphaFeedChannelAddEditor",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedChannelAddWriter($id: ID!, $userId: ID!) {\n  alphaFeedChannelAddEditor(id: $id, userId: $userId)\n}",
			"operationId": "0d89473e36af4db9aabd50a41c2662550d193049e3f4071f44719373c21e68d6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedChannelRemoveWriter",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation FeedChannelRemoveWriter($id: ID!, $userId: ID!) {\n  alphaFeedChannelRemoveEditor(id: $id, userId: $userId)\n}",
			"fields": [
				{
					"responseName": "alphaFeedChannelRemoveEditor",
					"fieldName": "alphaFeedChannelRemoveEditor",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedChannelRemoveWriter($id: ID!, $userId: ID!) {\n  alphaFeedChannelRemoveEditor(id: $id, userId: $userId)\n}",
			"operationId": "0b5f68308044b919b4d421316006b5c3e05aebde0c721d99572ef2f76c383035"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedItem",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query FeedItem($id: ID!) {\n  item: alphaFeedItem(id: $id) {\n    __typename\n    ...FeedItemFull\n  }\n}",
			"fields": [
				{
					"responseName": "item",
					"fieldName": "alphaFeedItem",
					"type": "FeedItem",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedItemFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "query FeedItem($id: ID!) {\n  item: alphaFeedItem(id: $id) {\n    __typename\n    ...FeedItemFull\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "456252f2c0363333d0e85cc50db2d88b0780fd054889aeb4a3ff26ffb6a4b297"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedEditPost",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "feedItemId",
					"type": "ID!"
				},
				{
					"name": "slides",
					"type": "[SlideInput!]!"
				}
			],
			"source": "mutation FeedEditPost($feedItemId: ID!, $slides: [SlideInput!]!) {\n  editFeedPost: alphaEditFeedPost(feedItemId: $feedItemId, slides: $slides) {\n    __typename\n    ...FeedItemFull\n  }\n}",
			"fields": [
				{
					"responseName": "editFeedPost",
					"fieldName": "alphaEditFeedPost",
					"type": "FeedItem!",
					"args": [
						{
							"name": "feedItemId",
							"value": {
								"kind": "Variable",
								"variableName": "feedItemId"
							},
							"type": "ID!"
						},
						{
							"name": "slides",
							"value": {
								"kind": "Variable",
								"variableName": "slides"
							},
							"type": "[SlideInput!]"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedItemFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "mutation FeedEditPost($feedItemId: ID!, $slides: [SlideInput!]!) {\n  editFeedPost: alphaEditFeedPost(feedItemId: $feedItemId, slides: $slides) {\n    __typename\n    ...FeedItemFull\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "734c95142542adfb11302f193581df726b0cf4718b68267c99fa98beab4143e7"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedCreatePost",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "channel",
					"type": "ID!"
				},
				{
					"name": "slides",
					"type": "[SlideInput!]!"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation FeedCreatePost($channel: ID!, $slides: [SlideInput!]!, $repeatKey: String) {\n  post: alphaCreateFeedPost(channel: $channel, slides: $slides, repeatKey: $repeatKey) {\n    __typename\n    ...FeedItemFull\n  }\n}",
			"fields": [
				{
					"responseName": "post",
					"fieldName": "alphaCreateFeedPost",
					"type": "FeedItem!",
					"args": [
						{
							"name": "channel",
							"value": {
								"kind": "Variable",
								"variableName": "channel"
							},
							"type": "ID!"
						},
						{
							"name": "slides",
							"value": {
								"kind": "Variable",
								"variableName": "slides"
							},
							"type": "[SlideInput!]"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedItemFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "mutation FeedCreatePost($channel: ID!, $slides: [SlideInput!]!, $repeatKey: String) {\n  post: alphaCreateFeedPost(channel: $channel, slides: $slides, repeatKey: $repeatKey) {\n    __typename\n    ...FeedItemFull\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "ca168302b1e93e65c112149e19199eb3be125dc79e8796ea9fe6352f50bc9d38"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedReactionAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "feedItemId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation FeedReactionAdd($feedItemId: ID!, $reaction: MessageReactionType!) {\n  feedReactionAdd(feedItemId: $feedItemId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "feedReactionAdd",
					"fieldName": "feedReactionAdd",
					"type": "Boolean!",
					"args": [
						{
							"name": "feedItemId",
							"value": {
								"kind": "Variable",
								"variableName": "feedItemId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedReactionAdd($feedItemId: ID!, $reaction: MessageReactionType!) {\n  feedReactionAdd(feedItemId: $feedItemId, reaction: $reaction)\n}",
			"operationId": "faa802b6aa60a22f4af9a819ee9b764af1d9a6d6fa23f80d3d49380119aa9f4c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedReactionRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "feedItemId",
					"type": "ID!"
				},
				{
					"name": "reaction",
					"type": "MessageReactionType!"
				}
			],
			"source": "mutation FeedReactionRemove($feedItemId: ID!, $reaction: MessageReactionType!) {\n  feedReactionRemove(feedItemId: $feedItemId, reaction: $reaction)\n}",
			"fields": [
				{
					"responseName": "feedReactionRemove",
					"fieldName": "feedReactionRemove",
					"type": "Boolean!",
					"args": [
						{
							"name": "feedItemId",
							"value": {
								"kind": "Variable",
								"variableName": "feedItemId"
							},
							"type": "ID!"
						},
						{
							"name": "reaction",
							"value": {
								"kind": "Variable",
								"variableName": "reaction"
							},
							"type": "MessageReactionType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedReactionRemove($feedItemId: ID!, $reaction: MessageReactionType!) {\n  feedReactionRemove(feedItemId: $feedItemId, reaction: $reaction)\n}",
			"operationId": "9d6361c8e453c1d47a37356e41a02a81d13f64c1cea5739e54ab56441fac76f7"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedDeletePost",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "feedItemId",
					"type": "ID!"
				}
			],
			"source": "mutation FeedDeletePost($feedItemId: ID!) {\n  alphaDeleteFeedPost(feedItemId: $feedItemId)\n}",
			"fields": [
				{
					"responseName": "alphaDeleteFeedPost",
					"fieldName": "alphaDeleteFeedPost",
					"type": "Boolean!",
					"args": [
						{
							"name": "feedItemId",
							"value": {
								"kind": "Variable",
								"variableName": "feedItemId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation FeedDeletePost($feedItemId: ID!) {\n  alphaDeleteFeedPost(feedItemId: $feedItemId)\n}",
			"operationId": "39dbae6904caa5eb0b23022597fbe123bb7f808085714faa81e570ab4f74c5a0"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"operationName": "FeedUpdates",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription FeedUpdates($state: String) {\n  event: homeFeedUpdates(fromState: $state) {\n    __typename\n    updates {\n      __typename\n      ...FeedUpdateFragment\n    }\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "homeFeedUpdates",
					"type": "FeedUpdateContainer!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "updates",
							"fieldName": "updates",
							"type": "[FeedUpdate!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedUpdateFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"FeedUpdateFragment",
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"UserShort",
				"OrganizationShort",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment",
				"SpanFragment",
				"UserForMention"
			],
			"sourceWithFragments": "subscription FeedUpdates($state: String) {\n  event: homeFeedUpdates(fromState: $state) {\n    __typename\n    updates {\n      __typename\n      ...FeedUpdateFragment\n    }\n    state\n  }\n}\nfragment FeedUpdateFragment on FeedUpdate {\n  __typename\n  ... on FeedItemReceived {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n  ... on FeedItemUpdated {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n  ... on FeedItemDeleted {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"operationId": "86869ae127444a118db8251d74ca201b904701e51c1a8ae8389c0c9fe3f86632"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Matchmaking.ts",
			"operationName": "MatchmakingRoom",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				}
			],
			"source": "query MatchmakingRoom($peerId: ID!) {\n  matchmakingRoom(peerId: $peerId) {\n    __typename\n    ...MatchmakingRoomFragment\n  }\n}",
			"fields": [
				{
					"responseName": "matchmakingRoom",
					"fieldName": "matchmakingRoom",
					"type": "MatchmakingRoom",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingRoomFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "query MatchmakingRoom($peerId: ID!) {\n  matchmakingRoom(peerId: $peerId) {\n    __typename\n    ...MatchmakingRoomFragment\n  }\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "b1952947d82c200326c9be699737a5ba68d07d5f31107f33ddf2e8921b76a9e1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Matchmaking.ts",
			"operationName": "MatchmakingProfile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				}
			],
			"source": "query MatchmakingProfile($peerId: ID!, $uid: ID!) {\n  matchmakingProfile(peerId: $peerId, uid: $uid) {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}",
			"fields": [
				{
					"responseName": "matchmakingProfile",
					"fieldName": "matchmakingProfile",
					"type": "MatchmakingProfile",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingProfileFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "query MatchmakingProfile($peerId: ID!, $uid: ID!) {\n  matchmakingProfile(peerId: $peerId, uid: $uid) {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "bc58602df80bd868a4e82f011d3b9f257f96b2141de38877933e3239a88de80e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Matchmaking.ts",
			"operationName": "MatchmakingRoomSave",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "MatchmakingRoomInput!"
				}
			],
			"source": "mutation MatchmakingRoomSave($peerId: ID!, $input: MatchmakingRoomInput!) {\n  matchmakingRoomSave(peerId: $peerId, input: $input) {\n    __typename\n    ...MatchmakingRoomFragment\n  }\n}",
			"fields": [
				{
					"responseName": "matchmakingRoomSave",
					"fieldName": "matchmakingRoomSave",
					"type": "MatchmakingRoom!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "MatchmakingRoomInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingRoomFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"MatchmakingRoomFragment",
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation MatchmakingRoomSave($peerId: ID!, $input: MatchmakingRoomInput!) {\n  matchmakingRoomSave(peerId: $peerId, input: $input) {\n    __typename\n    ...MatchmakingRoomFragment\n  }\n}\nfragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "cd60d2923feea7f93bbb0d5294a10ba1476ee140346f5ed0e1da5ba6ccd40a6d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Matchmaking.ts",
			"operationName": "MatchmakingProfileFill",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "input",
					"type": "MatchmakingProfileFillInput!"
				}
			],
			"source": "mutation MatchmakingProfileFill($peerId: ID!, $input: MatchmakingProfileFillInput!) {\n  matchmakingProfileFill(peerId: $peerId, input: $input) {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}",
			"fields": [
				{
					"responseName": "matchmakingProfileFill",
					"fieldName": "matchmakingProfileFill",
					"type": "MatchmakingProfile!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "MatchmakingProfileFillInput!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingProfileFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"MatchmakingProfileFragment"
			],
			"sourceWithFragments": "mutation MatchmakingProfileFill($peerId: ID!, $input: MatchmakingProfileFillInput!) {\n  matchmakingProfileFill(peerId: $peerId, input: $input) {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}\nfragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"operationId": "c04f08d41e493352815c1f46d25d3a141754ece68bef68076dc9d63df37c0a16"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Matchmaking.ts",
			"operationName": "MatchmakingConnect",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "uid",
					"type": "ID!"
				}
			],
			"source": "mutation MatchmakingConnect($peerId: ID!, $uid: ID!) {\n  matchmakingConnect(peerId: $peerId, uid: $uid)\n}",
			"fields": [
				{
					"responseName": "matchmakingConnect",
					"fieldName": "matchmakingConnect",
					"type": "Boolean!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MatchmakingConnect($peerId: ID!, $uid: ID!) {\n  matchmakingConnect(peerId: $peerId, uid: $uid)\n}",
			"operationId": "6e0c3ad19adb483e11e45750c17dadd26d6c9487359327f05f43fdf11b12eae9"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotifications",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "first",
					"type": "Int!"
				},
				{
					"name": "before",
					"type": "ID"
				}
			],
			"source": "query MyNotifications($first: Int!, $before: ID) {\n  myNotifications(first: $first, before: $before) {\n    __typename\n    items {\n      __typename\n      ...NotificationFragment\n    }\n    cursor\n  }\n}",
			"fields": [
				{
					"responseName": "myNotifications",
					"fieldName": "myNotifications",
					"type": "NotificationConnection!",
					"args": [
						{
							"name": "first",
							"value": {
								"kind": "Variable",
								"variableName": "first"
							},
							"type": "Int!"
						},
						{
							"name": "before",
							"value": {
								"kind": "Variable",
								"variableName": "before"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "items",
							"fieldName": "items",
							"type": "[Notification!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "cursor",
							"fieldName": "cursor",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"NotificationFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"RoomNano",
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment"
			],
			"sourceWithFragments": "query MyNotifications($first: Int!, $before: ID) {\n  myNotifications(first: $first, before: $before) {\n    __typename\n    items {\n      __typename\n      ...NotificationFragment\n    }\n    cursor\n  }\n}\nfragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n          ... on CommentPeerRootFeedItem {\n            item {\n              __typename\n              ...FeedItemFull\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n    ... on NewMatchmakingProfilesNotification {\n      room {\n        __typename\n        enabled\n      }\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment: betaComment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment: betaComment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}",
			"operationId": "b205a85ee3d828f9da35e0594e555d7d9777cde06a48c9ed7d088cd26a6e0096"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationsCenter",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "state",
					"type": "String"
				}
			],
			"source": "subscription MyNotificationsCenter($state: String) {\n  event: notificationCenterUpdates(fromState: $state) {\n    __typename\n    ... on NotificationCenterUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n    ... on NotificationCenterUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "event",
					"fieldName": "notificationCenterUpdates",
					"type": "NotificationCenterUpdateContainer",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "state"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "NotificationCenterUpdateSingle",
							"possibleTypes": [
								"NotificationCenterUpdateSingle"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "update",
									"fieldName": "update",
									"type": "NotificationCenterUpdate!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"NotificationCenterUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "NotificationCenterUpdateBatch",
							"possibleTypes": [
								"NotificationCenterUpdateBatch"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fromSeq",
									"fieldName": "fromSeq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "seq",
									"fieldName": "seq",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "updates",
									"fieldName": "updates",
									"type": "[NotificationCenterUpdate!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"NotificationCenterUpdateFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"NotificationCenterUpdateFragment",
				"NotificationFragment",
				"CommentEntryFragment",
				"FullMessage",
				"UserShort",
				"OrganizationShort",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny",
				"RoomNano",
				"FeedItemFull",
				"FeedPostAuthorFragment",
				"FeedPostSourceFragment",
				"FeedChannelFull",
				"SlideFragment"
			],
			"sourceWithFragments": "subscription MyNotificationsCenter($state: String) {\n  event: notificationCenterUpdates(fromState: $state) {\n    __typename\n    ... on NotificationCenterUpdateSingle {\n      seq\n      state\n      update {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n    ... on NotificationCenterUpdateBatch {\n      fromSeq\n      seq\n      state\n      updates {\n        __typename\n        ...NotificationCenterUpdateFragment\n      }\n    }\n  }\n}\nfragment NotificationCenterUpdateFragment on NotificationCenterUpdate {\n  __typename\n  ... on NotificationReceived {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationUpdated {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationDeleted {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      id\n    }\n  }\n  ... on NotificationRead {\n    center {\n      __typename\n      id\n      unread\n    }\n  }\n  ... on NotificationContentUpdated {\n    content {\n      __typename\n      ... on UpdatedNotificationContentComment {\n        peer {\n          __typename\n          peerRoot {\n            __typename\n            ... on CommentPeerRootMessage {\n              message {\n                __typename\n                ... on GeneralMessage {\n                  id\n                  fallback\n                  message\n                  sender {\n                    __typename\n                    id\n                    name\n                  }\n                  senderBadge {\n                    __typename\n                    ...UserBadge\n                  }\n                }\n              }\n              chat {\n                __typename\n                ...RoomNano\n              }\n            }\n            ... on CommentPeerRootFeedItem {\n              item {\n                __typename\n                ...FeedItemFull\n              }\n            }\n          }\n          id\n          subscription {\n            __typename\n            type\n          }\n        }\n        comment {\n          __typename\n          ...CommentEntryFragment\n        }\n      }\n    }\n  }\n}\nfragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n          ... on CommentPeerRootFeedItem {\n            item {\n              __typename\n              ...FeedItemFull\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n    ... on NewMatchmakingProfilesNotification {\n      room {\n        __typename\n        enabled\n      }\n    }\n  }\n}\nfragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment: betaComment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment: betaComment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}\nfragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}\nfragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}\nfragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}\nfragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}\nfragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}",
			"operationId": "90b611a8d9610aee2a8fca22a779333590ebf4baae12f0dbe9abd4af9cff3b44"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationCenter",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyNotificationCenter {\n  myNotificationCenter {\n    __typename\n    id\n    unread\n    state {\n      __typename\n      state\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "myNotificationCenter",
					"fieldName": "myNotificationCenter",
					"type": "NotificationCenter!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "NotificationCenterUpdatesState!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query MyNotificationCenter {\n  myNotificationCenter {\n    __typename\n    id\n    unread\n    state {\n      __typename\n      state\n    }\n  }\n}",
			"operationId": "52045efaec0eb67fbe79239665b4b12b9ef0165b9adb829890e9fd0f6329fa68"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "MyNotificationCenterMarkSeqRead",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "seq",
					"type": "Int!"
				}
			],
			"source": "mutation MyNotificationCenterMarkSeqRead($seq: Int!) {\n  notificationCenterMarkSeqRead(toSeq: $seq)\n}",
			"fields": [
				{
					"responseName": "notificationCenterMarkSeqRead",
					"fieldName": "notificationCenterMarkSeqRead",
					"type": "Boolean!",
					"args": [
						{
							"name": "toSeq",
							"value": {
								"kind": "Variable",
								"variableName": "seq"
							},
							"type": "Int!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation MyNotificationCenterMarkSeqRead($seq: Int!) {\n  notificationCenterMarkSeqRead(toSeq: $seq)\n}",
			"operationId": "9548e014c54213d7170d9c05127bc3f7adb23a3ff8e1fb8059c0859feee0b13a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"operationName": "ReadNotification",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "notificationId",
					"type": "ID!"
				}
			],
			"source": "mutation ReadNotification($notificationId: ID!) {\n  readNotification(notificationId: $notificationId) {\n    __typename\n    id\n    unread\n  }\n}",
			"fields": [
				{
					"responseName": "readNotification",
					"fieldName": "readNotification",
					"type": "NotificationCenter!",
					"args": [
						{
							"name": "notificationId",
							"value": {
								"kind": "Variable",
								"variableName": "notificationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReadNotification($notificationId: ID!) {\n  readNotification(notificationId: $notificationId) {\n    __typename\n    id\n    unread\n  }\n}",
			"operationId": "9d1e473f618863cd3c46c84d018a94541d6c974d555cba8c545389eb59cde65b"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "MyOrganizations",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}",
			"fields": [
				{
					"responseName": "myOrganizations",
					"fieldName": "myOrganizations",
					"type": "[Organization!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "isPrimary",
							"fieldName": "betaIsPrimary",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationShort"
			],
			"sourceWithFragments": "query MyOrganizations {\n  myOrganizations {\n    __typename\n    ...OrganizationShort\n    isPrimary: betaIsPrimary\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "1ff0b0b529dc749de7e17433ae2691858128c695ed7fdea19fcde0f189c4b0dd"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "UpdateOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateOrganizationProfileInput!"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateOrganizationProfile",
					"fieldName": "updateOrganizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateOrganizationProfileInput!"
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {\n  updateOrganizationProfile(input: $input, id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"operationId": "53602aeaf1f6ea775e574d46ab62372cfa4e47006517a51ec7ef3abe05e88637"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "Organization",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationFull",
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query Organization($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationFull\n  }\n}\nfragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "ffe0eca8ac184bb19b772ce283afbe6fb7327364d7516ac817e01c13d3b34248"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationWithoutMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationWithoutMembers($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationWithoutMembersFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationWithoutMembersFragment",
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query OrganizationWithoutMembers($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n  }\n}\nfragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "02c772008d8c6e65f4edf0cdb12398e63174ebcdf2f902d094e85131f256510b"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMembersShort",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "members",
							"fieldName": "alphaOrganizationMembers",
							"type": "[OrganizationJoinedMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [
						"OrganizationWithoutMembersFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationWithoutMembersFragment",
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query OrganizationMembersShort($organizationId: ID!) {\n  organization(id: $organizationId) {\n    __typename\n    ...OrganizationWithoutMembersFragment\n    members: alphaOrganizationMembers {\n      __typename\n      user {\n        __typename\n        id\n      }\n    }\n  }\n}\nfragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "fe78751ef2fa82c94dbad94003b9d07f248de87f5f9e8ae9fb6dbd51b9da8b7a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMembers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "first",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "ID"
				}
			],
			"source": "query OrganizationMembers($organizationId: ID!, $first: Int, $after: ID) {\n  organization(id: $organizationId) {\n    __typename\n    id\n    members: alphaOrganizationMembers(first: $first, after: $after) {\n      __typename\n      role\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "organization",
					"fieldName": "organization",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "alphaOrganizationMembers",
							"type": "[OrganizationJoinedMember!]!",
							"args": [
								{
									"name": "first",
									"value": {
										"kind": "Variable",
										"variableName": "first"
									},
									"type": "Int"
								},
								{
									"name": "after",
									"value": {
										"kind": "Variable",
										"variableName": "after"
									},
									"type": "ID"
								}
							],
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "OrganizationMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query OrganizationMembers($organizationId: ID!, $first: Int, $after: ID) {\n  organization(id: $organizationId) {\n    __typename\n    id\n    members: alphaOrganizationMembers(first: $first, after: $after) {\n      __typename\n      role\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "e41d8641336d2d32548c38523d006a405e8974b16575fecdace67298da7b718f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationProfile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}",
			"fields": [
				{
					"responseName": "organizationProfile",
					"fieldName": "organizationProfile",
					"type": "OrganizationProfile!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationProfileFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationProfileFull"
			],
			"sourceWithFragments": "query OrganizationProfile($organizationId: ID!) {\n  organizationProfile(id: $organizationId) {\n    __typename\n    ...OrganizationProfileFull\n  }\n}\nfragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"operationId": "c39064986698e2d5e7c0272cb2c034deadc4c9c7fa231587b329aed57d97f281"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "ExploreCommunity",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				},
				{
					"name": "featuredIfEmptyQuery",
					"type": "Boolean"
				}
			],
			"source": "query ExploreCommunity($query: String, $sort: String, $page: Int, $after: String, $featuredIfEmptyQuery: Boolean) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after, featuredIfEmptyQuery: $featuredIfEmptyQuery) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "alphaComunityPrefixSearch",
					"type": "OrganizationsConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						},
						{
							"name": "featuredIfEmptyQuery",
							"value": {
								"kind": "Variable",
								"variableName": "featuredIfEmptyQuery"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[OrganizationsEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "Organization!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommunitySearch"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"CommunitySearch"
			],
			"sourceWithFragments": "query ExploreCommunity($query: String, $sort: String, $page: Int, $after: String, $featuredIfEmptyQuery: Boolean) {\n  items: alphaComunityPrefixSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after, featuredIfEmptyQuery: $featuredIfEmptyQuery) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...CommunitySearch\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"operationId": "68a62dc9c7e67c53f3351342780278b9d44ef8b6a05ed63b0bf2b372544d0a87"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationChangeMemberRole",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "memberId",
					"type": "ID!"
				},
				{
					"name": "newRole",
					"type": "OrganizationMemberRole!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationChangeMemberRole",
					"fieldName": "alphaOrganizationChangeMemberRole",
					"type": "String!",
					"args": [
						{
							"name": "memberId",
							"value": {
								"kind": "Variable",
								"variableName": "memberId"
							},
							"type": "ID!"
						},
						{
							"name": "newRole",
							"value": {
								"kind": "Variable",
								"variableName": "newRole"
							},
							"type": "OrganizationMemberRole!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationChangeMemberRole($memberId: ID!, $newRole: OrganizationMemberRole!, $organizationId: ID!) {\n  alphaOrganizationChangeMemberRole(memberId: $memberId, newRole: $newRole, organizationId: $organizationId)\n}",
			"operationId": "2c1206cb6dc01189e2d17cf07f43f7d1f2ae165875317411aee7b237b523b91e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAddMember",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userIds",
					"type": "[ID!]"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  alphaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationMemberAdd",
					"fieldName": "alphaOrganizationMemberAdd",
					"type": "[OrganizationJoinedMember!]!",
					"args": [
						{
							"name": "userIds",
							"value": {
								"kind": "Variable",
								"variableName": "userIds"
							},
							"type": "[ID!]"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {\n  alphaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "af779a4ecf69e0f94a0c59c573742c5562691e86bded89201f1eb3af168bc883"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationPublicInvite",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "publicInvite",
					"fieldName": "alphaOrganizationInviteLink",
					"type": "Invite",
					"args": [
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query OrganizationPublicInvite($organizationId: ID) {\n  publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "695bfdf06fc8416883a48cb0750900636ec1d7983d400cf552c49f92bb24a95c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationCreatePublicInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "expirationDays",
					"type": "Int"
				},
				{
					"name": "organizationId",
					"type": "ID"
				}
			],
			"source": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"fields": [
				{
					"responseName": "alphaOrganizationRefreshInviteLink",
					"fieldName": "alphaOrganizationRefreshInviteLink",
					"type": "Invite!",
					"args": [
						{
							"name": "expirationDays",
							"value": {
								"kind": "Variable",
								"variableName": "expirationDays"
							},
							"type": "Int"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "ttl",
							"fieldName": "ttl",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {\n  alphaOrganizationRefreshInviteLink(expirationDays: $expirationDays, organizationId: $organizationId) {\n    __typename\n    id\n    key\n    ttl\n  }\n}",
			"operationId": "55955682d04e275bfd3ffb85722ec928dc2666314a474d371293caef099181b5"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "DeleteOrganization",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"fields": [
				{
					"responseName": "deleteOrganization",
					"fieldName": "deleteOrganization",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteOrganization($organizationId: ID!) {\n  deleteOrganization(id: $organizationId)\n}",
			"operationId": "1943b0cb999b7c1070e2d244152f6c5fe217795a985820661d39ebfa9f20a034"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "organizationId",
					"type": "ID!"
				}
			],
			"source": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "betaOrganizationMemberRemove",
					"fieldName": "betaOrganizationMemberRemove",
					"type": "Organization!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "organizationId",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {\n  betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {\n    __typename\n    id\n  }\n}",
			"operationId": "0e426a8697d8558f1a871019ee40e2f4bb39ee5d04f77ba429c4c1c5da7fb5f1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationActivateByInvite",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "inviteKey",
					"type": "String!"
				}
			],
			"source": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"fields": [
				{
					"responseName": "joinAppInvite",
					"fieldName": "joinAppInvite",
					"type": "ID!",
					"args": [
						{
							"name": "key",
							"value": {
								"kind": "Variable",
								"variableName": "inviteKey"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation OrganizationActivateByInvite($inviteKey: String!) {\n  joinAppInvite(key: $inviteKey)\n}",
			"operationId": "5bdf1b731e1732711ccda488d3416c909a68a1c5f11ae0384539fffd53277cce"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationAlterPublished",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "published",
					"type": "Boolean!"
				}
			],
			"source": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "alphaAlterPublished",
					"fieldName": "alphaAlterPublished",
					"type": "Organization!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "published",
							"value": {
								"kind": "Variable",
								"variableName": "published"
							},
							"type": "Boolean!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "mutation OrganizationAlterPublished($organizationId: ID!, $published: Boolean!) {\n  alphaAlterPublished(id: $organizationId, published: $published) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "fb154ae63c001bc89eaac0ec23ce1a46305ba658dba6e1f40701fa7c40a3a90f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Organization.ts",
			"operationName": "OrganizationByPrefix",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}",
			"fields": [
				{
					"responseName": "organizationByPrefix",
					"fieldName": "alphaOrganizationByPrefix",
					"type": "Organization",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationSearch"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"OrganizationSearch"
			],
			"sourceWithFragments": "query OrganizationByPrefix($query: String!) {\n  organizationByPrefix: alphaOrganizationByPrefix(query: $query) {\n    __typename\n    ...OrganizationSearch\n  }\n}\nfragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"operationId": "57ba6ecc0814aff32b011a46417e01cc0acfe5b8f6d47daa78221a3bab082c42"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "Permissions",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"fields": [
				{
					"responseName": "myPermissions",
					"fieldName": "myPermissions",
					"type": "Permissions!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "roles",
							"fieldName": "roles",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Permissions {\n  myPermissions {\n    __typename\n    roles\n  }\n}",
			"operationId": "a4645b2b569166586d434a382d16320ccfc9999f859128de91439c67f6cf1f76"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "DebugMails",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "type",
					"type": "DebugEmailType!"
				}
			],
			"source": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"fields": [
				{
					"responseName": "debugSendEmail",
					"fieldName": "debugSendEmail",
					"type": "Boolean",
					"args": [
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "DebugEmailType!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DebugMails($type: DebugEmailType!) {\n  debugSendEmail(type: $type)\n}",
			"operationId": "63da7e2686018eb1c9f88b0106afdb2a54567e75325c2c4fc898919820490618"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdmins",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}",
			"fields": [
				{
					"responseName": "superAdmins",
					"fieldName": "superAdmins",
					"type": "[SuperAdmin!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "SuperAdminRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAdmins {\n  superAdmins {\n    __typename\n    role\n    user {\n      __typename\n      ...UserShort\n    }\n    email\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "814924c31c83ee9ed5c3ea7b39f2d451dae468a2135dce9d2bb899c975f5f98f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccounts",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n    createdAt\n  }\n}",
			"fields": [
				{
					"responseName": "superAccounts",
					"fieldName": "superAccounts",
					"type": "[SuperAccount!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdAt",
							"fieldName": "createdAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query SuperAccounts {\n  superAccounts {\n    __typename\n    id\n    orgId\n    title\n    state\n    createdAt\n  }\n}",
			"operationId": "c5d380064d0fef943c0cf7a8a56679d11bc443eab8b5ef30e8072bde3dad33a3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccount",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "viaOrgId",
					"type": "Boolean"
				}
			],
			"source": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      id\n      name\n    }\n    published: alphaPublished\n  }\n}",
			"fields": [
				{
					"responseName": "superAccount",
					"fieldName": "superAccount",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "viaOrgId",
							"value": {
								"kind": "Variable",
								"variableName": "viaOrgId"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "features",
							"fieldName": "features",
							"type": "[FeatureFlag!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "key",
									"fieldName": "key",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "orgId",
							"fieldName": "orgId",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdAt",
							"fieldName": "createdAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "createdBy",
							"fieldName": "createdBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "published",
							"fieldName": "alphaPublished",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query SuperAccount($accountId: ID!, $viaOrgId: Boolean) {\n  superAccount(id: $accountId, viaOrgId: $viaOrgId) {\n    __typename\n    id\n    title\n    state\n    members {\n      __typename\n      ...UserShort\n    }\n    features {\n      __typename\n      id\n      key\n      title\n    }\n    orgId\n    createdAt\n    createdBy {\n      __typename\n      id\n      name\n    }\n    published: alphaPublished\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "fc56c00985b805ece8a4f40d8a76648d1a2a52830559804bd1e529c2983431c7"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountRename",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountRename",
					"fieldName": "superAccountRename",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountRename($accountId: ID!, $title: String!) {\n  superAccountRename(id: $accountId, title: $title) {\n    __typename\n    id\n    title\n  }\n}",
			"operationId": "35e0b4c1ca53345b71db4be33f09d9d7d01f937d5edb66e20427e369e4369422"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountActivate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountActivate",
					"fieldName": "superAccountActivate",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountActivate($accountId: ID!) {\n  superAccountActivate(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "0634260d10c11dd5297daeb03a14dbb6fc99de5b60f582afba1c852030eb30ec"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountSuspend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountSuspend",
					"fieldName": "superAccountSuspend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountSuspend($accountId: ID!) {\n  superAccountSuspend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "9731f7a74a97f83e2fda938181a4959263505df0da3600b3c9a403c1e67dcef1"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountPend",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountPend",
					"fieldName": "superAccountPend",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "state",
							"fieldName": "state",
							"type": "SuperAccountState!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountPend($accountId: ID!) {\n  superAccountPend(id: $accountId) {\n    __typename\n    id\n    state\n  }\n}",
			"operationId": "e94d623a074a655a29baed63b62a0de47aa4548bebca58827c0b284362ad89c4"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "title",
					"type": "String!"
				}
			],
			"source": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountAdd",
					"fieldName": "superAccountAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "title",
							"value": {
								"kind": "Variable",
								"variableName": "title"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAccountAdd($title: String!) {\n  superAccountAdd(title: $title) {\n    __typename\n    id\n  }\n}",
			"operationId": "8040bdd9914bcb22b2177e32642d811080abe3729fecae8aafec56efbf037a2f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberAdd",
					"fieldName": "superAccountMemberAdd",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberAdd($accountId: ID!, $userId: ID!) {\n  superAccountMemberAdd(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "33c57139675e6a4fc49bd4c5661c0329194874274454ade31d82ab0a6e1b694e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAccountMemberRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "accountId",
					"type": "ID!"
				},
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "superAccountMemberRemove",
					"fieldName": "superAccountMemberRemove",
					"type": "SuperAccount!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "accountId"
							},
							"type": "ID!"
						},
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "mutation SuperAccountMemberRemove($accountId: ID!, $userId: ID!) {\n  superAccountMemberRemove(id: $accountId, userId: $userId) {\n    __typename\n    id\n    members {\n      __typename\n      ...UserShort\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "41fceb78cc4bb54e32f720abb5231033cf70fdf83cdfa503c6bcf711d8a951e7"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminAdd",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "SuperAdminRole!"
				}
			],
			"source": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"fields": [
				{
					"responseName": "superAdminAdd",
					"fieldName": "superAdminAdd",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						},
						{
							"name": "role",
							"value": {
								"kind": "Variable",
								"variableName": "role"
							},
							"type": "SuperAdminRole!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminAdd($userId: ID!, $role: SuperAdminRole!) {\n  superAdminAdd(userId: $userId, role: $role)\n}",
			"operationId": "f440c733de0c8db6b034cc5c7c67b5832011435850a008172d5a015594d51e37"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "SuperAdminRemove",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"fields": [
				{
					"responseName": "superAdminRemove",
					"fieldName": "superAdminRemove",
					"type": "String!",
					"args": [
						{
							"name": "userId",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SuperAdminRemove($userId: ID!) {\n  superAdminRemove(userId: $userId)\n}",
			"operationId": "2d0cc3fb7ab84f3f2571981d691ccd467a8784d4e5d75a8aa7b9bb4d22b087c2"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Permissions.ts",
			"operationName": "DebugEventsWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "fromState",
					"type": "String"
				},
				{
					"name": "eventsCount",
					"type": "Int!"
				},
				{
					"name": "randomDelays",
					"type": "Boolean!"
				},
				{
					"name": "seed",
					"type": "String!"
				}
			],
			"source": "subscription DebugEventsWatch($fromState: String, $eventsCount: Int!, $randomDelays: Boolean!, $seed: String!) {\n  debugEvents(fromState: $fromState, eventsCount: $eventsCount, randomDelays: $randomDelays, seed: $seed) {\n    __typename\n    seq\n    key\n  }\n}",
			"fields": [
				{
					"responseName": "debugEvents",
					"fieldName": "debugEvents",
					"type": "DebugEvent!",
					"args": [
						{
							"name": "fromState",
							"value": {
								"kind": "Variable",
								"variableName": "fromState"
							},
							"type": "String"
						},
						{
							"name": "eventsCount",
							"value": {
								"kind": "Variable",
								"variableName": "eventsCount"
							},
							"type": "Int!"
						},
						{
							"name": "randomDelays",
							"value": {
								"kind": "Variable",
								"variableName": "randomDelays"
							},
							"type": "Boolean!"
						},
						{
							"name": "seed",
							"value": {
								"kind": "Variable",
								"variableName": "seed"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "seq",
							"fieldName": "seq",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "key",
							"fieldName": "key",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription DebugEventsWatch($fromState: String, $eventsCount: Int!, $randomDelays: Boolean!, $seed: String!) {\n  debugEvents(fromState: $fromState, eventsCount: $eventsCount, randomDelays: $randomDelays, seed: $seed) {\n    __typename\n    seq\n    key\n  }\n}",
			"operationId": "4b40c879c733210c70f614db916a9cbe30986fa96df2038022a4c847fcde173c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Report.ts",
			"operationName": "ReportContent",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "contentId",
					"type": "ID!"
				},
				{
					"name": "type",
					"type": "String!"
				},
				{
					"name": "message",
					"type": "String"
				}
			],
			"source": "mutation ReportContent($contentId: ID!, $type: String!, $message: String) {\n  reportContent(contentId: $contentId, type: $type, message: $message)\n}",
			"fields": [
				{
					"responseName": "reportContent",
					"fieldName": "reportContent",
					"type": "Boolean",
					"args": [
						{
							"name": "contentId",
							"value": {
								"kind": "Variable",
								"variableName": "contentId"
							},
							"type": "ID!"
						},
						{
							"name": "type",
							"value": {
								"kind": "Variable",
								"variableName": "type"
							},
							"type": "String!"
						},
						{
							"name": "message",
							"value": {
								"kind": "Variable",
								"variableName": "message"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ReportContent($contentId: ID!, $type: String!, $message: String) {\n  reportContent(contentId: $contentId, type: $type, message: $message)\n}",
			"operationId": "27e5c1eb1980db51d97f95e94b14157eebf49da1892b950e2ece65baa2430f9f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "Profile",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin\n    instagram\n    facebook\n    twitter\n    primaryOrganization {\n      __typename\n      id\n      name\n      membersCount\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "me",
					"type": "User",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "shortname",
							"fieldName": "shortname",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "profile",
					"fieldName": "myProfile",
					"type": "Profile",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "linkedin",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "instagram",
							"fieldName": "instagram",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "facebook",
							"fieldName": "facebook",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "twitter",
							"fieldName": "twitter",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganization",
							"fieldName": "primaryOrganization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Profile {\n  user: me {\n    __typename\n    id\n    shortname\n  }\n  profile: myProfile {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin\n    instagram\n    facebook\n    twitter\n    primaryOrganization {\n      __typename\n      id\n      name\n      membersCount\n    }\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"operationId": "e4b704afcac1c4fb6512e4ce4a50a707a82922e405d340ea9cfd31f6fc2ca785"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "ProfileInput!"
				},
				{
					"name": "uid",
					"type": "ID"
				}
			],
			"source": "mutation ProfileUpdate($input: ProfileInput!, $uid: ID) {\n  profileUpdate(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin\n    instagram\n    facebook\n    twitter\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "profileUpdate",
					"fieldName": "profileUpdate",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "ProfileInput!"
						},
						{
							"name": "uid",
							"value": {
								"kind": "Variable",
								"variableName": "uid"
							},
							"type": "ID"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "alphaRole",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "linkedin",
							"fieldName": "linkedin",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "instagram",
							"fieldName": "instagram",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "facebook",
							"fieldName": "facebook",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "twitter",
							"fieldName": "twitter",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganizationId",
							"fieldName": "alphaPrimaryOrganizationId",
							"type": "ID",
							"isConditional": false,
							"description": "Deprecated",
							"isDeprecated": false
						},
						{
							"responseName": "joinedAt",
							"fieldName": "alphaJoinedAt",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "invitedBy",
							"fieldName": "alphaInvitedBy",
							"type": "User",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileUpdate($input: ProfileInput!, $uid: ID) {\n  profileUpdate(input: $input, uid: $uid) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n    role: alphaRole\n    linkedin\n    instagram\n    facebook\n    twitter\n    primaryOrganizationId: alphaPrimaryOrganizationId\n    joinedAt: alphaJoinedAt\n    invitedBy: alphaInvitedBy {\n      __typename\n      id\n      name\n    }\n  }\n}",
			"operationId": "c5b91ca18496822806bfeb91d59037d43f4ec9b0802a5a8663b98cd351bc3692"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "ProfileCreate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "CreateProfileInput!"
				}
			],
			"source": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"fields": [
				{
					"responseName": "createProfile",
					"fieldName": "createProfile",
					"type": "Profile!",
					"args": [
						{
							"name": "input",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "CreateProfileInput!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastName",
							"fieldName": "lastName",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photoRef",
							"fieldName": "photoRef",
							"type": "ImageRef",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "uuid",
									"fieldName": "uuid",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "crop",
									"fieldName": "crop",
									"type": "ImageCrop",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "x",
											"fieldName": "x",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "y",
											"fieldName": "y",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "w",
											"fieldName": "w",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "h",
											"fieldName": "h",
											"type": "Int!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "email",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "phone",
							"fieldName": "phone",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "website",
							"fieldName": "website",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "about",
							"fieldName": "about",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "location",
							"fieldName": "location",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation ProfileCreate($input: CreateProfileInput!) {\n  createProfile(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    photoRef {\n      __typename\n      uuid\n      crop {\n        __typename\n        x\n        y\n        w\n        h\n      }\n    }\n    email\n    phone\n    website\n    about\n    location\n  }\n}",
			"operationId": "f19be472891264ad6a518c1bfbee153b51cfb434be1f780bdb7c2f8b3a51d70e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "Settings",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "settings",
					"fieldName": "settings",
					"type": "Settings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull",
				"PlatformNotificationSettingsFull"
			],
			"sourceWithFragments": "query Settings {\n  settings {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  excludeMutedChats\n  countUnreadChats\n  desktop {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n  mobile {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n}\nfragment PlatformNotificationSettingsFull on PlatformNotificationSettings {\n  __typename\n  direct {\n    __typename\n    showNotification\n    sound\n  }\n  secretChat {\n    __typename\n    showNotification\n    sound\n  }\n  organizationChat {\n    __typename\n    showNotification\n    sound\n  }\n  communityChat {\n    __typename\n    showNotification\n    sound\n  }\n  comments {\n    __typename\n    showNotification\n    sound\n  }\n  notificationPreview\n}",
			"operationId": "cb4f81357efece6647d1c78669a06aa984ce2960b8946a21c28b78b1849d6cd2"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Settings.ts",
			"operationName": "SettingsUpdate",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "input",
					"type": "UpdateSettingsInput"
				}
			],
			"source": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "updateSettings",
					"fieldName": "updateSettings",
					"type": "Settings!",
					"args": [
						{
							"name": "settings",
							"value": {
								"kind": "Variable",
								"variableName": "input"
							},
							"type": "UpdateSettingsInput"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"SettingsFull",
				"PlatformNotificationSettingsFull"
			],
			"sourceWithFragments": "mutation SettingsUpdate($input: UpdateSettingsInput) {\n  updateSettings(settings: $input) {\n    __typename\n    ...SettingsFull\n  }\n}\nfragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  excludeMutedChats\n  countUnreadChats\n  desktop {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n  mobile {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n}\nfragment PlatformNotificationSettingsFull on PlatformNotificationSettings {\n  __typename\n  direct {\n    __typename\n    showNotification\n    sound\n  }\n  secretChat {\n    __typename\n    showNotification\n    sound\n  }\n  organizationChat {\n    __typename\n    showNotification\n    sound\n  }\n  communityChat {\n    __typename\n    showNotification\n    sound\n  }\n  comments {\n    __typename\n    showNotification\n    sound\n  }\n  notificationPreview\n}",
			"operationId": "3b76d0ff9dcb09a76a1938953537d55b9ee33273f7795b705693f2bfde65fd53"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Shortname.ts",
			"operationName": "ResolveShortName",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      id\n    }\n    ... on Organization {\n      id\n    }\n    ... on FeedChannel {\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "item",
					"fieldName": "alphaResolveShortName",
					"type": "ShortNameDestination",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "FeedChannel",
							"possibleTypes": [
								"FeedChannel"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query ResolveShortName($shortname: String!) {\n  item: alphaResolveShortName(shortname: $shortname) {\n    __typename\n    ... on User {\n      id\n    }\n    ... on Organization {\n      id\n    }\n    ... on FeedChannel {\n      id\n    }\n  }\n}",
			"operationId": "d937d79ca1842e04f7733556f0889e660e47fe6832be0b125819b7a25af85eae"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Shortname.ts",
			"operationName": "SetOrgShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "organizationId",
					"type": "ID!"
				},
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetOrgShortName",
					"fieldName": "alphaSetOrgShortName",
					"type": "String",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "organizationId"
							},
							"type": "ID!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetOrgShortname($organizationId: ID!, $shortname: String!) {\n  alphaSetOrgShortName(id: $organizationId, shortname: $shortname)\n}",
			"operationId": "2ba01d87de67cde65ef91cbc9a49ca67c67beab9b555f4683f363399d3786c14"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Shortname.ts",
			"operationName": "SetUserShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetUserShortName",
					"fieldName": "alphaSetUserShortName",
					"type": "String",
					"args": [
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetUserShortname($shortname: String!) {\n  alphaSetUserShortName(shortname: $shortname)\n}",
			"operationId": "7f73862c2c0dbb13a01ff87bd3477d333a04ce8410a46a807d5f7af1b26dbab3"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Shortname.ts",
			"operationName": "SetFeedChannelShortname",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				},
				{
					"name": "shortname",
					"type": "String!"
				}
			],
			"source": "mutation SetFeedChannelShortname($id: ID!, $shortname: String!) {\n  alphaSetFeedChannelShortName(id: $id, shortname: $shortname)\n}",
			"fields": [
				{
					"responseName": "alphaSetFeedChannelShortName",
					"fieldName": "alphaSetFeedChannelShortName",
					"type": "String",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						},
						{
							"name": "shortname",
							"value": {
								"kind": "Variable",
								"variableName": "shortname"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SetFeedChannelShortname($id: ID!, $shortname: String!) {\n  alphaSetFeedChannelShortName(id: $id, shortname: $shortname)\n}",
			"operationId": "2c8af709b1566b75c13ed5864748db05c445913d806ba616aa1976d7f5f58fb2"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Stickers.ts",
			"operationName": "MyStickers",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MyStickers {\n  stickers: myStickers {\n    __typename\n    packs {\n      __typename\n      id\n      title\n      stickers {\n        __typename\n        ...StickerFragment\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "stickers",
					"fieldName": "myStickers",
					"type": "UserStickers!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "packs",
							"fieldName": "packs",
							"type": "[StickerPack!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "stickers",
									"fieldName": "stickers",
									"type": "[Sticker!]!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"StickerFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"StickerFragment"
			],
			"sourceWithFragments": "query MyStickers {\n  stickers: myStickers {\n    __typename\n    packs {\n      __typename\n      id\n      title\n      stickers {\n        __typename\n        ...StickerFragment\n      }\n    }\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}",
			"operationId": "8a6c4fb7eff40ee9f10b8a4e672a269b89d1536429fdcd394821921c8cd51f60"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Stickers.ts",
			"operationName": "StickerPack",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "query StickerPack($id: ID!) {\n  stickerPack(id: $id) {\n    __typename\n    ...StickerPackFragment\n  }\n}",
			"fields": [
				{
					"responseName": "stickerPack",
					"fieldName": "stickerPack",
					"type": "StickerPack",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"StickerPackFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"StickerPackFragment",
				"StickerFragment"
			],
			"sourceWithFragments": "query StickerPack($id: ID!) {\n  stickerPack(id: $id) {\n    __typename\n    ...StickerPackFragment\n  }\n}\nfragment StickerPackFragment on StickerPack {\n  __typename\n  id\n  title\n  stickers {\n    __typename\n    ...StickerFragment\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}",
			"operationId": "ff093811f5e68332f3bb84543e3917c690f6480e2cdda0799a855ef78568117e"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Stickers.ts",
			"operationName": "StickerPackAddToCollection",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation StickerPackAddToCollection($id: ID!) {\n  stickerPackAddToCollection: stickerPackAddToCollection(id: $id)\n}",
			"fields": [
				{
					"responseName": "stickerPackAddToCollection",
					"fieldName": "stickerPackAddToCollection",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation StickerPackAddToCollection($id: ID!) {\n  stickerPackAddToCollection: stickerPackAddToCollection(id: $id)\n}",
			"operationId": "88fdfeb4f610d327aec87eabfe255e29c34a116ba686f6acaba64c6f8df532ce"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Stickers.ts",
			"operationName": "SendSticker",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "chatId",
					"type": "ID!"
				},
				{
					"name": "stickerId",
					"type": "ID!"
				},
				{
					"name": "replyMessages",
					"type": "[ID!]"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation SendSticker($chatId: ID!, $stickerId: ID!, $replyMessages: [ID!], $repeatKey: String) {\n  sendSticker(chatId: $chatId, stickerId: $stickerId, replyMessages: $replyMessages, repeatKey: $repeatKey)\n}",
			"fields": [
				{
					"responseName": "sendSticker",
					"fieldName": "sendSticker",
					"type": "Boolean!",
					"args": [
						{
							"name": "chatId",
							"value": {
								"kind": "Variable",
								"variableName": "chatId"
							},
							"type": "ID!"
						},
						{
							"name": "stickerId",
							"value": {
								"kind": "Variable",
								"variableName": "stickerId"
							},
							"type": "ID!"
						},
						{
							"name": "replyMessages",
							"value": {
								"kind": "Variable",
								"variableName": "replyMessages"
							},
							"type": "[ID!]"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation SendSticker($chatId: ID!, $stickerId: ID!, $replyMessages: [ID!], $repeatKey: String) {\n  sendSticker(chatId: $chatId, stickerId: $stickerId, replyMessages: $replyMessages, repeatKey: $repeatKey)\n}",
			"operationId": "8764513296c24b9684405236fafcca9576614f1997dd5bcf1c8923141b86e444"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Stickers.ts",
			"operationName": "AddStickerComment",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "peerId",
					"type": "ID!"
				},
				{
					"name": "stickerId",
					"type": "ID!"
				},
				{
					"name": "replyComment",
					"type": "ID"
				},
				{
					"name": "repeatKey",
					"type": "String"
				}
			],
			"source": "mutation AddStickerComment($peerId: ID!, $stickerId: ID!, $replyComment: ID, $repeatKey: String) {\n  addStickerComment: betaAddStickerComment(peerId: $peerId, stickerId: $stickerId, replyComment: $replyComment, repeatKey: $repeatKey) {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "addStickerComment",
					"fieldName": "betaAddStickerComment",
					"type": "CommentEntry!",
					"args": [
						{
							"name": "peerId",
							"value": {
								"kind": "Variable",
								"variableName": "peerId"
							},
							"type": "ID!"
						},
						{
							"name": "stickerId",
							"value": {
								"kind": "Variable",
								"variableName": "stickerId"
							},
							"type": "ID!"
						},
						{
							"name": "replyComment",
							"value": {
								"kind": "Variable",
								"variableName": "replyComment"
							},
							"type": "ID"
						},
						{
							"name": "repeatKey",
							"value": {
								"kind": "Variable",
								"variableName": "repeatKey"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation AddStickerComment($peerId: ID!, $stickerId: ID!, $replyComment: ID, $repeatKey: String) {\n  addStickerComment: betaAddStickerComment(peerId: $peerId, stickerId: $stickerId, replyComment: $replyComment, repeatKey: $repeatKey) {\n    __typename\n    id\n  }\n}",
			"operationId": "7117025dfca9cfb6d48c6b17eb5c452a93b165f2ce12e39c40b6a1049d936a11"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Track.ts",
			"operationName": "PersistEvents",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "did",
					"type": "String!"
				},
				{
					"name": "events",
					"type": "[Event!]!"
				},
				{
					"name": "isProd",
					"type": "Boolean"
				}
			],
			"source": "mutation PersistEvents($did: String!, $events: [Event!]!, $isProd: Boolean) {\n  track(did: $did, events: $events, isProd: $isProd)\n}",
			"fields": [
				{
					"responseName": "track",
					"fieldName": "track",
					"type": "String!",
					"args": [
						{
							"name": "did",
							"value": {
								"kind": "Variable",
								"variableName": "did"
							},
							"type": "String!"
						},
						{
							"name": "events",
							"value": {
								"kind": "Variable",
								"variableName": "events"
							},
							"type": "[Event!]!"
						},
						{
							"name": "isProd",
							"value": {
								"kind": "Variable",
								"variableName": "isProd"
							},
							"type": "Boolean"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation PersistEvents($did: String!, $events: [Event!]!, $isProd: Boolean) {\n  track(did: $did, events: $events, isProd: $isProd)\n}",
			"operationId": "4af9560cbae94fccb6f4a63863f01018f0d5ee0376bf55f4815fc4c7dd07e813"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "Users",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String!"
				}
			],
			"source": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "users",
					"type": "[User!]!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String!"
						}
					],
					"isConditional": false,
					"description": "Deprecated",
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "subtitle",
							"fieldName": "email",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Users($query: String!) {\n  items: users(query: $query) {\n    __typename\n    id\n    title: name\n    subtitle: email\n  }\n}",
			"operationId": "67dbb2aa634cac328a9ae07a9182c3f2664eeba0eea0b7b1cc2419e23fdbff2f"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "User",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n    chatsWithBadge {\n      __typename\n      chat {\n        __typename\n        ...RoomShort\n      }\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chatsWithBadge",
							"fieldName": "chatsWithBadge",
							"type": "[UserChatWithBadge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "chat",
									"fieldName": "chat",
									"type": "Room!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"RoomShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "badge",
									"fieldName": "badge",
									"type": "UserBadge!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserBadge"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [
						"UserFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "conversation",
					"fieldName": "room",
					"type": "Room",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "settings",
									"fieldName": "settings",
									"type": "RoomUserNotificaionSettings!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "mute",
											"fieldName": "mute",
											"type": "Boolean",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserFull",
				"OrganizationShort",
				"RoomShort",
				"UserShort",
				"FullMessage",
				"UserBadge",
				"QuotedMessage",
				"SpanFragment",
				"UserForMention",
				"StickerFragment",
				"UserTiny"
			],
			"sourceWithFragments": "query User($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    ...UserFull\n    chatsWithBadge {\n      __typename\n      chat {\n        __typename\n        ...RoomShort\n      }\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n  }\n  conversation: room(id: $userId) {\n    __typename\n    ... on PrivateRoom {\n      id\n      settings {\n        __typename\n        id\n        mute\n      }\n    }\n  }\n}\nfragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}\nfragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}\nfragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}\nfragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}\nfragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}\nfragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}\nfragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}\nfragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"operationId": "00113c18a32acda993836b4d58a23d3e55f380dc09a2ffdb17257349df36169c"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "Online",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "userId",
					"type": "ID!"
				}
			],
			"source": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"fields": [
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "userId"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "online",
							"fieldName": "online",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "lastSeen",
							"fieldName": "lastSeen",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query Online($userId: ID!) {\n  user: user(id: $userId) {\n    __typename\n    id\n    online\n    lastSeen\n  }\n}",
			"operationId": "7686bc2494ba8abdf780a6454cc0bc2a92ff4c863d304d34f14af248518c9398"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "OnlineWatch",
			"operationType": "subscription",
			"rootType": "Subscription",
			"variables": [
				{
					"name": "users",
					"type": "[ID!]!"
				}
			],
			"source": "subscription OnlineWatch($users: [ID!]!) {\n  alphaSubscribeOnline(users: $users) {\n    __typename\n    user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    timeout\n  }\n}",
			"fields": [
				{
					"responseName": "alphaSubscribeOnline",
					"fieldName": "alphaSubscribeOnline",
					"type": "OnlineEvent!",
					"args": [
						{
							"name": "users",
							"value": {
								"kind": "Variable",
								"variableName": "users"
							},
							"type": "[ID!]!"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "online",
									"fieldName": "online",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "lastSeen",
									"fieldName": "lastSeen",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "timeout",
							"fieldName": "timeout",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "subscription OnlineWatch($users: [ID!]!) {\n  alphaSubscribeOnline(users: $users) {\n    __typename\n    user {\n      __typename\n      id\n      online\n      lastSeen\n    }\n    timeout\n  }\n}",
			"operationId": "5cca69439e0bdf825856ae3e9558248b8b03fdb1888656d6747840fd14d65566"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "ExplorePeople",
			"operationType": "query",
			"rootType": "Query",
			"variables": [
				{
					"name": "query",
					"type": "String"
				},
				{
					"name": "sort",
					"type": "String"
				},
				{
					"name": "page",
					"type": "Int"
				},
				{
					"name": "after",
					"type": "String"
				}
			],
			"source": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "items",
					"fieldName": "userSearch",
					"type": "UserConnection!",
					"args": [
						{
							"name": "query",
							"value": {
								"kind": "Variable",
								"variableName": "query"
							},
							"type": "String"
						},
						{
							"name": "sort",
							"value": {
								"kind": "Variable",
								"variableName": "sort"
							},
							"type": "String"
						},
						{
							"name": "page",
							"value": {
								"kind": "Variable",
								"variableName": "page"
							},
							"type": "Int"
						},
						{
							"name": "first",
							"value": 25,
							"type": "Int!"
						},
						{
							"name": "after",
							"value": {
								"kind": "Variable",
								"variableName": "after"
							},
							"type": "String"
						}
					],
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "edges",
							"fieldName": "edges",
							"type": "[UserEdge!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "node",
									"fieldName": "node",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "isYou",
											"fieldName": "isYou",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "cursor",
									"fieldName": "cursor",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pageInfo",
							"fieldName": "pageInfo",
							"type": "PageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "hasNextPage",
									"fieldName": "hasNextPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "hasPreviousPage",
									"fieldName": "hasPreviousPage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "itemsCount",
									"fieldName": "itemsCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "currentPage",
									"fieldName": "currentPage",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pagesCount",
									"fieldName": "pagesCount",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "openEnded",
									"fieldName": "openEnded",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [
				"UserShort",
				"OrganizationShort"
			],
			"sourceWithFragments": "query ExplorePeople($query: String, $sort: String, $page: Int, $after: String) {\n  items: userSearch(query: $query, sort: $sort, page: $page, first: 25, after: $after) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        ...UserShort\n        isYou\n      }\n      cursor\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      hasPreviousPage\n      itemsCount\n      currentPage\n      pagesCount\n      openEnded\n    }\n  }\n}\nfragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}\nfragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"operationId": "a2e8f24d971fcd52cc5605f9c4ccb5516fcc1dc08323e6d2b058ff85016b33f6"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "DeleteUser",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [
				{
					"name": "id",
					"type": "ID!"
				}
			],
			"source": "mutation DeleteUser($id: ID!) {\n  superDeleteUser(id: $id)\n}",
			"fields": [
				{
					"responseName": "superDeleteUser",
					"fieldName": "superDeleteUser",
					"type": "Boolean!",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							},
							"type": "ID!"
						}
					],
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation DeleteUser($id: ID!) {\n  superDeleteUser(id: $id)\n}",
			"operationId": "5befde6b40f2cea2d7f6d4ffb028561982b1d14c6ebc19a58e9a10cf503dec9d"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "BetaNextDiscoverReset",
			"operationType": "mutation",
			"rootType": "Mutation",
			"variables": [],
			"source": "mutation BetaNextDiscoverReset {\n  betaNextDiscoverReset\n}",
			"fields": [
				{
					"responseName": "betaNextDiscoverReset",
					"fieldName": "betaNextDiscoverReset",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "mutation BetaNextDiscoverReset {\n  betaNextDiscoverReset\n}",
			"operationId": "575872406fe60068c0dd9589248f1d91033db50dceb96a2c94d399030ed4cf0a"
		},
		{
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/User.ts",
			"operationName": "MySuccessfulInvitesCount",
			"operationType": "query",
			"rootType": "Query",
			"variables": [],
			"source": "query MySuccessfulInvitesCount {\n  mySuccessfulInvitesCount\n}",
			"fields": [
				{
					"responseName": "mySuccessfulInvitesCount",
					"fieldName": "mySuccessfulInvitesCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [],
			"fragmentsReferenced": [],
			"sourceWithFragments": "query MySuccessfulInvitesCount {\n  mySuccessfulInvitesCount\n}",
			"operationId": "583cc1b5768357b84ff68923641b2bbd3143ec997a3c21bf40347e1add422dbd"
		}
	],
	"fragments": [
		{
			"typeCondition": "AppChat",
			"possibleTypes": [
				"AppChat"
			],
			"fragmentName": "AppChat",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/AppChat.ts",
			"source": "fragment AppChat on AppChat {\n  __typename\n  chat {\n    __typename\n    ... on PrivateRoom {\n      id\n    }\n    ... on SharedRoom {\n      id\n    }\n  }\n  webhook\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "chat",
					"fieldName": "chat",
					"type": "Room!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "PrivateRoom",
							"possibleTypes": [
								"PrivateRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "webhook",
					"fieldName": "webhook",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "AppProfile",
			"possibleTypes": [
				"AppProfile"
			],
			"fragmentName": "AppFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/AppFull.ts",
			"source": "fragment AppFull on AppProfile {\n  __typename\n  id\n  name\n  shortname\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  about\n  token {\n    __typename\n    salt\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "token",
					"fieldName": "token",
					"type": "AppToken!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "salt",
							"fieldName": "salt",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "CommentEntry",
			"possibleTypes": [
				"CommentEntry"
			],
			"fragmentName": "CommentEntryFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Comment.ts",
			"source": "fragment CommentEntryFragment on CommentEntry {\n  __typename\n  id\n  deleted\n  comment: betaComment {\n    __typename\n    ...FullMessage\n    id\n  }\n  parentComment {\n    __typename\n    comment: betaComment {\n      __typename\n      id\n      message\n    }\n    id\n  }\n  childComments {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "deleted",
					"fieldName": "deleted",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "comment",
					"fieldName": "betaComment",
					"type": "ModernMessage!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [
						"FullMessage"
					],
					"inlineFragments": []
				},
				{
					"responseName": "parentComment",
					"fieldName": "parentComment",
					"type": "CommentEntry",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "betaComment",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"description": "Content",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "childComments",
					"fieldName": "childComments",
					"type": "[CommentEntry!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "CommunitySearch",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/CommunitySearch.ts",
			"source": "fragment CommunitySearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  featured: alphaFeatured\n  membersCount\n  betaPublicRooms {\n    __typename\n    id\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "betaPublicRooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Conference",
			"possibleTypes": [
				"Conference"
			],
			"fragmentName": "ConferenceFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/ConferenceFull.ts",
			"source": "fragment ConferenceFull on Conference {\n  __typename\n  id\n  startTime\n  peers {\n    __typename\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    connection {\n      __typename\n      state\n      sdp\n      ice\n    }\n  }\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "startTime",
					"fieldName": "startTime",
					"type": "Date",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "peers",
					"fieldName": "peers",
					"type": "[ConferencePeer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "connection",
							"fieldName": "connection",
							"type": "ConferencePeerConnection",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "state",
									"fieldName": "state",
									"type": "ConferencePeerConnectionState!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sdp",
									"fieldName": "sdp",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "ice",
									"fieldName": "ice",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "iceServers",
					"fieldName": "iceServers",
					"type": "[ICEServer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urls",
							"fieldName": "urls",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "credential",
							"fieldName": "credential",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Conference",
			"possibleTypes": [
				"Conference"
			],
			"fragmentName": "ConferenceShort",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/ConferenceFull.ts",
			"source": "fragment ConferenceShort on Conference {\n  __typename\n  id\n  startTime\n  iceServers {\n    __typename\n    urls\n    username\n    credential\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "startTime",
					"fieldName": "startTime",
					"type": "Date",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "iceServers",
					"fieldName": "iceServers",
					"type": "[ICEServer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "urls",
							"fieldName": "urls",
							"type": "[String!]!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "credential",
							"fieldName": "credential",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedChannel",
			"possibleTypes": [
				"FeedChannel"
			],
			"fragmentName": "FeedChannelFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/FeedChannelFull.ts",
			"source": "fragment FeedChannelFull on FeedChannel {\n  __typename\n  id\n  title\n  about\n  photo\n  subscribed\n  myRole\n  subscribersCount\n  shortname\n  isGlobal\n  socialImage\n  postsCount\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "title",
					"fieldName": "title",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "subscribed",
					"fieldName": "subscribed",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "myRole",
					"fieldName": "myRole",
					"type": "FeedChannelSubscriberRole!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "subscribersCount",
					"fieldName": "subscribersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isGlobal",
					"fieldName": "isGlobal",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "socialImage",
					"fieldName": "socialImage",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "postsCount",
					"fieldName": "postsCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedPostAuthor",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "FeedPostAuthorFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/FeedItemFull.ts",
			"source": "fragment FeedPostAuthorFragment on FeedPostAuthor {\n  __typename\n  ... on User {\n    ...UserShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [
				"UserShort"
			],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedPostSource",
			"possibleTypes": [
				"FeedChannel"
			],
			"fragmentName": "FeedPostSourceFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/FeedItemFull.ts",
			"source": "fragment FeedPostSourceFragment on FeedPostSource {\n  __typename\n  ... on FeedChannel {\n    ...FeedChannelFull\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [
				"FeedChannelFull"
			],
			"inlineFragments": []
		},
		{
			"typeCondition": "Slide",
			"possibleTypes": [
				"TextSlide"
			],
			"fragmentName": "SlideFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/FeedItemFull.ts",
			"source": "fragment SlideFragment on Slide {\n  __typename\n  ... on TextSlide {\n    id\n    text\n    spans {\n      __typename\n      ...SpanFragment\n    }\n    cover {\n      __typename\n      url\n      metadata {\n        __typename\n        name\n        mimeType\n        size\n        isImage\n        imageWidth\n        imageHeight\n        imageFormat\n      }\n    }\n    coverAlign\n    attachments {\n      __typename\n      ... on User {\n        ...UserShort\n      }\n      ... on SharedRoom {\n        id\n        kind\n        title\n        roomPhoto: photo\n        membersCount\n        membership\n        organization {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on Organization {\n        ...OrganizationShort\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "text",
					"fieldName": "text",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "spans",
					"fieldName": "spans",
					"type": "[MessageSpan!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SpanFragment"
					],
					"inlineFragments": []
				},
				{
					"responseName": "cover",
					"fieldName": "cover",
					"type": "Image",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "url",
							"fieldName": "url",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "metadata",
							"fieldName": "metadata",
							"type": "FileMetadata",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mimeType",
									"fieldName": "mimeType",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "size",
									"fieldName": "size",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "isImage",
									"fieldName": "isImage",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "imageWidth",
									"fieldName": "imageWidth",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "imageHeight",
									"fieldName": "imageHeight",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "imageFormat",
									"fieldName": "imageFormat",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "coverAlign",
					"fieldName": "coverAlign",
					"type": "SlideCoverAlign",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "attachments",
					"fieldName": "attachments",
					"type": "[SlideAttachment!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "User",
							"possibleTypes": [
								"User"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							]
						},
						{
							"typeCondition": "SharedRoom",
							"possibleTypes": [
								"SharedRoom"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "kind",
									"fieldName": "kind",
									"type": "SharedRoomKind!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "roomPhoto",
									"fieldName": "photo",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membersCount",
									"fieldName": "membersCount",
									"type": "Int",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "organization",
									"fieldName": "organization",
									"type": "Organization",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "Organization",
							"possibleTypes": [
								"Organization"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							]
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "FeedItem",
			"possibleTypes": [
				"FeedPost"
			],
			"fragmentName": "FeedItemFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/FeedItemFull.ts",
			"source": "fragment FeedItemFull on FeedItem {\n  __typename\n  ... on FeedPost {\n    id\n    date\n    author {\n      __typename\n      ...FeedPostAuthorFragment\n    }\n    source {\n      __typename\n      ...FeedPostSourceFragment\n    }\n    edited\n    canEdit\n    commentsCount\n    message\n    fallback\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    slides {\n      __typename\n      ...SlideFragment\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "author",
					"fieldName": "author",
					"type": "FeedPostAuthor!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedPostAuthorFragment"
					],
					"inlineFragments": []
				},
				{
					"responseName": "source",
					"fieldName": "source",
					"type": "FeedPostSource",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"FeedPostSourceFragment"
					],
					"inlineFragments": []
				},
				{
					"responseName": "edited",
					"fieldName": "edited",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "canEdit",
					"fieldName": "canEdit",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "commentsCount",
					"fieldName": "commentsCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "reactions",
					"fieldName": "reactions",
					"type": "[ModernMessageReaction!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "reaction",
							"fieldName": "reaction",
							"type": "MessageReactionType!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "slides",
					"fieldName": "slides",
					"type": "[Slide!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SlideFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "MatchmakingProfile",
			"possibleTypes": [
				"MatchmakingProfile"
			],
			"fragmentName": "MatchmakingProfileFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/MatchmakingFragments.ts",
			"source": "fragment MatchmakingProfileFragment on MatchmakingProfile {\n  __typename\n  chatCreated\n  user {\n    __typename\n    id\n    isYou\n    name\n    photo\n    primaryOrganization {\n      __typename\n      id\n      name\n    }\n  }\n  answers {\n    __typename\n    ... on TextMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      answer\n    }\n    ... on MultiselectMatchmakingAnswer {\n      question {\n        __typename\n        id\n        title\n        subtitle\n      }\n      tags\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "chatCreated",
					"fieldName": "chatCreated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "user",
					"fieldName": "user",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isYou",
							"fieldName": "isYou",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "primaryOrganization",
							"fieldName": "primaryOrganization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "answers",
					"fieldName": "answers",
					"type": "[MatchmakingAnswer!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "TextMatchmakingAnswer",
							"possibleTypes": [
								"TextMatchmakingAnswer"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "question",
									"fieldName": "question",
									"type": "TextMatchmakingQuestion!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subtitle",
											"fieldName": "subtitle",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "answer",
									"fieldName": "answer",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MultiselectMatchmakingAnswer",
							"possibleTypes": [
								"MultiselectMatchmakingAnswer"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "question",
									"fieldName": "question",
									"type": "MultiselectMatchmakingQuestion!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subtitle",
											"fieldName": "subtitle",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "tags",
									"fieldName": "tags",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "MatchmakingRoom",
			"possibleTypes": [
				"MatchmakingRoom"
			],
			"fragmentName": "MatchmakingRoomFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/MatchmakingFragments.ts",
			"source": "fragment MatchmakingRoomFragment on MatchmakingRoom {\n  __typename\n  enabled\n  questions {\n    __typename\n    ... on TextMatchmakingQuestion {\n      id\n      title\n      subtitle\n    }\n    ... on MultiselectMatchmakingQuestion {\n      id\n      title\n      subtitle\n      tags\n    }\n  }\n  myProfile {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n  profiles {\n    __typename\n    ...MatchmakingProfileFragment\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "enabled",
					"fieldName": "enabled",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "questions",
					"fieldName": "questions",
					"type": "[MatchmakingQuestion!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "TextMatchmakingQuestion",
							"possibleTypes": [
								"TextMatchmakingQuestion"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "subtitle",
									"fieldName": "subtitle",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "MultiselectMatchmakingQuestion",
							"possibleTypes": [
								"MultiselectMatchmakingQuestion"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "title",
									"fieldName": "title",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "subtitle",
									"fieldName": "subtitle",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "tags",
									"fieldName": "tags",
									"type": "[String!]!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "myProfile",
					"fieldName": "myProfile",
					"type": "MatchmakingProfile",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingProfileFragment"
					],
					"inlineFragments": []
				},
				{
					"responseName": "profiles",
					"fieldName": "profiles",
					"type": "[MatchmakingProfile!]",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"MatchmakingProfileFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "MessageSpan",
			"possibleTypes": [
				"MessageSpanAllMention",
				"MessageSpanBold",
				"MessageSpanCodeBlock",
				"MessageSpanDate",
				"MessageSpanInlineCode",
				"MessageSpanInsane",
				"MessageSpanIrony",
				"MessageSpanItalic",
				"MessageSpanLink",
				"MessageSpanLoud",
				"MessageSpanMultiUserMention",
				"MessageSpanRoomMention",
				"MessageSpanRotating",
				"MessageSpanUserMention"
			],
			"fragmentName": "SpanFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment SpanFragment on MessageSpan {\n  __typename\n  offset\n  length\n  ... on MessageSpanUserMention {\n    user {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanMultiUserMention {\n    users {\n      __typename\n      ...UserForMention\n    }\n  }\n  ... on MessageSpanRoomMention {\n    room {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n      }\n    }\n  }\n  ... on MessageSpanLink {\n    url\n  }\n  ... on MessageSpanDate {\n    date\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "offset",
					"fieldName": "offset",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "length",
					"fieldName": "length",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "MessageSpanUserMention",
					"possibleTypes": [
						"MessageSpanUserMention"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserForMention"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "MessageSpanMultiUserMention",
					"possibleTypes": [
						"MessageSpanMultiUserMention"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "users",
							"fieldName": "users",
							"type": "[User!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserForMention"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "MessageSpanRoomMention",
					"possibleTypes": [
						"MessageSpanRoomMention"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "room",
							"fieldName": "room",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "PrivateRoom",
									"possibleTypes": [
										"PrivateRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "SharedRoom",
									"possibleTypes": [
										"SharedRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "MessageSpanLink",
					"possibleTypes": [
						"MessageSpanLink"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "url",
							"fieldName": "url",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "MessageSpanDate",
					"possibleTypes": [
						"MessageSpanDate"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "offset",
							"fieldName": "offset",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "length",
							"fieldName": "length",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage",
				"StickerMessage"
			],
			"fragmentName": "DaialogListMessage",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment DaialogListMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    id\n    name\n    firstName\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "firstName",
							"fieldName": "firstName",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "firstName",
									"fieldName": "firstName",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage",
				"StickerMessage"
			],
			"fragmentName": "TinyMessage",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment TinyMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserTiny\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  ... on GeneralMessage {\n    id\n    isMentioned\n    commentsCount\n    attachments {\n      __typename\n      id\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          isImage\n          imageFormat\n        }\n        filePreview\n      }\n    }\n    quotedMessages {\n      __typename\n      id\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserTiny"
					],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserTiny"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isMentioned",
							"fieldName": "isMentioned",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage",
				"StickerMessage"
			],
			"fragmentName": "QuotedMessage",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment QuotedMessage on ModernMessage {\n  __typename\n  id\n  date\n  message\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on GeneralMessage {\n    id\n    commentsCount\n    edited\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        fallback\n      }\n    }\n  }\n  ... on StickerMessage {\n    id\n    date\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ... on ImageSticker {\n        id\n        pack {\n          __typename\n          ... on StickerPack {\n            id\n            title\n          }\n        }\n        image {\n          __typename\n          ... on ImageRef {\n            uuid\n          }\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "source",
					"fieldName": "source",
					"type": "MessageSource",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "MessageSourceChat",
							"possibleTypes": [
								"MessageSourceChat"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "chat",
									"fieldName": "chat",
									"type": "Room!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "PrivateRoom",
											"possibleTypes": [
												"PrivateRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "SharedRoom",
											"possibleTypes": [
												"SharedRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "spans",
					"fieldName": "spans",
					"type": "[MessageSpan!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SpanFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"SpanFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "edited",
							"fieldName": "edited",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "mimeType",
													"fieldName": "mimeType",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "size",
													"fieldName": "size",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageWidth",
													"fieldName": "imageWidth",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageHeight",
													"fieldName": "imageHeight",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageRichAttachment",
									"possibleTypes": [
										"MessageRichAttachment"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subTitle",
											"fieldName": "subTitle",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLink",
											"fieldName": "titleLink",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLinkHostname",
											"fieldName": "titleLinkHostname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "text",
											"fieldName": "text",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "icon",
											"fieldName": "icon",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "image",
											"fieldName": "image",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "imageFallback",
											"fieldName": "imageFallback",
											"type": "ImageFallback",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "photo",
													"fieldName": "photo",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "text",
													"fieldName": "text",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "StickerMessage",
					"possibleTypes": [
						"StickerMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort",
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge",
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"SpanFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "reactions",
							"fieldName": "reactions",
							"type": "[ModernMessageReaction!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "reaction",
									"fieldName": "reaction",
									"type": "MessageReactionType!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "sticker",
							"fieldName": "sticker",
							"type": "Sticker!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "pack",
									"fieldName": "pack",
									"type": "StickerPack!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "ImageRef!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "uuid",
											"fieldName": "uuid",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "ModernMessage",
			"possibleTypes": [
				"GeneralMessage",
				"ServiceMessage",
				"StickerMessage"
			],
			"fragmentName": "FullMessage",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/Message.ts",
			"source": "fragment FullMessage on ModernMessage {\n  __typename\n  id\n  date\n  sender {\n    __typename\n    ...UserShort\n  }\n  senderBadge {\n    __typename\n    ...UserBadge\n  }\n  message\n  fallback\n  source {\n    __typename\n    ... on MessageSourceChat {\n      chat {\n        __typename\n        ... on PrivateRoom {\n          id\n        }\n        ... on SharedRoom {\n          id\n        }\n      }\n    }\n  }\n  ... on GeneralMessage {\n    id\n    edited\n    commentsCount\n    attachments {\n      __typename\n      fallback\n      ... on MessageAttachmentFile {\n        id\n        fileId\n        fileMetadata {\n          __typename\n          name\n          mimeType\n          size\n          isImage\n          imageWidth\n          imageHeight\n          imageFormat\n        }\n        filePreview\n      }\n      ... on MessageRichAttachment {\n        id\n        title\n        subTitle\n        titleLink\n        titleLinkHostname\n        text\n        icon {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        image {\n          __typename\n          url\n          metadata {\n            __typename\n            name\n            mimeType\n            size\n            isImage\n            imageWidth\n            imageHeight\n            imageFormat\n          }\n        }\n        imageFallback {\n          __typename\n          photo\n          text\n        }\n        keyboard {\n          __typename\n          buttons {\n            __typename\n            id\n            title\n            style\n            url\n          }\n        }\n        fallback\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n  }\n  spans {\n    __typename\n    ...SpanFragment\n  }\n  ... on StickerMessage {\n    id\n    date\n    commentsCount\n    sender {\n      __typename\n      ...UserShort\n    }\n    senderBadge {\n      __typename\n      ...UserBadge\n    }\n    source {\n      __typename\n      ... on MessageSourceChat {\n        chat {\n          __typename\n          ... on PrivateRoom {\n            id\n          }\n          ... on SharedRoom {\n            id\n          }\n        }\n      }\n    }\n    quotedMessages {\n      __typename\n      ...QuotedMessage\n    }\n    reactions {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n      reaction\n    }\n    sticker {\n      __typename\n      ...StickerFragment\n    }\n  }\n  ... on ServiceMessage {\n    id\n    serviceMetadata {\n      __typename\n      ... on InviteServiceMetadata {\n        users {\n          __typename\n          ...UserTiny\n        }\n        invitedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on KickServiceMetadata {\n        user {\n          __typename\n          ...UserTiny\n        }\n        kickedBy {\n          __typename\n          ...UserTiny\n        }\n      }\n      ... on TitleChangeServiceMetadata {\n        title\n      }\n      ... on PhotoChangeServiceMetadata {\n        photo\n      }\n      ... on PostRespondServiceMetadata {\n        respondType\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"description": "State",
					"isDeprecated": false
				},
				{
					"responseName": "date",
					"fieldName": "date",
					"type": "Date!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "sender",
					"fieldName": "sender",
					"type": "User!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserShort"
					],
					"inlineFragments": []
				},
				{
					"responseName": "senderBadge",
					"fieldName": "senderBadge",
					"type": "UserBadge",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"UserBadge"
					],
					"inlineFragments": []
				},
				{
					"responseName": "message",
					"fieldName": "message",
					"type": "String",
					"isConditional": false,
					"description": "Content",
					"isDeprecated": false
				},
				{
					"responseName": "fallback",
					"fieldName": "fallback",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "source",
					"fieldName": "source",
					"type": "MessageSource",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "MessageSourceChat",
							"possibleTypes": [
								"MessageSourceChat"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "chat",
									"fieldName": "chat",
									"type": "Room!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": [
										{
											"typeCondition": "PrivateRoom",
											"possibleTypes": [
												"PrivateRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										},
										{
											"typeCondition": "SharedRoom",
											"possibleTypes": [
												"SharedRoom"
											],
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": []
										}
									]
								}
							],
							"fragmentSpreads": []
						}
					]
				},
				{
					"responseName": "spans",
					"fieldName": "spans",
					"type": "[MessageSpan!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"SpanFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "GeneralMessage",
					"possibleTypes": [
						"GeneralMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "edited",
							"fieldName": "edited",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "attachments",
							"fieldName": "attachments",
							"type": "[ModernMessageAttachment!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "fallback",
									"fieldName": "fallback",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageAttachmentFile",
									"possibleTypes": [
										"MessageAttachmentFile"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileId",
											"fieldName": "fileId",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "fileMetadata",
											"fieldName": "fileMetadata",
											"type": "FileMetadata!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "mimeType",
													"fieldName": "mimeType",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "size",
													"fieldName": "size",
													"type": "Int!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "isImage",
													"fieldName": "isImage",
													"type": "Boolean!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageWidth",
													"fieldName": "imageWidth",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageHeight",
													"fieldName": "imageHeight",
													"type": "Int",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "imageFormat",
													"fieldName": "imageFormat",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "filePreview",
											"fieldName": "filePreview",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "MessageRichAttachment",
									"possibleTypes": [
										"MessageRichAttachment"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "fallback",
											"fieldName": "fallback",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subTitle",
											"fieldName": "subTitle",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLink",
											"fieldName": "titleLink",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "titleLinkHostname",
											"fieldName": "titleLinkHostname",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "text",
											"fieldName": "text",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "icon",
											"fieldName": "icon",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "image",
											"fieldName": "image",
											"type": "Image",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "url",
													"fieldName": "url",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "metadata",
													"fieldName": "metadata",
													"type": "FileMetadata",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "name",
															"fieldName": "name",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "mimeType",
															"fieldName": "mimeType",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "size",
															"fieldName": "size",
															"type": "Int!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "isImage",
															"fieldName": "isImage",
															"type": "Boolean!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageWidth",
															"fieldName": "imageWidth",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageHeight",
															"fieldName": "imageHeight",
															"type": "Int",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "imageFormat",
															"fieldName": "imageFormat",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "imageFallback",
											"fieldName": "imageFallback",
											"type": "ImageFallback",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "photo",
													"fieldName": "photo",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "text",
													"fieldName": "text",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										},
										{
											"responseName": "keyboard",
											"fieldName": "keyboard",
											"type": "MessageKeyboard",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "buttons",
													"fieldName": "buttons",
													"type": "[[ModernMessageButton!]]!",
													"isConditional": false,
													"isDeprecated": false,
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "title",
															"fieldName": "title",
															"type": "String!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "style",
															"fieldName": "style",
															"type": "ModernMessageButtonStyle!",
															"isConditional": false,
															"isDeprecated": false
														},
														{
															"responseName": "url",
															"fieldName": "url",
															"type": "String",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": [],
													"inlineFragments": []
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"QuotedMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "reactions",
							"fieldName": "reactions",
							"type": "[ModernMessageReaction!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "reaction",
									"fieldName": "reaction",
									"type": "MessageReactionType!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"SpanFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "StickerMessage",
					"possibleTypes": [
						"StickerMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort",
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge",
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"SpanFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "commentsCount",
							"fieldName": "commentsCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "quotedMessages",
							"fieldName": "quotedMessages",
							"type": "[ModernMessage!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"QuotedMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "reactions",
							"fieldName": "reactions",
							"type": "[ModernMessageReaction!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "reaction",
									"fieldName": "reaction",
									"type": "MessageReactionType!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "sticker",
							"fieldName": "sticker",
							"type": "Sticker!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"StickerFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ServiceMessage",
					"possibleTypes": [
						"ServiceMessage"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"description": "State",
							"isDeprecated": false
						},
						{
							"responseName": "date",
							"fieldName": "date",
							"type": "Date!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sender",
							"fieldName": "sender",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "senderBadge",
							"fieldName": "senderBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "String",
							"isConditional": false,
							"description": "Content",
							"isDeprecated": false
						},
						{
							"responseName": "fallback",
							"fieldName": "fallback",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "source",
							"fieldName": "source",
							"type": "MessageSource",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "MessageSourceChat",
									"possibleTypes": [
										"MessageSourceChat"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "chat",
											"fieldName": "chat",
											"type": "Room!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "PrivateRoom",
													"possibleTypes": [
														"PrivateRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "SharedRoom",
													"possibleTypes": [
														"SharedRoom"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "id",
															"fieldName": "id",
															"type": "ID!",
															"isConditional": false,
															"isDeprecated": false
														}
													],
													"fragmentSpreads": []
												}
											]
										}
									],
									"fragmentSpreads": []
								}
							]
						},
						{
							"responseName": "spans",
							"fieldName": "spans",
							"type": "[MessageSpan!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"SpanFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "serviceMetadata",
							"fieldName": "serviceMetadata",
							"type": "ServiceMetadata",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "InviteServiceMetadata",
									"possibleTypes": [
										"InviteServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "users",
											"fieldName": "users",
											"type": "[User!]",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "invitedBy",
											"fieldName": "invitedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "KickServiceMetadata",
									"possibleTypes": [
										"KickServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										},
										{
											"responseName": "kickedBy",
											"fieldName": "kickedBy",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [
												"UserTiny"
											],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "TitleChangeServiceMetadata",
									"possibleTypes": [
										"TitleChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PhotoChangeServiceMetadata",
									"possibleTypes": [
										"PhotoChangeServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "PostRespondServiceMetadata",
									"possibleTypes": [
										"PostRespondServiceMetadata"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "respondType",
											"fieldName": "respondType",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationFull.ts",
			"source": "fragment OrganizationFull on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  membersCount\n  members: alphaOrganizationMembers {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isPrivate",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "instagram",
					"fieldName": "instagram",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "requests",
					"fieldName": "alphaOrganizationMemberRequests",
					"type": "[OrganizationRequestedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "rooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationMedium",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationMedium.ts",
			"source": "fragment OrganizationMedium on Organization {\n  __typename\n  id\n  name\n  photo\n  isMine\n  membersCount\n  shortname\n  about\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  isCommunity: alphaIsCommunity\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "OrganizationProfile",
			"possibleTypes": [
				"OrganizationProfile"
			],
			"fragmentName": "OrganizationProfileFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationProfileFull.ts",
			"source": "fragment OrganizationProfileFull on OrganizationProfile {\n  __typename\n  id\n  name\n  photoRef {\n    __typename\n    uuid\n    crop {\n      __typename\n      x\n      y\n      w\n      h\n    }\n  }\n  website\n  websiteTitle\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  shortname\n  private: alphaIsPrivate\n  featured: alphaFeatured\n  published: alphaPublished\n  editorial: alphaEditorial\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photoRef",
					"fieldName": "photoRef",
					"type": "ImageRef",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "crop",
							"fieldName": "crop",
							"type": "ImageCrop",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "x",
									"fieldName": "x",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "y",
									"fieldName": "y",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "w",
									"fieldName": "w",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "h",
									"fieldName": "h",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "websiteTitle",
					"fieldName": "websiteTitle",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "instagram",
					"fieldName": "instagram",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "private",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "published",
					"fieldName": "alphaPublished",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "editorial",
					"fieldName": "alphaEditorial",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationSearch",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationSearch.ts",
			"source": "fragment OrganizationSearch on Organization {\n  __typename\n  id\n  superAccountId\n  name\n  photo\n  isMine\n  about\n  status\n  membersCount\n  featured: alphaFeatured\n  members: alphaOrganizationMembers {\n    __typename\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "status",
					"fieldName": "status",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "members",
					"fieldName": "alphaOrganizationMembers",
					"type": "[OrganizationJoinedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationShort",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationShort.ts",
			"source": "fragment OrganizationShort on Organization {\n  __typename\n  id\n  name\n  photo\n  shortname\n  about\n  isCommunity: alphaIsCommunity\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Organization",
			"possibleTypes": [
				"Organization"
			],
			"fragmentName": "OrganizationWithoutMembersFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/OrganizationWithoutMembersFragment.ts",
			"source": "fragment OrganizationWithoutMembersFragment on Organization {\n  __typename\n  id\n  superAccountId\n  isMine\n  isPrivate: alphaIsPrivate\n  isOwner: betaIsOwner\n  isAdmin: betaIsAdmin\n  featured: alphaFeatured\n  isCommunity: alphaIsCommunity\n  name\n  photo\n  shortname\n  website\n  about\n  twitter\n  facebook\n  linkedin\n  instagram\n  membersCount\n  requests: alphaOrganizationMemberRequests {\n    __typename\n    role\n    user {\n      __typename\n      ...UserFull\n    }\n  }\n  rooms: betaPublicRooms {\n    __typename\n    ...RoomShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "superAccountId",
					"fieldName": "superAccountId",
					"type": "ID!",
					"isConditional": false,
					"description": "# Refactor?",
					"isDeprecated": false
				},
				{
					"responseName": "isMine",
					"fieldName": "isMine",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isPrivate",
					"fieldName": "alphaIsPrivate",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isOwner",
					"fieldName": "betaIsOwner",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAdmin",
					"fieldName": "betaIsAdmin",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "featured",
					"fieldName": "alphaFeatured",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isCommunity",
					"fieldName": "alphaIsCommunity",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "instagram",
					"fieldName": "instagram",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "membersCount",
					"fieldName": "membersCount",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "requests",
					"fieldName": "alphaOrganizationMemberRequests",
					"type": "[OrganizationRequestedMember!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "OrganizationMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "rooms",
					"fieldName": "betaPublicRooms",
					"type": "[SharedRoom!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"RoomShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/RoomFull.ts",
			"source": "fragment RoomFull on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    members {\n      __typename\n      role\n      membership\n      user {\n        __typename\n        ...UserShort\n      }\n      canKick\n      badge {\n        __typename\n        ...UserBadge\n      }\n    }\n    requests {\n      __typename\n      user {\n        __typename\n        ...UserShort\n      }\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "socialImage",
							"fieldName": "socialImage",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "description",
							"fieldName": "description",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationMedium"
							],
							"inlineFragments": []
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featuredMembersCount",
							"fieldName": "featuredMembersCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "members",
							"fieldName": "members",
							"type": "[RoomMember!]!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "role",
									"fieldName": "role",
									"type": "RoomMemberRole!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "membership",
									"fieldName": "membership",
									"type": "SharedRoomMembershipStatus!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								},
								{
									"responseName": "canKick",
									"fieldName": "canKick",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "badge",
									"fieldName": "badge",
									"type": "UserBadge",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserBadge"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "requests",
							"fieldName": "requests",
							"type": "[RoomMember!]",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "user",
									"fieldName": "user",
									"type": "User!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"UserShort"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "welcomeMessage",
							"fieldName": "welcomeMessage",
							"type": "WelcomeMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isOn",
									"fieldName": "isOn",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "matchmaking",
							"fieldName": "matchmaking",
							"type": "MatchmakingRoom",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"MatchmakingRoomFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomFullWithoutMembers",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/RoomFull.ts",
			"source": "fragment RoomFullWithoutMembers on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    socialImage\n    description\n    organization {\n      __typename\n      ...OrganizationMedium\n    }\n    membership\n    role\n    membersCount\n    featuredMembersCount\n    settings {\n      __typename\n      id\n      mute\n    }\n    matchmaking {\n      __typename\n      ...MatchmakingRoomFragment\n    }\n    canEdit\n    canSendMessage\n    welcomeMessage {\n      __typename\n      isOn\n      sender {\n        __typename\n        id\n        name\n      }\n      message\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "socialImage",
							"fieldName": "socialImage",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "description",
							"fieldName": "description",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationMedium"
							],
							"inlineFragments": []
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "featuredMembersCount",
							"fieldName": "featuredMembersCount",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "matchmaking",
							"fieldName": "matchmaking",
							"type": "MatchmakingRoom",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"MatchmakingRoomFragment"
							],
							"inlineFragments": []
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "welcomeMessage",
							"fieldName": "welcomeMessage",
							"type": "WelcomeMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "isOn",
									"fieldName": "isOn",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "sender",
									"fieldName": "sender",
									"type": "User",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "message",
									"fieldName": "message",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomNano",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/RoomNano.ts",
			"source": "fragment RoomNano on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      id\n      name\n      photo\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    settings {\n      __typename\n      id\n      mute\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "photo",
									"fieldName": "photo",
									"type": "String",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Room",
			"possibleTypes": [
				"PrivateRoom",
				"SharedRoom"
			],
			"fragmentName": "RoomShort",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/RoomShort.ts",
			"source": "fragment RoomShort on Room {\n  __typename\n  ... on PrivateRoom {\n    id\n    user {\n      __typename\n      ...UserShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n  ... on SharedRoom {\n    id\n    kind\n    isChannel\n    title\n    photo\n    membership\n    role\n    canEdit\n    canSendMessage\n    membersCount\n    pinnedMessage {\n      __typename\n      ...FullMessage\n    }\n    organization {\n      __typename\n      ...OrganizationShort\n    }\n    settings {\n      __typename\n      id\n      mute\n    }\n    myBadge {\n      __typename\n      ...UserBadge\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "PrivateRoom",
					"possibleTypes": [
						"PrivateRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "user",
							"fieldName": "user",
							"type": "User!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "SharedRoom",
					"possibleTypes": [
						"SharedRoom"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "kind",
							"fieldName": "kind",
							"type": "SharedRoomKind!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "isChannel",
							"fieldName": "isChannel",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "photo",
							"fieldName": "photo",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membership",
							"fieldName": "membership",
							"type": "SharedRoomMembershipStatus!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "role",
							"fieldName": "role",
							"type": "RoomMemberRole!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canEdit",
							"fieldName": "canEdit",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "canSendMessage",
							"fieldName": "canSendMessage",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "membersCount",
							"fieldName": "membersCount",
							"type": "Int",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "pinnedMessage",
							"fieldName": "pinnedMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "organization",
							"fieldName": "organization",
							"type": "Organization",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"OrganizationShort"
							],
							"inlineFragments": []
						},
						{
							"responseName": "settings",
							"fieldName": "settings",
							"type": "RoomUserNotificaionSettings!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "mute",
									"fieldName": "mute",
									"type": "Boolean",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "myBadge",
							"fieldName": "myBadge",
							"type": "UserBadge",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"UserBadge"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "SessionState",
			"possibleTypes": [
				"SessionState"
			],
			"fragmentName": "SessionStateFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/SessionStateFull.ts",
			"source": "fragment SessionStateFull on SessionState {\n  __typename\n  isLoggedIn\n  isProfileCreated\n  isAccountActivated\n  isAccountExists\n  isAccountPicked\n  isCompleted\n  isBlocked\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "isLoggedIn",
					"fieldName": "isLoggedIn",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isProfileCreated",
					"fieldName": "isProfileCreated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountActivated",
					"fieldName": "isAccountActivated",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountExists",
					"fieldName": "isAccountExists",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isAccountPicked",
					"fieldName": "isAccountPicked",
					"type": "Boolean!",
					"isConditional": false,
					"description": "deprecated",
					"isDeprecated": false
				},
				{
					"responseName": "isCompleted",
					"fieldName": "isCompleted",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBlocked",
					"fieldName": "isBlocked",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "PlatformNotificationSettings",
			"possibleTypes": [
				"PlatformNotificationSettings"
			],
			"fragmentName": "PlatformNotificationSettingsFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/SettingsFragment.ts",
			"source": "fragment PlatformNotificationSettingsFull on PlatformNotificationSettings {\n  __typename\n  direct {\n    __typename\n    showNotification\n    sound\n  }\n  secretChat {\n    __typename\n    showNotification\n    sound\n  }\n  organizationChat {\n    __typename\n    showNotification\n    sound\n  }\n  communityChat {\n    __typename\n    showNotification\n    sound\n  }\n  comments {\n    __typename\n    showNotification\n    sound\n  }\n  notificationPreview\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "direct",
					"fieldName": "direct",
					"type": "ChatTypeNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sound",
							"fieldName": "sound",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "secretChat",
					"fieldName": "secretChat",
					"type": "ChatTypeNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sound",
							"fieldName": "sound",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "organizationChat",
					"fieldName": "organizationChat",
					"type": "ChatTypeNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sound",
							"fieldName": "sound",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "communityChat",
					"fieldName": "communityChat",
					"type": "ChatTypeNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sound",
							"fieldName": "sound",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "comments",
					"fieldName": "comments",
					"type": "ChatTypeNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "sound",
							"fieldName": "sound",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "notificationPreview",
					"fieldName": "notificationPreview",
					"type": "NotificationPreview!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Settings",
			"possibleTypes": [
				"Settings"
			],
			"fragmentName": "SettingsFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/SettingsFragment.ts",
			"source": "fragment SettingsFull on Settings {\n  __typename\n  id\n  primaryEmail\n  emailFrequency\n  excludeMutedChats\n  countUnreadChats\n  desktop {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n  mobile {\n    __typename\n    ...PlatformNotificationSettingsFull\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryEmail",
					"fieldName": "primaryEmail",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "emailFrequency",
					"fieldName": "emailFrequency",
					"type": "EmailFrequency!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "excludeMutedChats",
					"fieldName": "excludeMutedChats",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "countUnreadChats",
					"fieldName": "countUnreadChats",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "desktop",
					"fieldName": "desktop",
					"type": "PlatformNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"PlatformNotificationSettingsFull"
					],
					"inlineFragments": []
				},
				{
					"responseName": "mobile",
					"fieldName": "mobile",
					"type": "PlatformNotificationSettings!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"PlatformNotificationSettingsFull"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "Sticker",
			"possibleTypes": [
				"ImageSticker"
			],
			"fragmentName": "StickerFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/StickerFragment.ts",
			"source": "fragment StickerFragment on Sticker {\n  __typename\n  ... on ImageSticker {\n    id\n    pack {\n      __typename\n      id\n      title\n    }\n    image {\n      __typename\n      uuid\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "pack",
					"fieldName": "pack",
					"type": "StickerPack!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "title",
							"fieldName": "title",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				},
				{
					"responseName": "image",
					"fieldName": "image",
					"type": "ImageRef!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "uuid",
							"fieldName": "uuid",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "StickerPack",
			"possibleTypes": [
				"StickerPack"
			],
			"fragmentName": "StickerPackFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/StickerFragment.ts",
			"source": "fragment StickerPackFragment on StickerPack {\n  __typename\n  id\n  title\n  stickers {\n    __typename\n    ...StickerFragment\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "title",
					"fieldName": "title",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "stickers",
					"fieldName": "stickers",
					"type": "[Sticker!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"StickerFragment"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "UserBadge",
			"possibleTypes": [
				"UserBadge"
			],
			"fragmentName": "UserBadge",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/UserBadge.ts",
			"source": "fragment UserBadge on UserBadge {\n  __typename\n  id\n  name\n  verified\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "verified",
					"fieldName": "verified",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserForMention",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/UserForMention.ts",
			"source": "fragment UserForMention on User {\n  __typename\n  isYou\n  id\n  name\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    id\n    name\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserFull",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/UserFull.ts",
			"source": "fragment UserFull on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  phone\n  email\n  website\n  about\n  location\n  isBot\n  isYou\n  online\n  lastSeen\n  linkedin\n  instagram\n  twitter\n  facebook\n  shortname\n  audienceSize\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "phone",
					"fieldName": "phone",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "website",
					"fieldName": "website",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "about",
					"fieldName": "about",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "location",
					"fieldName": "location",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "linkedin",
					"fieldName": "linkedin",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "instagram",
					"fieldName": "instagram",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "twitter",
					"fieldName": "twitter",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "facebook",
					"fieldName": "facebook",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "audienceSize",
					"fieldName": "audienceSize",
					"type": "Int!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserShort",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/UserShort.ts",
			"source": "fragment UserShort on User {\n  __typename\n  id\n  name\n  firstName\n  lastName\n  photo\n  email\n  online\n  lastSeen\n  isYou\n  isBot\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "email",
					"fieldName": "email",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "online",
					"fieldName": "online",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastSeen",
					"fieldName": "lastSeen",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isBot",
					"fieldName": "isBot",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "User",
			"possibleTypes": [
				"User"
			],
			"fragmentName": "UserTiny",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/fragments/UserTiny.ts",
			"source": "fragment UserTiny on User {\n  __typename\n  id\n  isYou\n  name\n  firstName\n  lastName\n  photo\n  shortname\n  primaryOrganization {\n    __typename\n    ...OrganizationShort\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "isYou",
					"fieldName": "isYou",
					"type": "Boolean!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "name",
					"fieldName": "name",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "firstName",
					"fieldName": "firstName",
					"type": "String!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "lastName",
					"fieldName": "lastName",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "photo",
					"fieldName": "photo",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "shortname",
					"fieldName": "shortname",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "primaryOrganization",
					"fieldName": "primaryOrganization",
					"type": "Organization",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [
						"OrganizationShort"
					],
					"inlineFragments": []
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "ChatUpdate",
			"possibleTypes": [
				"ChatUpdated",
				"ChatMessageReceived",
				"ChatMessageUpdated",
				"ChatMessageDeleted",
				"ChatLostAccess"
			],
			"fragmentName": "ChatUpdateFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"source": "fragment ChatUpdateFragment on ChatUpdate {\n  __typename\n  ... on ChatMessageReceived {\n    message {\n      __typename\n      ...FullMessage\n    }\n    repeatKey\n  }\n  ... on ChatMessageUpdated {\n    message {\n      __typename\n      ...FullMessage\n    }\n  }\n  ... on ChatMessageDeleted {\n    message {\n      __typename\n      id\n    }\n  }\n  ... on ChatUpdated {\n    chat {\n      __typename\n      ...RoomShort\n    }\n  }\n  ... on ChatLostAccess {\n    lostAccess\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "ChatMessageReceived",
					"possibleTypes": [
						"ChatMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "repeatKey",
							"fieldName": "repeatKey",
							"type": "String",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageUpdated",
					"possibleTypes": [
						"ChatMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FullMessage"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatMessageDeleted",
					"possibleTypes": [
						"ChatMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "message",
							"fieldName": "message",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"description": "State",
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatUpdated",
					"possibleTypes": [
						"ChatUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "chat",
							"fieldName": "chat",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"RoomShort"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "ChatLostAccess",
					"possibleTypes": [
						"ChatLostAccess"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "lostAccess",
							"fieldName": "lostAccess",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "DialogUpdate",
			"possibleTypes": [
				"DialogMessageReceived",
				"DialogMessageUpdated",
				"DialogMessageDeleted",
				"DialogMessageRead",
				"DialogTitleUpdated",
				"DialogDeleted",
				"DialogPhotoUpdated",
				"DialogMuteChanged",
				"DialogMentionedChanged",
				"DialogBump",
				"DialogPeerUpdated"
			],
			"fragmentName": "DialogUpdateFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Chats.ts",
			"source": "fragment DialogUpdateFragment on DialogUpdate {\n  __typename\n  ... on DialogMessageReceived {\n    cid\n    unread\n    globalUnread\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n    silent {\n      __typename\n      mobile\n      desktop\n    }\n    showNotification {\n      __typename\n      mobile\n      desktop\n    }\n  }\n  ... on DialogMessageUpdated {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n  ... on DialogMessageDeleted {\n    cid\n    message: alphaMessage {\n      __typename\n      ...TinyMessage\n    }\n    prevMessage: alphaPrevMessage {\n      __typename\n      ...TinyMessage\n    }\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMessageRead {\n    cid\n    unread\n    globalUnread\n    haveMention\n  }\n  ... on DialogMuteChanged {\n    cid\n    mute\n  }\n  ... on DialogPeerUpdated {\n    cid\n    peer {\n      __typename\n      ... on PrivateRoom {\n        id\n        user {\n          __typename\n          id\n          name\n          photo\n        }\n      }\n      ... on SharedRoom {\n        id\n        title\n        photo\n      }\n    }\n  }\n  ... on DialogDeleted {\n    cid\n    globalUnread\n  }\n  ... on DialogBump {\n    cid\n    globalUnread\n    unread\n    topMessage {\n      __typename\n      ...TinyMessage\n    }\n    haveMention\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "DialogMessageReceived",
					"possibleTypes": [
						"DialogMessageReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "silent",
							"fieldName": "silent",
							"type": "SilentMessageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "mobile",
									"fieldName": "mobile",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "desktop",
									"fieldName": "desktop",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "showNotification",
							"fieldName": "showNotification",
							"type": "SilentMessageInfo!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "mobile",
									"fieldName": "mobile",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "desktop",
									"fieldName": "desktop",
									"type": "Boolean!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageUpdated",
					"possibleTypes": [
						"DialogMessageUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageDeleted",
					"possibleTypes": [
						"DialogMessageDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "message",
							"fieldName": "alphaMessage",
							"type": "ModernMessage!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "prevMessage",
							"fieldName": "alphaPrevMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMessageRead",
					"possibleTypes": [
						"DialogMessageRead"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogMuteChanged",
					"possibleTypes": [
						"DialogMuteChanged"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "mute",
							"fieldName": "mute",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogPeerUpdated",
					"possibleTypes": [
						"DialogPeerUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "peer",
							"fieldName": "peer",
							"type": "Room!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": [
								{
									"typeCondition": "PrivateRoom",
									"possibleTypes": [
										"PrivateRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "user",
											"fieldName": "user",
											"type": "User!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "id",
													"fieldName": "id",
													"type": "ID!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "name",
													"fieldName": "name",
													"type": "String!",
													"isConditional": false,
													"isDeprecated": false
												},
												{
													"responseName": "photo",
													"fieldName": "photo",
													"type": "String",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": []
								},
								{
									"typeCondition": "SharedRoom",
									"possibleTypes": [
										"SharedRoom"
									],
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "title",
											"fieldName": "title",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "photo",
											"fieldName": "photo",
											"type": "String!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": []
								}
							]
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogDeleted",
					"possibleTypes": [
						"DialogDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "DialogBump",
					"possibleTypes": [
						"DialogBump"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "cid",
							"fieldName": "cid",
							"type": "ID!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "globalUnread",
							"fieldName": "globalUnread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "unread",
							"fieldName": "unread",
							"type": "Int!",
							"isConditional": false,
							"isDeprecated": false
						},
						{
							"responseName": "topMessage",
							"fieldName": "topMessage",
							"type": "ModernMessage",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"TinyMessage"
							],
							"inlineFragments": []
						},
						{
							"responseName": "haveMention",
							"fieldName": "haveMention",
							"type": "Boolean!",
							"isConditional": false,
							"isDeprecated": false
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "CommentUpdate",
			"possibleTypes": [
				"CommentReceived",
				"CommentUpdated"
			],
			"fragmentName": "CommentUpdateFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Comments.ts",
			"source": "fragment CommentUpdateFragment on CommentUpdate {\n  __typename\n  ... on CommentReceived {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n  ... on CommentUpdated {\n    comment {\n      __typename\n      ...CommentEntryFragment\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "CommentReceived",
					"possibleTypes": [
						"CommentReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "CommentEntry!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "CommentUpdated",
					"possibleTypes": [
						"CommentUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "comment",
							"fieldName": "comment",
							"type": "CommentEntry!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"CommentEntryFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "FeedUpdate",
			"possibleTypes": [
				"FeedItemReceived",
				"FeedItemUpdated",
				"FeedItemDeleted",
				"FeedRebuildNeeded"
			],
			"fragmentName": "FeedUpdateFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/Feed.ts",
			"source": "fragment FeedUpdateFragment on FeedUpdate {\n  __typename\n  ... on FeedItemReceived {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n  ... on FeedItemUpdated {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n  ... on FeedItemDeleted {\n    item {\n      __typename\n      ...FeedItemFull\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "FeedItemReceived",
					"possibleTypes": [
						"FeedItemReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "item",
							"fieldName": "item",
							"type": "FeedItem!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "FeedItemUpdated",
					"possibleTypes": [
						"FeedItemUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "item",
							"fieldName": "item",
							"type": "FeedItem!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "FeedItemDeleted",
					"possibleTypes": [
						"FeedItemDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "item",
							"fieldName": "item",
							"type": "FeedItem!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"FeedItemFull"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		},
		{
			"typeCondition": "Notification",
			"possibleTypes": [
				"Notification"
			],
			"fragmentName": "NotificationFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"source": "fragment NotificationFragment on Notification {\n  __typename\n  id\n  text\n  content {\n    __typename\n    ... on NewCommentNotification {\n      comment {\n        __typename\n        ...CommentEntryFragment\n      }\n      peer {\n        __typename\n        id\n        peerRoot {\n          __typename\n          ... on CommentPeerRootMessage {\n            message {\n              __typename\n              ... on GeneralMessage {\n                id\n                fallback\n                message\n                sender {\n                  __typename\n                  id\n                  name\n                }\n                senderBadge {\n                  __typename\n                  ...UserBadge\n                }\n              }\n            }\n            chat {\n              __typename\n              ...RoomNano\n            }\n          }\n          ... on CommentPeerRootFeedItem {\n            item {\n              __typename\n              ...FeedItemFull\n            }\n          }\n        }\n        subscription {\n          __typename\n          type\n        }\n      }\n    }\n    ... on NewMatchmakingProfilesNotification {\n      room {\n        __typename\n        enabled\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				},
				{
					"responseName": "id",
					"fieldName": "id",
					"type": "ID!",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "text",
					"fieldName": "text",
					"type": "String",
					"isConditional": false,
					"isDeprecated": false
				},
				{
					"responseName": "content",
					"fieldName": "content",
					"type": "[NotificationContent!]!",
					"isConditional": false,
					"isDeprecated": false,
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": [
						{
							"typeCondition": "NewCommentNotification",
							"possibleTypes": [
								"NewCommentNotification"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "comment",
									"fieldName": "comment",
									"type": "CommentEntry!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentEntryFragment"
									],
									"inlineFragments": []
								},
								{
									"responseName": "peer",
									"fieldName": "peer",
									"type": "CommentsPeer!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "peerRoot",
											"fieldName": "peerRoot",
											"type": "CommentPeerRoot!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "CommentPeerRootMessage",
													"possibleTypes": [
														"CommentPeerRootMessage"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "message",
															"fieldName": "message",
															"type": "GeneralMessage!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"description": "State",
																	"isDeprecated": false
																},
																{
																	"responseName": "fallback",
																	"fieldName": "fallback",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "message",
																	"fieldName": "message",
																	"type": "String",
																	"isConditional": false,
																	"description": "Content",
																	"isDeprecated": false
																},
																{
																	"responseName": "sender",
																	"fieldName": "sender",
																	"type": "User!",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																},
																{
																	"responseName": "senderBadge",
																	"fieldName": "senderBadge",
																	"type": "UserBadge",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		}
																	],
																	"fragmentSpreads": [
																		"UserBadge"
																	],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "chat",
															"fieldName": "chat",
															"type": "Room!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"RoomNano"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "CommentPeerRootFeedItem",
													"possibleTypes": [
														"CommentPeerRootFeedItem"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "item",
															"fieldName": "item",
															"type": "FeedItem!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"FeedItemFull"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "subscription",
											"fieldName": "subscription",
											"type": "CommentSubscription",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "type",
													"fieldName": "type",
													"type": "CommentSubscriptionType",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						},
						{
							"typeCondition": "NewMatchmakingProfilesNotification",
							"possibleTypes": [
								"NewMatchmakingProfilesNotification"
							],
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "room",
									"fieldName": "room",
									"type": "MatchmakingRoom!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "enabled",
											"fieldName": "enabled",
											"type": "Boolean!",
											"isConditional": false,
											"isDeprecated": false
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": []
						}
					]
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": []
		},
		{
			"typeCondition": "NotificationCenterUpdate",
			"possibleTypes": [
				"NotificationReceived",
				"NotificationRead",
				"NotificationDeleted",
				"NotificationUpdated",
				"NotificationContentUpdated"
			],
			"fragmentName": "NotificationCenterUpdateFragment",
			"filePath": "file:///Volumes/Develop/openland-apps/packages/openland-api/queries/MyNotificationsCenter.ts",
			"source": "fragment NotificationCenterUpdateFragment on NotificationCenterUpdate {\n  __typename\n  ... on NotificationReceived {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationUpdated {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      ...NotificationFragment\n    }\n  }\n  ... on NotificationDeleted {\n    center {\n      __typename\n      id\n      unread\n    }\n    notification {\n      __typename\n      id\n    }\n  }\n  ... on NotificationRead {\n    center {\n      __typename\n      id\n      unread\n    }\n  }\n  ... on NotificationContentUpdated {\n    content {\n      __typename\n      ... on UpdatedNotificationContentComment {\n        peer {\n          __typename\n          peerRoot {\n            __typename\n            ... on CommentPeerRootMessage {\n              message {\n                __typename\n                ... on GeneralMessage {\n                  id\n                  fallback\n                  message\n                  sender {\n                    __typename\n                    id\n                    name\n                  }\n                  senderBadge {\n                    __typename\n                    ...UserBadge\n                  }\n                }\n              }\n              chat {\n                __typename\n                ...RoomNano\n              }\n            }\n            ... on CommentPeerRootFeedItem {\n              item {\n                __typename\n                ...FeedItemFull\n              }\n            }\n          }\n          id\n          subscription {\n            __typename\n            type\n          }\n        }\n        comment {\n          __typename\n          ...CommentEntryFragment\n        }\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "__typename",
					"fieldName": "__typename",
					"type": "String!",
					"isConditional": false
				}
			],
			"fragmentSpreads": [],
			"inlineFragments": [
				{
					"typeCondition": "NotificationReceived",
					"possibleTypes": [
						"NotificationReceived"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationUpdated",
					"possibleTypes": [
						"NotificationUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								}
							],
							"fragmentSpreads": [
								"NotificationFragment"
							],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationDeleted",
					"possibleTypes": [
						"NotificationDeleted"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "notification",
							"fieldName": "notification",
							"type": "Notification!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationRead",
					"possibleTypes": [
						"NotificationRead"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "center",
							"fieldName": "center",
							"type": "NotificationCenter!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "ID!",
									"isConditional": false,
									"isDeprecated": false
								},
								{
									"responseName": "unread",
									"fieldName": "unread",
									"type": "Int!",
									"isConditional": false,
									"isDeprecated": false
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				},
				{
					"typeCondition": "NotificationContentUpdated",
					"possibleTypes": [
						"NotificationContentUpdated"
					],
					"fields": [
						{
							"responseName": "__typename",
							"fieldName": "__typename",
							"type": "String!",
							"isConditional": false
						},
						{
							"responseName": "content",
							"fieldName": "content",
							"type": "UpdatedNotificationContent!",
							"isConditional": false,
							"isDeprecated": false,
							"fields": [
								{
									"responseName": "__typename",
									"fieldName": "__typename",
									"type": "String!",
									"isConditional": false
								},
								{
									"responseName": "peer",
									"fieldName": "peer",
									"type": "CommentsPeer!",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										},
										{
											"responseName": "peerRoot",
											"fieldName": "peerRoot",
											"type": "CommentPeerRoot!",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": [
												{
													"typeCondition": "CommentPeerRootMessage",
													"possibleTypes": [
														"CommentPeerRootMessage"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "message",
															"fieldName": "message",
															"type": "GeneralMessage!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																},
																{
																	"responseName": "id",
																	"fieldName": "id",
																	"type": "ID!",
																	"isConditional": false,
																	"description": "State",
																	"isDeprecated": false
																},
																{
																	"responseName": "fallback",
																	"fieldName": "fallback",
																	"type": "String!",
																	"isConditional": false,
																	"isDeprecated": false
																},
																{
																	"responseName": "message",
																	"fieldName": "message",
																	"type": "String",
																	"isConditional": false,
																	"description": "Content",
																	"isDeprecated": false
																},
																{
																	"responseName": "sender",
																	"fieldName": "sender",
																	"type": "User!",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		},
																		{
																			"responseName": "id",
																			"fieldName": "id",
																			"type": "ID!",
																			"isConditional": false,
																			"isDeprecated": false
																		},
																		{
																			"responseName": "name",
																			"fieldName": "name",
																			"type": "String!",
																			"isConditional": false,
																			"isDeprecated": false
																		}
																	],
																	"fragmentSpreads": [],
																	"inlineFragments": []
																},
																{
																	"responseName": "senderBadge",
																	"fieldName": "senderBadge",
																	"type": "UserBadge",
																	"isConditional": false,
																	"isDeprecated": false,
																	"fields": [
																		{
																			"responseName": "__typename",
																			"fieldName": "__typename",
																			"type": "String!",
																			"isConditional": false
																		}
																	],
																	"fragmentSpreads": [
																		"UserBadge"
																	],
																	"inlineFragments": []
																}
															],
															"fragmentSpreads": [],
															"inlineFragments": []
														},
														{
															"responseName": "chat",
															"fieldName": "chat",
															"type": "Room!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"RoomNano"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												},
												{
													"typeCondition": "CommentPeerRootFeedItem",
													"possibleTypes": [
														"CommentPeerRootFeedItem"
													],
													"fields": [
														{
															"responseName": "__typename",
															"fieldName": "__typename",
															"type": "String!",
															"isConditional": false
														},
														{
															"responseName": "item",
															"fieldName": "item",
															"type": "FeedItem!",
															"isConditional": false,
															"isDeprecated": false,
															"fields": [
																{
																	"responseName": "__typename",
																	"fieldName": "__typename",
																	"type": "String!",
																	"isConditional": false
																}
															],
															"fragmentSpreads": [
																"FeedItemFull"
															],
															"inlineFragments": []
														}
													],
													"fragmentSpreads": []
												}
											]
										},
										{
											"responseName": "id",
											"fieldName": "id",
											"type": "ID!",
											"isConditional": false,
											"isDeprecated": false
										},
										{
											"responseName": "subscription",
											"fieldName": "subscription",
											"type": "CommentSubscription",
											"isConditional": false,
											"isDeprecated": false,
											"fields": [
												{
													"responseName": "__typename",
													"fieldName": "__typename",
													"type": "String!",
													"isConditional": false
												},
												{
													"responseName": "type",
													"fieldName": "type",
													"type": "CommentSubscriptionType",
													"isConditional": false,
													"isDeprecated": false
												}
											],
											"fragmentSpreads": [],
											"inlineFragments": []
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "comment",
									"fieldName": "comment",
									"type": "CommentEntry",
									"isConditional": false,
									"isDeprecated": false,
									"fields": [
										{
											"responseName": "__typename",
											"fieldName": "__typename",
											"type": "String!",
											"isConditional": false
										}
									],
									"fragmentSpreads": [
										"CommentEntryFragment"
									],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": []
				}
			]
		}
	],
	"typesUsed": [
		{
			"kind": "InputObjectType",
			"name": "CreateOrganizationInput",
			"fields": [
				{
					"name": "id",
					"type": "ID"
				},
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "personal",
					"type": "Boolean!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "isCommunity",
					"type": "Boolean"
				},
				{
					"name": "isPrivate",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageRefInput",
			"fields": [
				{
					"name": "uuid",
					"type": "String!"
				},
				{
					"name": "crop",
					"type": "ImageCropInput"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ImageCropInput",
			"fields": [
				{
					"name": "x",
					"type": "Int!"
				},
				{
					"name": "y",
					"type": "Int!"
				},
				{
					"name": "w",
					"type": "Int!"
				},
				{
					"name": "h",
					"type": "Int!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ProfileInput",
			"fields": [
				{
					"name": "firstName",
					"type": "String"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "instagram",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "facebook",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "PushType",
			"values": [
				{
					"name": "WEB_PUSH",
					"isDeprecated": false
				},
				{
					"name": "IOS",
					"isDeprecated": false
				},
				{
					"name": "ANDROID",
					"isDeprecated": false
				},
				{
					"name": "SAFARI",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "shortname",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "about",
					"type": "String"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "AppStorageValueInput",
			"fields": [
				{
					"name": "key",
					"type": "String!"
				},
				{
					"name": "value",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DialogKind",
			"values": [
				{
					"name": "PRIVATE",
					"isDeprecated": false
				},
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomKind",
			"values": [
				{
					"name": "INTERNAL",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC",
					"isDeprecated": false
				},
				{
					"name": "GROUP",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SharedRoomMembershipStatus",
			"values": [
				{
					"name": "MEMBER",
					"isDeprecated": false
				},
				{
					"name": "REQUESTED",
					"isDeprecated": false
				},
				{
					"name": "LEFT",
					"isDeprecated": false
				},
				{
					"name": "KICKED",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "RoomMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MessageReactionType",
			"values": [
				{
					"name": "LIKE",
					"isDeprecated": false
				},
				{
					"name": "THUMB_UP",
					"isDeprecated": false
				},
				{
					"name": "JOY",
					"isDeprecated": false
				},
				{
					"name": "SCREAM",
					"isDeprecated": false
				},
				{
					"name": "CRYING",
					"isDeprecated": false
				},
				{
					"name": "ANGRY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MentionInput",
			"fields": [
				{
					"name": "chatId",
					"type": "ID"
				},
				{
					"name": "userId",
					"type": "ID"
				},
				{
					"name": "userIds",
					"type": "[ID!]"
				},
				{
					"name": "all",
					"type": "Boolean"
				},
				{
					"name": "offset",
					"type": "Int!"
				},
				{
					"name": "length",
					"type": "Int!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "FileAttachmentInput",
			"fields": [
				{
					"name": "fileId",
					"type": "String!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MessageSpanInput",
			"fields": [
				{
					"name": "offset",
					"type": "Int!"
				},
				{
					"name": "length",
					"type": "Int!"
				},
				{
					"name": "type",
					"type": "MessageSpanType!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MessageSpanType",
			"values": [
				{
					"name": "Bold",
					"isDeprecated": false
				},
				{
					"name": "Italic",
					"isDeprecated": false
				},
				{
					"name": "Irony",
					"isDeprecated": false
				},
				{
					"name": "InlineCode",
					"isDeprecated": false
				},
				{
					"name": "CodeBlock",
					"isDeprecated": false
				},
				{
					"name": "Insane",
					"isDeprecated": false
				},
				{
					"name": "Loud",
					"isDeprecated": false
				},
				{
					"name": "Rotating",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomInviteInput",
			"fields": [
				{
					"name": "userId",
					"type": "ID!"
				},
				{
					"name": "role",
					"type": "RoomMemberRole!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "OrganizationMemberRole",
			"values": [
				{
					"name": "OWNER",
					"isDeprecated": false
				},
				{
					"name": "ADMIN",
					"isDeprecated": false
				},
				{
					"name": "MEMBER",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUserNotificaionSettingsInput",
			"fields": [
				{
					"name": "mute",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "RoomUpdateInput",
			"fields": [
				{
					"name": "title",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "description",
					"type": "String"
				},
				{
					"name": "socialImageRef",
					"type": "ImageRefInput"
				},
				{
					"name": "kind",
					"type": "SharedRoomKind"
				}
			]
		},
		{
			"kind": "ScalarType",
			"name": "Date",
			"description": "Date type format, serialized as UNIX-time in string"
		},
		{
			"kind": "EnumType",
			"name": "CommentSubscriptionType",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MediaStreamState",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "GlobalSearchEntryKind",
			"values": [
				{
					"name": "ORGANIZATION",
					"isDeprecated": false
				},
				{
					"name": "USER",
					"isDeprecated": false
				},
				{
					"name": "SHAREDROOM",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "FeedChannelSubscriberRole",
			"values": [
				{
					"name": "Creator",
					"isDeprecated": false
				},
				{
					"name": "Editor",
					"isDeprecated": false
				},
				{
					"name": "Subscriber",
					"isDeprecated": false
				},
				{
					"name": "None",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "SlideInput",
			"fields": [
				{
					"name": "type",
					"type": "SlideType!"
				},
				{
					"name": "text",
					"type": "String"
				},
				{
					"name": "spans",
					"type": "[MessageSpanInput!]"
				},
				{
					"name": "mentions",
					"type": "[MentionInput!]"
				},
				{
					"name": "cover",
					"type": "ImageRefInput"
				},
				{
					"name": "coverAlign",
					"type": "SlideCoverAlign"
				},
				{
					"name": "attachments",
					"type": "[ID!]"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SlideType",
			"values": [
				{
					"name": "Text",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SlideCoverAlign",
			"values": [
				{
					"name": "Top",
					"isDeprecated": false
				},
				{
					"name": "Bottom",
					"isDeprecated": false
				},
				{
					"name": "Cover",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MatchmakingRoomInput",
			"fields": [
				{
					"name": "enabled",
					"type": "Boolean"
				},
				{
					"name": "questions",
					"type": "[MatchmakingQuestionInput!]"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MatchmakingQuestionInput",
			"fields": [
				{
					"name": "id",
					"type": "ID"
				},
				{
					"name": "type",
					"type": "MatchmakingQuestionType!"
				},
				{
					"name": "title",
					"type": "String!"
				},
				{
					"name": "subtitle",
					"type": "String"
				},
				{
					"name": "tags",
					"type": "[String!]"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "MatchmakingQuestionType",
			"values": [
				{
					"name": "Text",
					"isDeprecated": false
				},
				{
					"name": "Multiselect",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MatchmakingProfileFillInput",
			"fields": [
				{
					"name": "answers",
					"type": "[MatchmakingAnswerInput!]!"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "MatchmakingAnswerInput",
			"fields": [
				{
					"name": "questionId",
					"type": "ID!"
				},
				{
					"name": "text",
					"type": "String"
				},
				{
					"name": "tags",
					"type": "[String!]"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateOrganizationProfileInput",
			"fields": [
				{
					"name": "name",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "websiteTitle",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "facebook",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "instagram",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "contacts",
					"type": "[ContactPersonInput!]"
				},
				{
					"name": "alphaPublished",
					"type": "Boolean"
				},
				{
					"name": "alphaEditorial",
					"type": "Boolean"
				},
				{
					"name": "alphaFeatured",
					"type": "Boolean"
				},
				{
					"name": "alphaIsPrivate",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ContactPersonInput",
			"fields": [
				{
					"name": "name",
					"type": "String!"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "position",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "link",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "DebugEmailType",
			"values": [
				{
					"name": "WELCOME",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "ACCOUNT_DEACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_REMOVED",
					"isDeprecated": false
				},
				{
					"name": "MEMBERSHIP_LEVEL_CHANGED",
					"isDeprecated": false
				},
				{
					"name": "INVITE",
					"isDeprecated": false
				},
				{
					"name": "MEMBER_JOINED",
					"isDeprecated": false
				},
				{
					"name": "SIGNUP_CODE",
					"isDeprecated": false
				},
				{
					"name": "SIGIN_CODE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGE",
					"isDeprecated": false
				},
				{
					"name": "UNREAD_MESSAGES",
					"isDeprecated": false
				},
				{
					"name": "PUBLIC_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "PRIVATE_ROOM_INVITE",
					"isDeprecated": false
				},
				{
					"name": "ROOM_INVITE_ACCEPTED",
					"isDeprecated": false
				},
				{
					"name": "WEEKLY_DIGEST",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAdminRole",
			"values": [
				{
					"name": "SUPER_ADMIN",
					"isDeprecated": false
				},
				{
					"name": "SOFTWARE_DEVELOPER",
					"isDeprecated": false
				},
				{
					"name": "EDITOR",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "SuperAccountState",
			"values": [
				{
					"name": "PENDING",
					"isDeprecated": false
				},
				{
					"name": "ACTIVATED",
					"isDeprecated": false
				},
				{
					"name": "SUSPENDED",
					"isDeprecated": false
				},
				{
					"name": "DELETED",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "CreateProfileInput",
			"description": "Deprecated",
			"fields": [
				{
					"name": "firstName",
					"type": "String!"
				},
				{
					"name": "lastName",
					"type": "String"
				},
				{
					"name": "photoRef",
					"type": "ImageRefInput"
				},
				{
					"name": "phone",
					"type": "String"
				},
				{
					"name": "email",
					"type": "String"
				},
				{
					"name": "about",
					"type": "String"
				},
				{
					"name": "location",
					"type": "String"
				},
				{
					"name": "website",
					"type": "String"
				},
				{
					"name": "linkedin",
					"type": "String"
				},
				{
					"name": "twitter",
					"type": "String"
				},
				{
					"name": "facebook",
					"type": "String"
				},
				{
					"name": "primaryOrganization",
					"type": "ID"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "UpdateSettingsInput",
			"fields": [
				{
					"name": "emailFrequency",
					"type": "EmailFrequency"
				},
				{
					"name": "desktop",
					"type": "PlatformNotificationSettingsInput"
				},
				{
					"name": "mobile",
					"type": "PlatformNotificationSettingsInput"
				},
				{
					"name": "countUnreadChats",
					"type": "Boolean"
				},
				{
					"name": "excludeMutedChats",
					"type": "Boolean"
				},
				{
					"name": "notificationsDelay",
					"type": "NotificationsDelay",
					"description": "Deprecated"
				},
				{
					"name": "desktopNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "mobileNotifications",
					"type": "NotificationMessages"
				},
				{
					"name": "commentNotifications",
					"type": "NotificationComments"
				},
				{
					"name": "commentNotificationsDelivery",
					"type": "CommentsNotificationDelivery"
				},
				{
					"name": "mobileAlert",
					"type": "Boolean"
				},
				{
					"name": "mobileIncludeText",
					"type": "Boolean"
				},
				{
					"name": "mute",
					"type": "Boolean"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EmailFrequency",
			"values": [
				{
					"name": "NEVER",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				},
				{
					"name": "HOUR_1",
					"isDeprecated": false
				},
				{
					"name": "HOUR_24",
					"isDeprecated": false
				},
				{
					"name": "WEEK_1",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "PlatformNotificationSettingsInput",
			"fields": [
				{
					"name": "direct",
					"type": "ChatTypeNotificationSettingsInput"
				},
				{
					"name": "secretChat",
					"type": "ChatTypeNotificationSettingsInput"
				},
				{
					"name": "organizationChat",
					"type": "ChatTypeNotificationSettingsInput"
				},
				{
					"name": "communityChat",
					"type": "ChatTypeNotificationSettingsInput"
				},
				{
					"name": "comments",
					"type": "ChatTypeNotificationSettingsInput"
				},
				{
					"name": "notificationPreview",
					"type": "NotificationPreview"
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "ChatTypeNotificationSettingsInput",
			"fields": [
				{
					"name": "showNotification",
					"type": "Boolean!"
				},
				{
					"name": "sound",
					"type": "Boolean!"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationPreview",
			"values": [
				{
					"name": "NAME_TEXT",
					"isDeprecated": false
				},
				{
					"name": "NAME",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationsDelay",
			"values": [
				{
					"name": "NONE",
					"isDeprecated": false
				},
				{
					"name": "MIN_1",
					"isDeprecated": false
				},
				{
					"name": "MIN_15",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationMessages",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "NotificationComments",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "DIRECT",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "CommentsNotificationDelivery",
			"values": [
				{
					"name": "ALL",
					"isDeprecated": false
				},
				{
					"name": "NONE",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "InputObjectType",
			"name": "Event",
			"fields": [
				{
					"name": "id",
					"type": "String!"
				},
				{
					"name": "event",
					"type": "String!"
				},
				{
					"name": "params",
					"type": "String"
				},
				{
					"name": "time",
					"type": "Date"
				},
				{
					"name": "os",
					"type": "String"
				},
				{
					"name": "deviceModel",
					"type": "String"
				},
				{
					"name": "platform",
					"type": "EventPlatform"
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "EventPlatform",
			"values": [
				{
					"name": "Android",
					"isDeprecated": false
				},
				{
					"name": "iOS",
					"isDeprecated": false
				},
				{
					"name": "WEB",
					"isDeprecated": false
				},
				{
					"name": "MobileWeb",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ConferencePeerConnectionState",
			"description": "Deprecated",
			"values": [
				{
					"name": "WAIT_OFFER",
					"isDeprecated": false
				},
				{
					"name": "NEED_OFFER",
					"isDeprecated": false
				},
				{
					"name": "WAIT_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "NEED_ANSWER",
					"isDeprecated": false
				},
				{
					"name": "READY",
					"isDeprecated": false
				}
			]
		},
		{
			"kind": "EnumType",
			"name": "ModernMessageButtonStyle",
			"values": [
				{
					"name": "DEFAULT",
					"isDeprecated": false
				},
				{
					"name": "LIGHT",
					"isDeprecated": false
				}
			]
		}
	]
}