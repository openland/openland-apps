// WARNING! THIS IS AUTOGENERATED FILE. DO NOT EDIT!

import { typedMutation } from 'openland-x-graphql/typed';
import { typedQuery } from 'openland-x-graphql/typed';
import * as Raw from './Parcels';
import * as Types from '../Types';

export const BlocksConnectionQuery = typedQuery<Types.BlocksConnectionQuery, Types.BlocksConnectionQueryVariables>(Raw.BlocksConnectionQuery);
export const BlockQuery = typedQuery<Types.BlockQuery, Types.BlockQueryVariables>(Raw.BlockQuery);
export const ParcelsConnectionQuery = typedQuery<Types.ParcelsConnectionQuery, Types.ParcelsConnectionQueryVariables>(Raw.ParcelsConnectionQuery);
export const ParcelsFavoritesQuery = typedQuery<Types.ParcelsFavoritesQuery, {}>(Raw.ParcelsFavoritesQuery);
export const ParcelsFavoritesCountQuery = typedQuery<Types.ParcelsFavoritesCountQuery, {}>(Raw.ParcelsFavoritesCountQuery);
export const ParcelQuery = typedQuery<Types.ParcelQuery, Types.ParcelQueryVariables>(Raw.ParcelQuery);
export const ParcelsTileOverlayQuery = typedQuery<Types.ParcelsTileOverlayQuery, Types.ParcelsTileOverlayQueryVariables>(Raw.ParcelsTileOverlayQuery);
export const ParcelsMapSearchQuery = typedQuery<Types.ParcelsMapSearchQuery, Types.ParcelsMapSearchQueryVariables>(Raw.ParcelsMapSearchQuery);
export const ParcelsPointOverlayQuery = typedQuery<Types.ParcelsPointOverlayQuery, Types.ParcelsPointOverlayQueryVariables>(Raw.ParcelsPointOverlayQuery);
export const BlocksTileOverlayQuery = typedQuery<Types.BlocksTileOverlayQuery, Types.BlocksTileOverlayQueryVariables>(Raw.BlocksTileOverlayQuery);
export const ParcelAlterMutation = typedMutation<Types.ParcelAlterMutation, Types.ParcelAlterMutationVariables>(Raw.ParcelAlterMutation);
export const ParcelLikeMutation = typedMutation<Types.ParcelLikeMutation, Types.ParcelLikeMutationVariables>(Raw.ParcelLikeMutation);
export const ParcelUnlikeMutation = typedMutation<Types.ParcelUnlikeMutation, Types.ParcelUnlikeMutationVariables>(Raw.ParcelUnlikeMutation);
export const ParcelsStatsQuery = typedQuery<Types.ParcelsStatsQuery, Types.ParcelsStatsQueryVariables>(Raw.ParcelsStatsQuery);
export const ParcelsSearchQuery = typedQuery<Types.ParcelsSearchQuery, Types.ParcelsSearchQueryVariables>(Raw.ParcelsSearchQuery);
export const ParcelNotesMutation = typedMutation<Types.ParcelNotesMutation, Types.ParcelNotesMutationVariables>(Raw.ParcelNotesMutation);