#
# Updates
#

fragment ShortUpdate on UpdateEvent {
    ... on UpdateMyProfileChanged {
        user {
            id
            firstName
            lastName
        }
    }
    ... on UpdateChatDraftChanged {
        cid
        draft
        version
        date
    }
    ... on UpdateSettingsChanged {
        settings {
            ...SettingsFull
        }
    }
    ... on UpdateChatMessage {
        cid
        message {
            ...UpdateMessage
        }
    }
    ... on UpdateChatMessageDeleted {
        cid
        mid
        seq
    }
    ... on UpdateChatRead {
        cid
        seq
    }
}

#
# Sequences
#

fragment ShortSequenceChat on SequenceChat {
    id
    cid
    draft {
        version
        message
        date
    }
    states {
        counter
        mentions
        readSeq
    }
    room {
        ...RoomNano
    }
    topMessage {
        ...UpdateMessage
    }
}

fragment ShortSequenceCommon on SequenceCommon {
    id
    settings {
        ...SettingsFull
    }
}

fragment ShortSequence on Sequence {
    id
    ... on SequenceChat {
        id
        ...ShortSequenceChat
    }
    ... on SequenceCommon {
        id
        ...ShortSequenceCommon
    }
}

#
# Watch
#

subscription WatchUpdates {
    watchUpdates {
        ... on UpdateSubscriptionStarted {
            seq
            state
        }
        ... on UpdateSubscriptionEvent {
            seq
            pts
            sequence {
                id
            }
            event {
                ...ShortUpdate
            }
        }
    }
}

#
# State
#

query GetState {
    updatesState {
        seq
        state
        sequences {
            pts
            sequence {
                ...ShortSequence
            }
        }
    }
}

query GetDifference($state: String!) {
    updatesDifference(state: $state) {
        seq
        state
        hasMore
        sequences {
            after
            events {
                pts
                event {
                    ...ShortUpdate
                }
            }
            sequence {
                ...ShortSequence
            }
        }
    }
}

query GetSequenceState($id: ID!) {
    sequenceState(id: $id) {
        pts
        seq
        sequence {
            ...ShortSequence
        }
    }
}

query GetSequenceDifference($id: ID!, $pts: Int!) {
    sequenceDifference(id: $id, pts: $pts) {
        sequence {
            ...ShortSequence
        }
        events {
            pts
            event {
                ...ShortUpdate
            }
        }
        after
        hasMore
        seq
    }
}

query GetInitialDialogs($after: String) {
    syncUserChats(first: 500, after: $after) {
        items {
            sequence {
                ...ShortSequence
            }
            pts
        }
        cursor
    }
}

#
# Entities
#

fragment UpdateUser on User {
    id
    name
    photo
}

query UpdateUsers($ids: [ID!]!) {
    users(ids: $ids) {
        ...UpdateUser
    }
}

fragment UpdateMessage on ModernMessage {
    id
    seq
    date
    sender {
        id
    }

    #
    # Content
    #

    message
    fallback
    spans {
        ...MessageSpan
    }
    ... on GeneralMessage {
        id
        edited
        isMentioned
        commentsCount
        attachments {
            ...MessageAttachments
        }
        quotedMessages {
            ...QuotedMessage
        }
        reactionCounters {
            ...MessageReactionCounter
        }
        overrideAvatar {
            uuid
            crop {
                x
                y
                w
                h
            }
        }
        overrideName
    }

    ... on StickerMessage {
        id
        commentsCount
        quotedMessages {
            ...QuotedMessage
        }
        sticker {
            ...StickerFragment
        }
        reactionCounters {
            ...MessageReactionCounter
        }
        overrideAvatar {
            uuid
            crop {
                x
                y
                w
                h
            }
        }
        overrideName
    }

    ... on ServiceMessage {
        id
        isMentioned
        serviceMetadata {
            ...ServiceMessageMetadata
        }
    }
}
