fragment DiscoverSharedRoom on SharedRoom {
    id
    kind
    title
    photo
    membersCount
    membership
    organization {
        id
        name
        photo
    }
    premiumSettings {
        id
        price
        interval
    }
    isPremium
    premiumPassIsActive
}

query ExploreRooms($seed: Int!) {
    discoverNewAndGrowing(first: 5, seed: $seed) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
    discoverPopularNow(first: 5) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
    suggestedRooms: betaSuggestedRooms {
        ...DiscoverSharedRoom
    }
    discoverTopPremium(first: 5) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
    discoverTopFree(first: 5) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
    isDiscoverDone: betaIsDiscoverDone
}

query SuggestedRooms {
    suggestedRooms: betaSuggestedRooms {
        ... on SharedRoom {
            id
            kind
            title
            photo
            membersCount
            membership
            organization {
                id
                name
                photo
            }
        }
    }
    isDiscoverDone: betaIsDiscoverDone
}
query UserAvailableRooms($first: Int!, $after: String, $query: String) {
    alphaUserAvailableRooms(first: $first, after: $after, query: $query) {
        edges {
            node {
                ...DiscoverSharedRoom
            }
            cursor
        }
        pageInfo {
            hasNextPage
        }
    }
}
query GlobalSearch($query: String!, $kinds: [GlobalSearchEntryKind!]) {
    items: alphaGlobalSearch(query: $query, kinds: $kinds) {
        ... on Organization {
            id
            name
            about
            photo
            shortname
            isCommunity: alphaIsCommunity
        }
        ... on User {
            ...UserShort
        }
        ... on SharedRoom {
            id
            kind
            title
            canSendMessage
            roomPhoto: photo
            membersCount
            membership
            organization {
                id
                name
                photo
            }
        }
    }
}
query DiscoverNextPage($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {
    betaNextDiscoverPage: gammaNextDiscoverPage(
        selectedTagsIds: $selectedTagsIds
        excudedGroupsIds: $excudedGroupsIds
    ) {
        chats {
            ...RoomShort
        }
        tagGroup {
            id
            title
            subtitle
            tags {
                id
                title
            }
        }
    }
}
mutation BetaSubmitNextDiscover($selectedTagsIds: [String!]!, $excudedGroupsIds: [String!]!) {
    betaSubmitNextDiscover(selectedTagsIds: $selectedTagsIds, excudedGroupsIds: $excudedGroupsIds) {
        tagGroup {
            id
        }
    }
}
mutation BetaDiscoverSkip($selectedTagsIds: [String!]!) {
    betaDiscoverSkip(selectedTagsIds: $selectedTagsIds) {
        tagGroup {
            id
        }
    }
}
query DiscoverIsDone {
    betaIsDiscoverDone
}
query DiscoverState {
    dialogs(first: 1) {
        items {
            id
        }
    }
}

query DiscoverPopularNow($first: Int!, $after: String) {
    discoverPopularNow(first: $first, after: $after) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
}
query DiscoverNewAndGrowing($first: Int!, $seed: Int!, $after: String) {
    discoverNewAndGrowing(first: $first, seed: $seed, after: $after) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
}
query DiscoverTopPremium($first: Int!, $after: String) {
    discoverTopPremium(first: $first, after: $after) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
}
query DiscoverTopFree($first: Int!, $after: String) {
    discoverTopFree(first: $first, after: $after) {
        items {
            ...DiscoverSharedRoom
        }
        cursor
    }
}
query DiscoverCollections($first: Int!, $after: String) {
    discoverCollections(first: $first, after: $after) {
        items {
            id
            title
            chatsCount
            image {
                uuid
                crop {
                    x
                    y
                    w
                    h
                }
            }
        }
        cursor
    }
}
