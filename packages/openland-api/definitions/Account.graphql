query Account {
    me: me {
        id
        name
        photo
        shortname
        email
        isBot
        inContacts
        primaryOrganization {
            id
            name
            shortname
        }
    }
    myProfile {
        id
        authEmail
    }
    sessionState: sessionState {
        isLoggedIn
        isActivated
        isProfileCreated
        isAccountActivated
        isAccountExists
        isAccountPicked
        isCompleted
        isBlocked
    }
    myPermissions {
        roles
    }
}

query AccountSettings {
    me: me {
        ...UserShort
        audienceSize
    }
    myProfile {
        id
        authEmail
    }
    organizations: myOrganizations {
        ...OrganizationShort
    }
}

subscription SettingsWatch {
    watchSettings {
        ...SettingsFull
    }
}

mutation CreateOrganization($input: CreateOrganizationInput!) {
    organization: createOrganization(input: $input) {
        id
        name
    }
}

query AccountInviteInfo($inviteKey: String!) {
    invite: alphaInviteInfo(key: $inviteKey) {
        id
        key
        orgId
        title
        photo
        joined
        creator {
            ...UserShort
        }
        forEmail
        forName
        membersCount
        organization {
            id
            isCommunity: alphaIsCommunity
            about
        }
    }
}

query AccountAppInviteInfo($inviteKey: String!) {
    invite: alphaInviteInfo(key: $inviteKey) {
        id
        creator {
            ...UserShort
        }
    }
    appInvite: appInviteInfo(key: $inviteKey) {
        inviter {
            ...UserShort
        }
    }
}
query AccountAppInvite {
    invite: appInvite
}
mutation AccountInviteJoin($inviteKey: String!) {
    alphaJoinInvite(key: $inviteKey)
}
query ProfilePrefill {
    prefill: myProfilePrefill {
        firstName
        lastName
        picture
    }
}
mutation ReportOnline($active: Boolean, $platform: String) {
    presenceReportOnline(timeout: 5000, active: $active, platform: $platform)
}
mutation RegisterPush($endpoint: String!, $type: PushType!) {
    registerPush(endpoint: $endpoint, type: $type)
}
query FetchPushSettings {
    pushSettings {
        webPushKey
    }
}
mutation RegisterWebPush($endpoint: String!) {
    registerWebPush(endpoint: $endpoint)
}
