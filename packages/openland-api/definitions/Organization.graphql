fragment OrganizationProfileFull on OrganizationProfile {
    id
    name
    photoRef {
        uuid
        crop {
            x
            y
            w
            h
        }
    }
    website
    websiteTitle
    about
    twitter
    facebook
    linkedin
    instagram

    shortname
    private: alphaIsPrivate
    featured: alphaFeatured
    published: alphaPublished
    editorial: alphaEditorial
}
fragment OrganizationFragment on Organization {
    id
    isMine
    superAccountId
    name
    photo
    shortname
    website
    websiteTitle
    about
    twitter
    facebook
    linkedin
    instagram
    membersCount
    isPrivate: alphaIsPrivate
    isOwner: betaIsOwner
    isAdmin: betaIsAdmin
    featured: alphaFeatured
    isCommunity: alphaIsCommunity
    roomsCount: betaPublicRoomsCount
}
query MyOrganizations {
    myOrganizations {
        ...OrganizationShort

        isPrimary: betaIsPrimary
    }
}
mutation UpdateOrganization($input: UpdateOrganizationProfileInput!, $organizationId: ID) {
    updateOrganizationProfile(input: $input, id: $organizationId) {
        ...OrganizationProfileFull
    }
}
query OrganizationWithoutMembers($organizationId: ID!) {
    organization(id: $organizationId) {
        ...OrganizationFragment
    }
}
query OrganizationMembersShort($organizationId: ID!) {
    organization(id: $organizationId) {
        ...OrganizationFragment
        members: alphaOrganizationMembers {
            user {
                id
            }
        }
    }
}
query OrganizationMembers($organizationId: ID!, $first: Int, $after: ID) {
    organization(id: $organizationId) {
        id
        members: alphaOrganizationMembers(first: $first, after: $after) {
            role
            user {
                ...UserShort
            }
        }
    }
}
query OrganizationProfile($organizationId: ID!) {
    organizationProfile(id: $organizationId) {
        ...OrganizationProfileFull
    }
}
mutation OrganizationChangeMemberRole(
    $memberId: ID!
    $newRole: OrganizationMemberRole!
    $organizationId: ID!
) {
    alphaOrganizationChangeMemberRole(
        memberId: $memberId
        newRole: $newRole
        organizationId: $organizationId
    )
}
mutation OrganizationAddMember($userIds: [ID!], $organizationId: ID!) {
    alphaOrganizationMemberAdd(userIds: $userIds, organizationId: $organizationId) {
        role
        user {
            ...UserShort
        }
    }
}
query OrganizationPublicInvite($organizationId: ID) {
    publicInvite: alphaOrganizationInviteLink(organizationId: $organizationId) {
        id
        key
        ttl
    }
}
mutation OrganizationCreatePublicInvite($expirationDays: Int, $organizationId: ID) {
    alphaOrganizationRefreshInviteLink(
        expirationDays: $expirationDays
        organizationId: $organizationId
    ) {
        id
        key
        ttl
    }
}
mutation DeleteOrganization($organizationId: ID!) {
    deleteOrganization(id: $organizationId)
}
mutation OrganizationMemberRemove($userId: ID!, $organizationId: ID!) {
    betaOrganizationMemberRemove(userId: $userId, organizationId: $organizationId) {
        id
    }
}
mutation OrganizationActivateByInvite($inviteKey: String!) {
    joinAppInvite(key: $inviteKey)
}
query OrganizationPublicRooms($organizationId: ID!, $first: Int!, $after: ID) {
    organizationPublicRooms(id: $organizationId, first: $first, after: $after) {
        items {
            ...SharedRoomView
        }
        cursor
    }
}
query RoomSocialImage($roomId: ID!) {
    roomSocialImage(roomId: $roomId)
}
