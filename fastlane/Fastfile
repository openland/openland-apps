fastlane_version '2.53.1'

#
# Resolve versions
#

versionJson = read_json(json_path: "./packages/openland-mobile/version.json")
runtimeVersion = versionJson[:runtimeVersion]
build = Integer(ENV['BUILD_COUNTER'] || '1')
version = "#{runtimeVersion}.#{build}"
updatesPath = "mobile/v#{runtimeVersion}"

if ENV['RELEASE_CHANNEL'] === 'staging'
    version = "999.#{build}"
    updatesPath = "mobile-staging/v#{runtimeVersion}"
end

updatesUrl = "https://updates.openland.com/#{updatesPath}"
updatesAssetsUrl = "https://updates.openland.com/assets/"

#
# Configure
#

lane :configure do
    # Notify teamcity
    puts("##teamcity[buildNumber '#{version}']")

    # Configure ios versions
    increment_version_number(xcodeproj: './ios/openland.xcodeproj', version_number: version)
    increment_build_number(xcodeproj: './ios/openland.xcodeproj', build_number: build)
end

#
# Build
#

lane :build_bundle do
    Dir.chdir("..") do
        sh('rm', '-fr', './build/expo')
        sh('expo', 'export', '--dump-sourcemap', '--asset-url', updatesAssetsUrl, '--public-url', updatesUrl, '--output-dir', './build/expo')
    end
end

lane :build_android do
    gradle(task: 'clean', project_dir: 'android/', flags: '--info')
    gradle(task: 'bundle', build_type: 'Release', project_dir: 'android/')
end

lane :build_ios do
    get_provisioning_profile(app_identifier: 'com.openland.app')
    get_provisioning_profile(app_identifier: 'com.openland.app.openland-share-ex')
    build_app(
        scheme: 'Production', 
        clean: true,
        workspace: './ios/openland.xcworkspace',
        output_directory: './fastlane/build',
        output_name: 'Openland.ipa'
    )
end

lane :build do
    build_bundle
    build_android
    build_ios
end

#
# Upload
#

lane :upload_ios do
    upload_to_testflight(ipa: './fastlane/build/Openland.ipa', skip_waiting_for_build_processing: true)
end

lane :upload_android do
   upload_to_play_store(aab: './android/app/build/outputs/bundle/release/app-release.aab', track: 'internal')
end

lane :upload_bundle do
    Dir.chdir("../build/expo/assets") do
        sh('gsutil', 'rsync', '.', 'gs://openland-updates/mobile/assets/')
    end
    Dir.chdir("../build/expo/bundles") do
        sh('gsutil', 'cp', '*.js', "gs://openland-updates/#{updatesPath}/bundles/")
    end
    Dir.chdir("../build/expo") do
        sh('gsutil', 'cp', './android-index.json', "gs://openland-updates/#{updatesPath}/")
        sh('gsutil', 'cp', './ios-index.json', "gs://openland-updates/#{updatesPath}/")
    end
end

lane :upload do
    upload_bundle
    upload_android
    upload_ios
end

#
# Release
#

lane :release do
    build
    upload
end